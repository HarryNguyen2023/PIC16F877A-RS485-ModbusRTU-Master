

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 17 08:25:46 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Version 2.40
    42                           ; Generated 17/11/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     000E                     	;# 
    92     000F                     	;# 
    93     0010                     	;# 
    94     0011                     	;# 
    95     0012                     	;# 
    96     0013                     	;# 
    97     0014                     	;# 
    98     0015                     	;# 
    99     0015                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     0019                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     0087                     	;# 
   115     0088                     	;# 
   116     0089                     	;# 
   117     008C                     	;# 
   118     008D                     	;# 
   119     008E                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009C                     	;# 
   187     009D                     	;# 
   188     009E                     	;# 
   189     009F                     	;# 
   190     010C                     	;# 
   191     010D                     	;# 
   192     010E                     	;# 
   193     010F                     	;# 
   194     018C                     	;# 
   195     018D                     	;# 
   196     0000                     	;# 
   197     0001                     	;# 
   198     0002                     	;# 
   199     0003                     	;# 
   200     0004                     	;# 
   201     0005                     	;# 
   202     0006                     	;# 
   203     0007                     	;# 
   204     0008                     	;# 
   205     0009                     	;# 
   206     000A                     	;# 
   207     000B                     	;# 
   208     000C                     	;# 
   209     000D                     	;# 
   210     000E                     	;# 
   211     000E                     	;# 
   212     000F                     	;# 
   213     0010                     	;# 
   214     0011                     	;# 
   215     0012                     	;# 
   216     0013                     	;# 
   217     0014                     	;# 
   218     0015                     	;# 
   219     0015                     	;# 
   220     0016                     	;# 
   221     0017                     	;# 
   222     0018                     	;# 
   223     0019                     	;# 
   224     001A                     	;# 
   225     001B                     	;# 
   226     001B                     	;# 
   227     001C                     	;# 
   228     001D                     	;# 
   229     001E                     	;# 
   230     001F                     	;# 
   231     0081                     	;# 
   232     0085                     	;# 
   233     0086                     	;# 
   234     0087                     	;# 
   235     0088                     	;# 
   236     0089                     	;# 
   237     008C                     	;# 
   238     008D                     	;# 
   239     008E                     	;# 
   240     0091                     	;# 
   241     0092                     	;# 
   242     0093                     	;# 
   243     0094                     	;# 
   244     0098                     	;# 
   245     0099                     	;# 
   246     009C                     	;# 
   247     009D                     	;# 
   248     009E                     	;# 
   249     009F                     	;# 
   250     010C                     	;# 
   251     010D                     	;# 
   252     010E                     	;# 
   253     010F                     	;# 
   254     018C                     	;# 
   255     018D                     	;# 
   256     0000                     	;# 
   257     0001                     	;# 
   258     0002                     	;# 
   259     0003                     	;# 
   260     0004                     	;# 
   261     0005                     	;# 
   262     0006                     	;# 
   263     0007                     	;# 
   264     0008                     	;# 
   265     0009                     	;# 
   266     000A                     	;# 
   267     000B                     	;# 
   268     000C                     	;# 
   269     000D                     	;# 
   270     000E                     	;# 
   271     000E                     	;# 
   272     000F                     	;# 
   273     0010                     	;# 
   274     0011                     	;# 
   275     0012                     	;# 
   276     0013                     	;# 
   277     0014                     	;# 
   278     0015                     	;# 
   279     0015                     	;# 
   280     0016                     	;# 
   281     0017                     	;# 
   282     0018                     	;# 
   283     0019                     	;# 
   284     001A                     	;# 
   285     001B                     	;# 
   286     001B                     	;# 
   287     001C                     	;# 
   288     001D                     	;# 
   289     001E                     	;# 
   290     001F                     	;# 
   291     0081                     	;# 
   292     0085                     	;# 
   293     0086                     	;# 
   294     0087                     	;# 
   295     0088                     	;# 
   296     0089                     	;# 
   297     008C                     	;# 
   298     008D                     	;# 
   299     008E                     	;# 
   300     0091                     	;# 
   301     0092                     	;# 
   302     0093                     	;# 
   303     0094                     	;# 
   304     0098                     	;# 
   305     0099                     	;# 
   306     009C                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     009F                     	;# 
   310     010C                     	;# 
   311     010D                     	;# 
   312     010E                     	;# 
   313     010F                     	;# 
   314     018C                     	;# 
   315     018D                     	;# 
   316     0000                     	;# 
   317     0001                     	;# 
   318     0002                     	;# 
   319     0003                     	;# 
   320     0004                     	;# 
   321     0005                     	;# 
   322     0006                     	;# 
   323     0007                     	;# 
   324     0008                     	;# 
   325     0009                     	;# 
   326     000A                     	;# 
   327     000B                     	;# 
   328     000C                     	;# 
   329     000D                     	;# 
   330     000E                     	;# 
   331     000E                     	;# 
   332     000F                     	;# 
   333     0010                     	;# 
   334     0011                     	;# 
   335     0012                     	;# 
   336     0013                     	;# 
   337     0014                     	;# 
   338     0015                     	;# 
   339     0015                     	;# 
   340     0016                     	;# 
   341     0017                     	;# 
   342     0018                     	;# 
   343     0019                     	;# 
   344     001A                     	;# 
   345     001B                     	;# 
   346     001B                     	;# 
   347     001C                     	;# 
   348     001D                     	;# 
   349     001E                     	;# 
   350     001F                     	;# 
   351     0081                     	;# 
   352     0085                     	;# 
   353     0086                     	;# 
   354     0087                     	;# 
   355     0088                     	;# 
   356     0089                     	;# 
   357     008C                     	;# 
   358     008D                     	;# 
   359     008E                     	;# 
   360     0091                     	;# 
   361     0092                     	;# 
   362     0093                     	;# 
   363     0094                     	;# 
   364     0098                     	;# 
   365     0099                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     010C                     	;# 
   371     010D                     	;# 
   372     010E                     	;# 
   373     010F                     	;# 
   374     018C                     	;# 
   375     018D                     	;# 
   376     0000                     	;# 
   377     0001                     	;# 
   378     0002                     	;# 
   379     0003                     	;# 
   380     0004                     	;# 
   381     0005                     	;# 
   382     0006                     	;# 
   383     0007                     	;# 
   384     0008                     	;# 
   385     0009                     	;# 
   386     000A                     	;# 
   387     000B                     	;# 
   388     000C                     	;# 
   389     000D                     	;# 
   390     000E                     	;# 
   391     000E                     	;# 
   392     000F                     	;# 
   393     0010                     	;# 
   394     0011                     	;# 
   395     0012                     	;# 
   396     0013                     	;# 
   397     0014                     	;# 
   398     0015                     	;# 
   399     0015                     	;# 
   400     0016                     	;# 
   401     0017                     	;# 
   402     0018                     	;# 
   403     0019                     	;# 
   404     001A                     	;# 
   405     001B                     	;# 
   406     001B                     	;# 
   407     001C                     	;# 
   408     001D                     	;# 
   409     001E                     	;# 
   410     001F                     	;# 
   411     0081                     	;# 
   412     0085                     	;# 
   413     0086                     	;# 
   414     0087                     	;# 
   415     0088                     	;# 
   416     0089                     	;# 
   417     008C                     	;# 
   418     008D                     	;# 
   419     008E                     	;# 
   420     0091                     	;# 
   421     0092                     	;# 
   422     0093                     	;# 
   423     0094                     	;# 
   424     0098                     	;# 
   425     0099                     	;# 
   426     009C                     	;# 
   427     009D                     	;# 
   428     009E                     	;# 
   429     009F                     	;# 
   430     010C                     	;# 
   431     010D                     	;# 
   432     010E                     	;# 
   433     010F                     	;# 
   434     018C                     	;# 
   435     018D                     	;# 
   436                           
   437                           	psect	idataBANK0
   438     0FCA                     __pidataBANK0:
   439                           
   440                           ;initializer for _error_msg
   441     0FCA  3454               	retlw	84
   442     0FCB  3472               	retlw	114
   443     0FCC  3461               	retlw	97
   444     0FCD  346E               	retlw	110
   445     0FCE  3473               	retlw	115
   446     0FCF  346D               	retlw	109
   447     0FD0  3469               	retlw	105
   448     0FD1  3473               	retlw	115
   449     0FD2  3473               	retlw	115
   450     0FD3  3469               	retlw	105
   451     0FD4  346F               	retlw	111
   452     0FD5  346E               	retlw	110
   453     0FD6  3420               	retlw	32
   454     0FD7  3465               	retlw	101
   455     0FD8  3472               	retlw	114
   456     0FD9  3472               	retlw	114
   457     0FDA  346F               	retlw	111
   458     0FDB  3472               	retlw	114
   459     0FDC  3400               	retlw	0
   460                           
   461                           ;initializer for _register_write_buffer
   462     0FDD  3471               	retlw	113
   463     0FDE  3400               	retlw	0
   464     0FDF  3430               	retlw	48
   465     0FE0  3400               	retlw	0
   466                           
   467                           ;initializer for _coil_write_state
   468     0FE1  34CD               	retlw	205
   469     0FE2  3421               	retlw	33
   470                           
   471                           	psect	stringtext
   472     0100                     __pstringtext:
   473     0100                     stringtab:
   474     0100                     __stringtab:
   475                           
   476                           ;	String table - string pointers are 2 bytes each
   477     0100  1BFF               	btfsc	btemp+1,7
   478     0101  290A               	ljmp	stringcode
   479     0102  1383               	bcf	3,7
   480     0103  187F               	btfsc	btemp+1,0
   481     0104  1783               	bsf	3,7
   482     0105  0800               	movf	0,w
   483     0106  0A84               	incf	4,f
   484     0107  1903               	skipnz
   485     0108  0AFF               	incf	btemp+1,f
   486     0109  0008               	return
   487     010A                     stringcode:
   488     010A  087F               	movf	btemp+1,w
   489     010B  397F               	andlw	127
   490     010C  008A               	movwf	10
   491     010D  0804               	movf	4,w
   492     010E  0A84               	incf	4,f
   493     010F  1903               	skipnz
   494     0110  0AFF               	incf	btemp+1,f
   495     0111  0082               	movwf	2
   496     0112                     __stringbase:
   497     0112                     __end_of__stringtab:
   498     0112                     _wCRCTable:
   499     0112  3400               	retlw	0
   500     0113  3400               	retlw	0
   501     0114  34C1               	retlw	193
   502     0115  34C0               	retlw	192
   503     0116  3481               	retlw	129
   504     0117  34C1               	retlw	193
   505     0118  3440               	retlw	64
   506     0119  3401               	retlw	1
   507     011A  3401               	retlw	1
   508     011B  34C3               	retlw	195
   509     011C  34C0               	retlw	192
   510     011D  3403               	retlw	3
   511     011E  3480               	retlw	128
   512     011F  3402               	retlw	2
   513     0120  3441               	retlw	65
   514     0121  34C2               	retlw	194
   515     0122  3401               	retlw	1
   516     0123  34C6               	retlw	198
   517     0124  34C0               	retlw	192
   518     0125  3406               	retlw	6
   519     0126  3480               	retlw	128
   520     0127  3407               	retlw	7
   521     0128  3441               	retlw	65
   522     0129  34C7               	retlw	199
   523     012A  3400               	retlw	0
   524     012B  3405               	retlw	5
   525     012C  34C1               	retlw	193
   526     012D  34C5               	retlw	197
   527     012E  3481               	retlw	129
   528     012F  34C4               	retlw	196
   529     0130  3440               	retlw	64
   530     0131  3404               	retlw	4
   531     0132  3401               	retlw	1
   532     0133  34CC               	retlw	204
   533     0134  34C0               	retlw	192
   534     0135  340C               	retlw	12
   535     0136  3480               	retlw	128
   536     0137  340D               	retlw	13
   537     0138  3441               	retlw	65
   538     0139  34CD               	retlw	205
   539     013A  3400               	retlw	0
   540     013B  340F               	retlw	15
   541     013C  34C1               	retlw	193
   542     013D  34CF               	retlw	207
   543     013E  3481               	retlw	129
   544     013F  34CE               	retlw	206
   545     0140  3440               	retlw	64
   546     0141  340E               	retlw	14
   547     0142  3400               	retlw	0
   548     0143  340A               	retlw	10
   549     0144  34C1               	retlw	193
   550     0145  34CA               	retlw	202
   551     0146  3481               	retlw	129
   552     0147  34CB               	retlw	203
   553     0148  3440               	retlw	64
   554     0149  340B               	retlw	11
   555     014A  3401               	retlw	1
   556     014B  34C9               	retlw	201
   557     014C  34C0               	retlw	192
   558     014D  3409               	retlw	9
   559     014E  3480               	retlw	128
   560     014F  3408               	retlw	8
   561     0150  3441               	retlw	65
   562     0151  34C8               	retlw	200
   563     0152  3401               	retlw	1
   564     0153  34D8               	retlw	216
   565     0154  34C0               	retlw	192
   566     0155  3418               	retlw	24
   567     0156  3480               	retlw	128
   568     0157  3419               	retlw	25
   569     0158  3441               	retlw	65
   570     0159  34D9               	retlw	217
   571     015A  3400               	retlw	0
   572     015B  341B               	retlw	27
   573     015C  34C1               	retlw	193
   574     015D  34DB               	retlw	219
   575     015E  3481               	retlw	129
   576     015F  34DA               	retlw	218
   577     0160  3440               	retlw	64
   578     0161  341A               	retlw	26
   579     0162  3400               	retlw	0
   580     0163  341E               	retlw	30
   581     0164  34C1               	retlw	193
   582     0165  34DE               	retlw	222
   583     0166  3481               	retlw	129
   584     0167  34DF               	retlw	223
   585     0168  3440               	retlw	64
   586     0169  341F               	retlw	31
   587     016A  3401               	retlw	1
   588     016B  34DD               	retlw	221
   589     016C  34C0               	retlw	192
   590     016D  341D               	retlw	29
   591     016E  3480               	retlw	128
   592     016F  341C               	retlw	28
   593     0170  3441               	retlw	65
   594     0171  34DC               	retlw	220
   595     0172  3400               	retlw	0
   596     0173  3414               	retlw	20
   597     0174  34C1               	retlw	193
   598     0175  34D4               	retlw	212
   599     0176  3481               	retlw	129
   600     0177  34D5               	retlw	213
   601     0178  3440               	retlw	64
   602     0179  3415               	retlw	21
   603     017A  3401               	retlw	1
   604     017B  34D7               	retlw	215
   605     017C  34C0               	retlw	192
   606     017D  3417               	retlw	23
   607     017E  3480               	retlw	128
   608     017F  3416               	retlw	22
   609     0180  3441               	retlw	65
   610     0181  34D6               	retlw	214
   611     0182  3401               	retlw	1
   612     0183  34D2               	retlw	210
   613     0184  34C0               	retlw	192
   614     0185  3412               	retlw	18
   615     0186  3480               	retlw	128
   616     0187  3413               	retlw	19
   617     0188  3441               	retlw	65
   618     0189  34D3               	retlw	211
   619     018A  3400               	retlw	0
   620     018B  3411               	retlw	17
   621     018C  34C1               	retlw	193
   622     018D  34D1               	retlw	209
   623     018E  3481               	retlw	129
   624     018F  34D0               	retlw	208
   625     0190  3440               	retlw	64
   626     0191  3410               	retlw	16
   627     0192  3401               	retlw	1
   628     0193  34F0               	retlw	240
   629     0194  34C0               	retlw	192
   630     0195  3430               	retlw	48
   631     0196  3480               	retlw	128
   632     0197  3431               	retlw	49
   633     0198  3441               	retlw	65
   634     0199  34F1               	retlw	241
   635     019A  3400               	retlw	0
   636     019B  3433               	retlw	51
   637     019C  34C1               	retlw	193
   638     019D  34F3               	retlw	243
   639     019E  3481               	retlw	129
   640     019F  34F2               	retlw	242
   641     01A0  3440               	retlw	64
   642     01A1  3432               	retlw	50
   643     01A2  3400               	retlw	0
   644     01A3  3436               	retlw	54
   645     01A4  34C1               	retlw	193
   646     01A5  34F6               	retlw	246
   647     01A6  3481               	retlw	129
   648     01A7  34F7               	retlw	247
   649     01A8  3440               	retlw	64
   650     01A9  3437               	retlw	55
   651     01AA  3401               	retlw	1
   652     01AB  34F5               	retlw	245
   653     01AC  34C0               	retlw	192
   654     01AD  3435               	retlw	53
   655     01AE  3480               	retlw	128
   656     01AF  3434               	retlw	52
   657     01B0  3441               	retlw	65
   658     01B1  34F4               	retlw	244
   659     01B2  3400               	retlw	0
   660     01B3  343C               	retlw	60
   661     01B4  34C1               	retlw	193
   662     01B5  34FC               	retlw	252
   663     01B6  3481               	retlw	129
   664     01B7  34FD               	retlw	253
   665     01B8  3440               	retlw	64
   666     01B9  343D               	retlw	61
   667     01BA  3401               	retlw	1
   668     01BB  34FF               	retlw	255
   669     01BC  34C0               	retlw	192
   670     01BD  343F               	retlw	63
   671     01BE  3480               	retlw	128
   672     01BF  343E               	retlw	62
   673     01C0  3441               	retlw	65
   674     01C1  34FE               	retlw	254
   675     01C2  3401               	retlw	1
   676     01C3  34FA               	retlw	250
   677     01C4  34C0               	retlw	192
   678     01C5  343A               	retlw	58
   679     01C6  3480               	retlw	128
   680     01C7  343B               	retlw	59
   681     01C8  3441               	retlw	65
   682     01C9  34FB               	retlw	251
   683     01CA  3400               	retlw	0
   684     01CB  3439               	retlw	57
   685     01CC  34C1               	retlw	193
   686     01CD  34F9               	retlw	249
   687     01CE  3481               	retlw	129
   688     01CF  34F8               	retlw	248
   689     01D0  3440               	retlw	64
   690     01D1  3438               	retlw	56
   691     01D2  3400               	retlw	0
   692     01D3  3428               	retlw	40
   693     01D4  34C1               	retlw	193
   694     01D5  34E8               	retlw	232
   695     01D6  3481               	retlw	129
   696     01D7  34E9               	retlw	233
   697     01D8  3440               	retlw	64
   698     01D9  3429               	retlw	41
   699     01DA  3401               	retlw	1
   700     01DB  34EB               	retlw	235
   701     01DC  34C0               	retlw	192
   702     01DD  342B               	retlw	43
   703     01DE  3480               	retlw	128
   704     01DF  342A               	retlw	42
   705     01E0  3441               	retlw	65
   706     01E1  34EA               	retlw	234
   707     01E2  3401               	retlw	1
   708     01E3  34EE               	retlw	238
   709     01E4  34C0               	retlw	192
   710     01E5  342E               	retlw	46
   711     01E6  3480               	retlw	128
   712     01E7  342F               	retlw	47
   713     01E8  3441               	retlw	65
   714     01E9  34EF               	retlw	239
   715     01EA  3400               	retlw	0
   716     01EB  342D               	retlw	45
   717     01EC  34C1               	retlw	193
   718     01ED  34ED               	retlw	237
   719     01EE  3481               	retlw	129
   720     01EF  34EC               	retlw	236
   721     01F0  3440               	retlw	64
   722     01F1  342C               	retlw	44
   723     01F2  3401               	retlw	1
   724     01F3  34E4               	retlw	228
   725     01F4  34C0               	retlw	192
   726     01F5  3424               	retlw	36
   727     01F6  3480               	retlw	128
   728     01F7  3425               	retlw	37
   729     01F8  3441               	retlw	65
   730     01F9  34E5               	retlw	229
   731     01FA  3400               	retlw	0
   732     01FB  3427               	retlw	39
   733     01FC  34C1               	retlw	193
   734     01FD  34E7               	retlw	231
   735     01FE  3481               	retlw	129
   736     01FF  34E6               	retlw	230
   737     0200  3440               	retlw	64
   738     0201  3426               	retlw	38
   739     0202  3400               	retlw	0
   740     0203  3422               	retlw	34
   741     0204  34C1               	retlw	193
   742     0205  34E2               	retlw	226
   743     0206  3481               	retlw	129
   744     0207  34E3               	retlw	227
   745     0208  3440               	retlw	64
   746     0209  3423               	retlw	35
   747     020A  3401               	retlw	1
   748     020B  34E1               	retlw	225
   749     020C  34C0               	retlw	192
   750     020D  3421               	retlw	33
   751     020E  3480               	retlw	128
   752     020F  3420               	retlw	32
   753     0210  3441               	retlw	65
   754     0211  34E0               	retlw	224
   755     0212  3401               	retlw	1
   756     0213  34A0               	retlw	160
   757     0214  34C0               	retlw	192
   758     0215  3460               	retlw	96
   759     0216  3480               	retlw	128
   760     0217  3461               	retlw	97
   761     0218  3441               	retlw	65
   762     0219  34A1               	retlw	161
   763     021A  3400               	retlw	0
   764     021B  3463               	retlw	99
   765     021C  34C1               	retlw	193
   766     021D  34A3               	retlw	163
   767     021E  3481               	retlw	129
   768     021F  34A2               	retlw	162
   769     0220  3440               	retlw	64
   770     0221  3462               	retlw	98
   771     0222  3400               	retlw	0
   772     0223  3466               	retlw	102
   773     0224  34C1               	retlw	193
   774     0225  34A6               	retlw	166
   775     0226  3481               	retlw	129
   776     0227  34A7               	retlw	167
   777     0228  3440               	retlw	64
   778     0229  3467               	retlw	103
   779     022A  3401               	retlw	1
   780     022B  34A5               	retlw	165
   781     022C  34C0               	retlw	192
   782     022D  3465               	retlw	101
   783     022E  3480               	retlw	128
   784     022F  3464               	retlw	100
   785     0230  3441               	retlw	65
   786     0231  34A4               	retlw	164
   787     0232  3400               	retlw	0
   788     0233  346C               	retlw	108
   789     0234  34C1               	retlw	193
   790     0235  34AC               	retlw	172
   791     0236  3481               	retlw	129
   792     0237  34AD               	retlw	173
   793     0238  3440               	retlw	64
   794     0239  346D               	retlw	109
   795     023A  3401               	retlw	1
   796     023B  34AF               	retlw	175
   797     023C  34C0               	retlw	192
   798     023D  346F               	retlw	111
   799     023E  3480               	retlw	128
   800     023F  346E               	retlw	110
   801     0240  3441               	retlw	65
   802     0241  34AE               	retlw	174
   803     0242  3401               	retlw	1
   804     0243  34AA               	retlw	170
   805     0244  34C0               	retlw	192
   806     0245  346A               	retlw	106
   807     0246  3480               	retlw	128
   808     0247  346B               	retlw	107
   809     0248  3441               	retlw	65
   810     0249  34AB               	retlw	171
   811     024A  3400               	retlw	0
   812     024B  3469               	retlw	105
   813     024C  34C1               	retlw	193
   814     024D  34A9               	retlw	169
   815     024E  3481               	retlw	129
   816     024F  34A8               	retlw	168
   817     0250  3440               	retlw	64
   818     0251  3468               	retlw	104
   819     0252  3400               	retlw	0
   820     0253  3478               	retlw	120
   821     0254  34C1               	retlw	193
   822     0255  34B8               	retlw	184
   823     0256  3481               	retlw	129
   824     0257  34B9               	retlw	185
   825     0258  3440               	retlw	64
   826     0259  3479               	retlw	121
   827     025A  3401               	retlw	1
   828     025B  34BB               	retlw	187
   829     025C  34C0               	retlw	192
   830     025D  347B               	retlw	123
   831     025E  3480               	retlw	128
   832     025F  347A               	retlw	122
   833     0260  3441               	retlw	65
   834     0261  34BA               	retlw	186
   835     0262  3401               	retlw	1
   836     0263  34BE               	retlw	190
   837     0264  34C0               	retlw	192
   838     0265  347E               	retlw	126
   839     0266  3480               	retlw	128
   840     0267  347F               	retlw	127
   841     0268  3441               	retlw	65
   842     0269  34BF               	retlw	191
   843     026A  3400               	retlw	0
   844     026B  347D               	retlw	125
   845     026C  34C1               	retlw	193
   846     026D  34BD               	retlw	189
   847     026E  3481               	retlw	129
   848     026F  34BC               	retlw	188
   849     0270  3440               	retlw	64
   850     0271  347C               	retlw	124
   851     0272  3401               	retlw	1
   852     0273  34B4               	retlw	180
   853     0274  34C0               	retlw	192
   854     0275  3474               	retlw	116
   855     0276  3480               	retlw	128
   856     0277  3475               	retlw	117
   857     0278  3441               	retlw	65
   858     0279  34B5               	retlw	181
   859     027A  3400               	retlw	0
   860     027B  3477               	retlw	119
   861     027C  34C1               	retlw	193
   862     027D  34B7               	retlw	183
   863     027E  3481               	retlw	129
   864     027F  34B6               	retlw	182
   865     0280  3440               	retlw	64
   866     0281  3476               	retlw	118
   867     0282  3400               	retlw	0
   868     0283  3472               	retlw	114
   869     0284  34C1               	retlw	193
   870     0285  34B2               	retlw	178
   871     0286  3481               	retlw	129
   872     0287  34B3               	retlw	179
   873     0288  3440               	retlw	64
   874     0289  3473               	retlw	115
   875     028A  3401               	retlw	1
   876     028B  34B1               	retlw	177
   877     028C  34C0               	retlw	192
   878     028D  3471               	retlw	113
   879     028E  3480               	retlw	128
   880     028F  3470               	retlw	112
   881     0290  3441               	retlw	65
   882     0291  34B0               	retlw	176
   883     0292  3400               	retlw	0
   884     0293  3450               	retlw	80
   885     0294  34C1               	retlw	193
   886     0295  3490               	retlw	144
   887     0296  3481               	retlw	129
   888     0297  3491               	retlw	145
   889     0298  3440               	retlw	64
   890     0299  3451               	retlw	81
   891     029A  3401               	retlw	1
   892     029B  3493               	retlw	147
   893     029C  34C0               	retlw	192
   894     029D  3453               	retlw	83
   895     029E  3480               	retlw	128
   896     029F  3452               	retlw	82
   897     02A0  3441               	retlw	65
   898     02A1  3492               	retlw	146
   899     02A2  3401               	retlw	1
   900     02A3  3496               	retlw	150
   901     02A4  34C0               	retlw	192
   902     02A5  3456               	retlw	86
   903     02A6  3480               	retlw	128
   904     02A7  3457               	retlw	87
   905     02A8  3441               	retlw	65
   906     02A9  3497               	retlw	151
   907     02AA  3400               	retlw	0
   908     02AB  3455               	retlw	85
   909     02AC  34C1               	retlw	193
   910     02AD  3495               	retlw	149
   911     02AE  3481               	retlw	129
   912     02AF  3494               	retlw	148
   913     02B0  3440               	retlw	64
   914     02B1  3454               	retlw	84
   915     02B2  3401               	retlw	1
   916     02B3  349C               	retlw	156
   917     02B4  34C0               	retlw	192
   918     02B5  345C               	retlw	92
   919     02B6  3480               	retlw	128
   920     02B7  345D               	retlw	93
   921     02B8  3441               	retlw	65
   922     02B9  349D               	retlw	157
   923     02BA  3400               	retlw	0
   924     02BB  345F               	retlw	95
   925     02BC  34C1               	retlw	193
   926     02BD  349F               	retlw	159
   927     02BE  3481               	retlw	129
   928     02BF  349E               	retlw	158
   929     02C0  3440               	retlw	64
   930     02C1  345E               	retlw	94
   931     02C2  3400               	retlw	0
   932     02C3  345A               	retlw	90
   933     02C4  34C1               	retlw	193
   934     02C5  349A               	retlw	154
   935     02C6  3481               	retlw	129
   936     02C7  349B               	retlw	155
   937     02C8  3440               	retlw	64
   938     02C9  345B               	retlw	91
   939     02CA  3401               	retlw	1
   940     02CB  3499               	retlw	153
   941     02CC  34C0               	retlw	192
   942     02CD  3459               	retlw	89
   943     02CE  3480               	retlw	128
   944     02CF  3458               	retlw	88
   945     02D0  3441               	retlw	65
   946     02D1  3498               	retlw	152
   947     02D2  3401               	retlw	1
   948     02D3  3488               	retlw	136
   949     02D4  34C0               	retlw	192
   950     02D5  3448               	retlw	72
   951     02D6  3480               	retlw	128
   952     02D7  3449               	retlw	73
   953     02D8  3441               	retlw	65
   954     02D9  3489               	retlw	137
   955     02DA  3400               	retlw	0
   956     02DB  344B               	retlw	75
   957     02DC  34C1               	retlw	193
   958     02DD  348B               	retlw	139
   959     02DE  3481               	retlw	129
   960     02DF  348A               	retlw	138
   961     02E0  3440               	retlw	64
   962     02E1  344A               	retlw	74
   963     02E2  3400               	retlw	0
   964     02E3  344E               	retlw	78
   965     02E4  34C1               	retlw	193
   966     02E5  348E               	retlw	142
   967     02E6  3481               	retlw	129
   968     02E7  348F               	retlw	143
   969     02E8  3440               	retlw	64
   970     02E9  344F               	retlw	79
   971     02EA  3401               	retlw	1
   972     02EB  348D               	retlw	141
   973     02EC  34C0               	retlw	192
   974     02ED  344D               	retlw	77
   975     02EE  3480               	retlw	128
   976     02EF  344C               	retlw	76
   977     02F0  3441               	retlw	65
   978     02F1  348C               	retlw	140
   979     02F2  3400               	retlw	0
   980     02F3  3444               	retlw	68
   981     02F4  34C1               	retlw	193
   982     02F5  3484               	retlw	132
   983     02F6  3481               	retlw	129
   984     02F7  3485               	retlw	133
   985     02F8  3440               	retlw	64
   986     02F9  3445               	retlw	69
   987     02FA  3401               	retlw	1
   988     02FB  3487               	retlw	135
   989     02FC  34C0               	retlw	192
   990     02FD  3447               	retlw	71
   991     02FE  3480               	retlw	128
   992     02FF  3446               	retlw	70
   993     0300  3441               	retlw	65
   994     0301  3486               	retlw	134
   995     0302  3401               	retlw	1
   996     0303  3482               	retlw	130
   997     0304  34C0               	retlw	192
   998     0305  3442               	retlw	66
   999     0306  3480               	retlw	128
  1000     0307  3443               	retlw	67
  1001     0308  3441               	retlw	65
  1002     0309  3483               	retlw	131
  1003     030A  3400               	retlw	0
  1004     030B  3441               	retlw	65
  1005     030C  34C1               	retlw	193
  1006     030D  3481               	retlw	129
  1007     030E  3481               	retlw	129
  1008     030F  3480               	retlw	128
  1009     0310  3440               	retlw	64
  1010     0311  3440               	retlw	64
  1011     0312                     __end_of_wCRCTable:
  1012     001A                     _RCREG	set	26
  1013     0019                     _TXREG	set	25
  1014     0065                     _RCIF	set	101
  1015     0040                     _RD0	set	64
  1016     005F                     _GIE	set	95
  1017     005E                     _PEIE	set	94
  1018     00C4                     _CREN	set	196
  1019     00C6                     _RX9	set	198
  1020     00C7                     _SPEN	set	199
  1021     0099                     _SPBRG	set	153
  1022     0440                     _TRISD0	set	1088
  1023     04C1                     _TRMT	set	1217
  1024     0465                     _RCIE	set	1125
  1025     04C2                     _BRGH	set	1218
  1026     04C5                     _TXEN	set	1221
  1027     04C6                     _TX9	set	1222
  1028     04C4                     _SYNC	set	1220
  1029     043F                     _TRISC7	set	1087
  1030     043E                     _TRISC6	set	1086
  1031                           
  1032                           	psect	cinit
  1033     0013                     start_initialization:	
  1034                           ; #config settings
  1035                           
  1036     0013                     __initialization:
  1037                           
  1038                           ; Initialize objects allocated to BANK0
  1039     0013  1383               	bcf	3,7	;select IRP bank0
  1040     0014  305C               	movlw	low (__pdataBANK0+25)
  1041     0015  00FD               	movwf	btemp+-1
  1042     0016  300F               	movlw	high __pidataBANK0
  1043     0017  00FE               	movwf	btemp
  1044     0018  30CA               	movlw	low __pidataBANK0
  1045     0019  00FF               	movwf	btemp+1
  1046     001A  3043               	movlw	low __pdataBANK0
  1047     001B  0084               	movwf	4
  1048     001C  120A  158A  278C  120A  118A  	fcall	init_ram0
  1049                           
  1050                           ; Clear objects allocated to BANK1
  1051     0021  30A0               	movlw	low __pbssBANK1
  1052     0022  0084               	movwf	4
  1053     0023  30D2               	movlw	low (__pbssBANK1+50)
  1054     0024  120A  158A  2755  120A  118A  	fcall	clear_ram0
  1055                           
  1056                           ; Clear objects allocated to BANK0
  1057     0029  305C               	movlw	low __pbssBANK0
  1058     002A  0084               	movwf	4
  1059     002B  3067               	movlw	low (__pbssBANK0+11)
  1060     002C  120A  158A  2755  120A  118A  	fcall	clear_ram0
  1061     0031                     end_of_initialization:	
  1062                           ;End of C runtime variable initialization code
  1063                           
  1064     0031                     __end_of__initialization:
  1065     0031  0183               	clrf	3
  1066     0032  120A  118A  2B12   	ljmp	_main	;jump to C main() function
  1067                           
  1068                           	psect	bssBANK0
  1069     005C                     __pbssBANK0:
  1070     005C                     _uart_str_idx@PIC16F877A_UART$F199:
  1071     005C                     	ds	2
  1072     005E                     _master_rcv_buffer_len:
  1073     005E                     	ds	2
  1074     0060                     _uart_str_idx@PIC16F877A_UART$F162:
  1075     0060                     	ds	2
  1076     0062                     _uart_str_idx@PIC16F877A_UART$F67:
  1077     0062                     	ds	2
  1078     0064                     _uart_str_idx:
  1079     0064                     	ds	2
  1080     0066                     _state:
  1081     0066                     	ds	1
  1082                           
  1083                           	psect	dataBANK0
  1084     0043                     __pdataBANK0:
  1085     0043                     _error_msg:
  1086     0043                     	ds	19
  1087     0056                     _register_write_buffer:
  1088     0056                     	ds	4
  1089     005A                     _coil_write_state:
  1090     005A                     	ds	2
  1091                           
  1092                           	psect	bssBANK1
  1093     00A0                     __pbssBANK1:
  1094     00A0                     _rcv_buffer:
  1095     00A0                     	ds	25
  1096     00B9                     _tx_buffer:
  1097     00B9                     	ds	25
  1098                           
  1099                           	psect	inittext
  1100     0F88                     init_fetch0:	
  1101                           ;	Called with low address in FSR and high address in W
  1102                           
  1103     0F88  087E               	movf	btemp,w
  1104     0F89  008A               	movwf	10
  1105     0F8A  087F               	movf	btemp+1,w
  1106     0F8B  0082               	movwf	2
  1107     0F8C                     init_ram0:	
  1108                           ;Called with:
  1109                           ;	high address of idata address in btemp 
  1110                           ;	low address of idata address in btemp+1 
  1111                           ;	low address of data in FSR
  1112                           ;	high address + 1 of data in btemp-1
  1113                           
  1114     0F8C  120A  158A  2788  120A  158A  	fcall	init_fetch0
  1115     0F91  0080               	movwf	0
  1116     0F92  0A84               	incf	4,f
  1117     0F93  0804               	movf	4,w
  1118     0F94  067D               	xorwf	btemp+-1,w
  1119     0F95  1903               	btfsc	3,2
  1120     0F96  3400               	retlw	0
  1121     0F97  0AFF               	incf	btemp+1,f
  1122     0F98  1903               	btfsc	3,2
  1123     0F99  0AFE               	incf	btemp,f
  1124     0F9A  2F8C               	goto	init_ram0
  1125                           
  1126                           	psect	clrtext
  1127     0F55                     clear_ram0:	
  1128                           ;	Called with FSR containing the base address, and
  1129                           ;	W with the last address+1
  1130                           
  1131     0F55  0064               	clrwdt	;clear the watchdog before getting into this loop
  1132     0F56                     clrloop0:
  1133     0F56  0180               	clrf	0	;clear RAM location pointed to by FSR
  1134     0F57  0A84               	incf	4,f	;increment pointer
  1135     0F58  0604               	xorwf	4,w	;XOR with final address
  1136     0F59  1903               	btfsc	3,2	;have we reached the end yet?
  1137     0F5A  3400               	retlw	0	;all done for this memory range, return
  1138     0F5B  0604               	xorwf	4,w	;XOR again to restore value
  1139     0F5C  2F56               	goto	clrloop0	;do the next byte
  1140                           
  1141                           	psect	cstackCOMMON
  1142     0070                     __pcstackCOMMON:
  1143     0070                     ?_modbusRTUInit:
  1144     0070                     ?_UARTTransRcvInit:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147     0070                     ?_UARTsendChar:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150     0070                     ?_UARTsendString:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153     0070                     ?_UARTrcvChar:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156     0070                     ??_UARTrcvChar:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159     0070                     ?_RS485TxConfig:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162     0070                     ?_RS485Init:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165     0070                     ?_RS485sendString:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168     0070                     ?_ISR:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171     0070                     ?_main:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174     0070                     UARTrcvChar@c:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177                           
  1178                           ; 1 bytes @ 0x0
  1179     0070                     	ds	1
  1180     0071                     ?_UARTrcvString:
  1181     0071                     UARTrcvString@length:	
  1182                           ; 2 bytes @ 0x1
  1183                           
  1184                           
  1185                           ; 2 bytes @ 0x1
  1186     0071                     	ds	2
  1187     0073                     ??_UARTrcvString:
  1188                           
  1189                           ; 1 bytes @ 0x3
  1190     0073                     	ds	2
  1191     0075                     UARTrcvString@rcv_buffer:
  1192                           
  1193                           ; 1 bytes @ 0x5
  1194     0075                     	ds	1
  1195     0076                     ?_RS485rcvString:
  1196     0076                     RS485rcvString@length:	
  1197                           ; 2 bytes @ 0x6
  1198                           
  1199                           
  1200                           ; 2 bytes @ 0x6
  1201     0076                     	ds	2
  1202     0078                     ??_RS485rcvString:
  1203     0078                     RS485rcvString@done:	
  1204                           ; 1 bytes @ 0x8
  1205                           
  1206                           
  1207                           ; 2 bytes @ 0x8
  1208     0078                     	ds	2
  1209     007A                     RS485rcvString@rcv_buffer:
  1210                           
  1211                           ; 1 bytes @ 0xA
  1212     007A                     	ds	1
  1213     007B                     ?_modbusRcvResponse:
  1214                           
  1215                           ; 2 bytes @ 0xB
  1216     007B                     	ds	2
  1217     007D                     ??_modbusRcvResponse:
  1218     007D                     modbusRcvResponse@rcv_buffer:	
  1219                           ; 1 bytes @ 0xD
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0xD
  1223     007D                     	ds	1
  1224                           
  1225                           	psect	cstackBANK0
  1226     0020                     __pcstackBANK0:
  1227     0020                     ??_ISR:
  1228                           
  1229                           ; 1 bytes @ 0x0
  1230     0020                     	ds	3
  1231     0023                     ??_modbusRTUInit:
  1232     0023                     ??_UARTTransRcvInit:	
  1233                           ; 1 bytes @ 0x3
  1234                           
  1235     0023                     ??_UARTsendChar:	
  1236                           ; 1 bytes @ 0x3
  1237                           
  1238     0023                     ??_RS485TxConfig:	
  1239                           ; 1 bytes @ 0x3
  1240                           
  1241     0023                     ??_RS485Init:	
  1242                           ; 1 bytes @ 0x3
  1243                           
  1244     0023                     ?_clearBuffer:	
  1245                           ; 1 bytes @ 0x3
  1246                           
  1247     0023                     ?_crc16:	
  1248                           ; 1 bytes @ 0x3
  1249                           
  1250     0023                     ?___awdiv:	
  1251                           ; 2 bytes @ 0x3
  1252                           
  1253     0023                     UARTsendChar@c:	
  1254                           ; 2 bytes @ 0x3
  1255                           
  1256     0023                     crc16@length:	
  1257                           ; 1 bytes @ 0x3
  1258                           
  1259     0023                     clearBuffer@len:	
  1260                           ; 2 bytes @ 0x3
  1261                           
  1262     0023                     ___awdiv@divisor:	
  1263                           ; 2 bytes @ 0x3
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0x3
  1267     0023                     	ds	1
  1268     0024                     ??_UARTsendString:
  1269                           
  1270                           ; 1 bytes @ 0x4
  1271     0024                     	ds	1
  1272     0025                     ??_crc16:
  1273     0025                     ??_clearBuffer:	
  1274                           ; 1 bytes @ 0x5
  1275                           
  1276     0025                     UARTsendString@i:	
  1277                           ; 1 bytes @ 0x5
  1278                           
  1279     0025                     ___awdiv@dividend:	
  1280                           ; 2 bytes @ 0x5
  1281                           
  1282                           
  1283                           ; 2 bytes @ 0x5
  1284     0025                     	ds	2
  1285     0027                     ??___awdiv:
  1286     0027                     UARTsendString@str:	
  1287                           ; 1 bytes @ 0x7
  1288                           
  1289     0027                     clearBuffer@i:	
  1290                           ; 1 bytes @ 0x7
  1291                           
  1292     0027                     ___awdiv@counter:	
  1293                           ; 1 bytes @ 0x7
  1294                           
  1295                           
  1296                           ; 1 bytes @ 0x7
  1297     0027                     	ds	1
  1298     0028                     ??_RS485sendString:
  1299     0028                     clearBuffer@buffer:	
  1300                           ; 1 bytes @ 0x8
  1301                           
  1302     0028                     ___awdiv@sign:	
  1303                           ; 1 bytes @ 0x8
  1304                           
  1305                           
  1306                           ; 1 bytes @ 0x8
  1307     0028                     	ds	1
  1308     0029                     crc16@temp:
  1309     0029                     ___awdiv@quotient:	
  1310                           ; 1 bytes @ 0x9
  1311                           
  1312                           
  1313                           ; 2 bytes @ 0x9
  1314     0029                     	ds	1
  1315     002A                     RS485sendString@str:
  1316     002A                     crc16@crcWord:	
  1317                           ; 1 bytes @ 0xA
  1318                           
  1319                           
  1320                           ; 2 bytes @ 0xA
  1321     002A                     	ds	2
  1322     002C                     crc16@buffer:
  1323                           
  1324                           ; 1 bytes @ 0xC
  1325     002C                     	ds	1
  1326     002D                     ?_modbusReadCoils:
  1327     002D                     ?_modbusReadRegisters:	
  1328                           ; 1 bytes @ 0xD
  1329                           
  1330     002D                     ?_modbusWriteCoil:	
  1331                           ; 1 bytes @ 0xD
  1332                           
  1333     002D                     ?_modbusWriteRegister:	
  1334                           ; 1 bytes @ 0xD
  1335                           
  1336     002D                     ?_modbusWriteCoils:	
  1337                           ; 1 bytes @ 0xD
  1338                           
  1339     002D                     ?_modbusWriteRegisters:	
  1340                           ; 1 bytes @ 0xD
  1341                           
  1342     002D                     modbusReadCoils@len:	
  1343                           ; 1 bytes @ 0xD
  1344                           
  1345     002D                     modbusReadRegisters@len:	
  1346                           ; 2 bytes @ 0xD
  1347                           
  1348     002D                     modbusWriteCoil@len:	
  1349                           ; 2 bytes @ 0xD
  1350                           
  1351     002D                     modbusWriteRegister@len:	
  1352                           ; 2 bytes @ 0xD
  1353                           
  1354     002D                     modbusWriteCoils@len:	
  1355                           ; 2 bytes @ 0xD
  1356                           
  1357     002D                     modbusWriteRegisters@len:	
  1358                           ; 2 bytes @ 0xD
  1359                           
  1360                           
  1361                           ; 2 bytes @ 0xD
  1362     002D                     	ds	2
  1363     002F                     modbusReadCoils@mode:
  1364     002F                     modbusReadRegisters@mode:	
  1365                           ; 1 bytes @ 0xF
  1366                           
  1367     002F                     modbusWriteCoil@slave_address:	
  1368                           ; 1 bytes @ 0xF
  1369                           
  1370     002F                     modbusWriteRegister@slave_address:	
  1371                           ; 1 bytes @ 0xF
  1372                           
  1373     002F                     modbusWriteCoils@slave_address:	
  1374                           ; 1 bytes @ 0xF
  1375                           
  1376     002F                     modbusWriteRegisters@slave_address:	
  1377                           ; 1 bytes @ 0xF
  1378                           
  1379                           
  1380                           ; 1 bytes @ 0xF
  1381     002F                     	ds	1
  1382     0030                     modbusReadCoils@slave_address:
  1383     0030                     modbusReadRegisters@slave_address:	
  1384                           ; 1 bytes @ 0x10
  1385                           
  1386     0030                     modbusWriteCoil@coil:	
  1387                           ; 1 bytes @ 0x10
  1388                           
  1389     0030                     modbusWriteRegister@register_:	
  1390                           ; 2 bytes @ 0x10
  1391                           
  1392     0030                     modbusWriteCoils@start_coil:	
  1393                           ; 2 bytes @ 0x10
  1394                           
  1395     0030                     modbusWriteRegisters@start_register:	
  1396                           ; 2 bytes @ 0x10
  1397                           
  1398                           
  1399                           ; 2 bytes @ 0x10
  1400     0030                     	ds	1
  1401     0031                     modbusReadCoils@start_coil:
  1402     0031                     modbusReadRegisters@start_register:	
  1403                           ; 2 bytes @ 0x11
  1404                           
  1405                           
  1406                           ; 2 bytes @ 0x11
  1407     0031                     	ds	1
  1408     0032                     modbusWriteCoil@coil_state:
  1409     0032                     modbusWriteRegister@register_value:	
  1410                           ; 1 bytes @ 0x12
  1411                           
  1412     0032                     modbusWriteCoils@coil_num:	
  1413                           ; 2 bytes @ 0x12
  1414                           
  1415     0032                     modbusWriteRegisters@register_num:	
  1416                           ; 2 bytes @ 0x12
  1417                           
  1418                           
  1419                           ; 2 bytes @ 0x12
  1420     0032                     	ds	1
  1421     0033                     ??_modbusWriteCoil:
  1422     0033                     modbusReadCoils@coil_num:	
  1423                           ; 1 bytes @ 0x13
  1424                           
  1425     0033                     modbusReadRegisters@register_num:	
  1426                           ; 2 bytes @ 0x13
  1427                           
  1428     0033                     modbusWriteCoil@checksum:	
  1429                           ; 2 bytes @ 0x13
  1430                           
  1431                           
  1432                           ; 2 bytes @ 0x13
  1433     0033                     	ds	1
  1434     0034                     ??_modbusWriteRegister:
  1435     0034                     modbusWriteCoils@coil_state:	
  1436                           ; 1 bytes @ 0x14
  1437                           
  1438     0034                     modbusWriteRegisters@register_value:	
  1439                           ; 1 bytes @ 0x14
  1440                           
  1441     0034                     modbusWriteRegister@checksum:	
  1442                           ; 1 bytes @ 0x14
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x14
  1446     0034                     	ds	1
  1447     0035                     ??_modbusReadCoils:
  1448     0035                     ??_modbusReadRegisters:	
  1449                           ; 1 bytes @ 0x15
  1450                           
  1451     0035                     ??_modbusWriteCoils:	
  1452                           ; 1 bytes @ 0x15
  1453                           
  1454     0035                     ??_modbusWriteRegisters:	
  1455                           ; 1 bytes @ 0x15
  1456                           
  1457     0035                     modbusWriteCoil@tx_buffer:	
  1458                           ; 1 bytes @ 0x15
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x15
  1462     0035                     	ds	1
  1463     0036                     modbusWriteRegister@tx_buffer:
  1464                           
  1465                           ; 1 bytes @ 0x16
  1466     0036                     	ds	1
  1467     0037                     modbusReadCoils@checksum:
  1468     0037                     modbusReadRegisters@checksum:	
  1469                           ; 2 bytes @ 0x17
  1470                           
  1471                           
  1472                           ; 2 bytes @ 0x17
  1473     0037                     	ds	2
  1474     0039                     modbusReadCoils@tx_buffer:
  1475     0039                     modbusReadRegisters@tx_buffer:	
  1476                           ; 1 bytes @ 0x19
  1477                           
  1478                           
  1479                           ; 1 bytes @ 0x19
  1480     0039                     	ds	2
  1481     003B                     modbusWriteCoils@checksum:
  1482                           
  1483                           ; 2 bytes @ 0x1B
  1484     003B                     	ds	1
  1485     003C                     modbusWriteRegisters@checksum:
  1486                           
  1487                           ; 2 bytes @ 0x1C
  1488     003C                     	ds	1
  1489     003D                     modbusWriteCoils@i:
  1490                           
  1491                           ; 1 bytes @ 0x1D
  1492     003D                     	ds	1
  1493     003E                     modbusWriteCoils@tx_buffer:
  1494     003E                     modbusWriteRegisters@i:	
  1495                           ; 1 bytes @ 0x1E
  1496                           
  1497                           
  1498                           ; 1 bytes @ 0x1E
  1499     003E                     	ds	1
  1500     003F                     modbusWriteRegisters@tx_buffer:
  1501                           
  1502                           ; 1 bytes @ 0x1F
  1503     003F                     	ds	1
  1504     0040                     ??_main:
  1505                           
  1506                           ; 1 bytes @ 0x20
  1507     0040                     	ds	3
  1508                           
  1509                           	psect	maintext
  1510     0312                     __pmaintext:	
  1511 ;;
  1512 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1513 ;;
  1514 ;; *************** function _main *****************
  1515 ;; Defined at:
  1516 ;;		line 31 in file "PIC16F877A_RS485_ModbusRTU_master.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : B00/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1530 ;;      Params:         0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0
  1532 ;;      Temps:          0       3       0       0       0
  1533 ;;      Totals:         0       3       0       0       0
  1534 ;;Total ram usage:        3 bytes
  1535 ;; Hardware stack levels required when called: 9
  1536 ;; This function calls:
  1537 ;;		_RS485sendString
  1538 ;;		_modbusRTUInit
  1539 ;;		_modbusReadCoils
  1540 ;;		_modbusReadRegisters
  1541 ;;		_modbusWriteCoil
  1542 ;;		_modbusWriteCoils
  1543 ;;		_modbusWriteRegister
  1544 ;;		_modbusWriteRegisters
  1545 ;; This function is called by:
  1546 ;;		Startup code after reset
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550     0312                     _main:	
  1551                           ;psect for function _main
  1552                           
  1553     0312                     l1693:	
  1554                           ;incstack = 0
  1555 ;; hardware stack exceeded
  1556                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1557                           
  1558                           
  1559                           ;PIC16F877A_RS485_ModbusRTU_master.c: 33:     modbusRTUInit();
  1560     0312  120A  158A  2748  120A  118A  	fcall	_modbusRTUInit
  1561     0317  2C22               	goto	l1731
  1562     0318                     l1695:
  1563                           
  1564                           ;PIC16F877A_RS485_ModbusRTU_master.c: 41:                 if(! modbusReadCoils(tx_buffer
      +                          , 25, READ_COILS, 0x05, 1005, 7))
  1565     0318  3019               	movlw	25
  1566     0319  00AD               	movwf	modbusReadCoils@len
  1567     031A  3000               	movlw	0
  1568     031B  00AE               	movwf	modbusReadCoils@len+1
  1569     031C  01AF               	clrf	modbusReadCoils@mode
  1570     031D  0AAF               	incf	modbusReadCoils@mode,f
  1571     031E  3005               	movlw	5
  1572     031F  00B0               	movwf	modbusReadCoils@slave_address
  1573     0320  30ED               	movlw	237
  1574     0321  00B1               	movwf	modbusReadCoils@start_coil
  1575     0322  3003               	movlw	3
  1576     0323  00B2               	movwf	modbusReadCoils@start_coil+1
  1577     0324  3007               	movlw	7
  1578     0325  00B3               	movwf	modbusReadCoils@coil_num
  1579     0326  3000               	movlw	0
  1580     0327  00B4               	movwf	modbusReadCoils@coil_num+1
  1581     0328  30B9               	movlw	(low (_tx_buffer| 0))& (0+255)
  1582     0329  120A  118A  25C6  120A  118A  	fcall	_modbusReadCoils
  1583     032E  3A00               	xorlw	0
  1584     032F  1D03               	skipz
  1585     0330  2B32               	goto	u611
  1586     0331  2B33               	goto	u610
  1587     0332                     u611:
  1588     0332  2C49               	goto	l1733
  1589     0333                     u610:
  1590     0333                     l1697:
  1591                           
  1592                           ;PIC16F877A_RS485_ModbusRTU_master.c: 42:                     RS485sendString(error_msg)
      +                          ;
  1593     0333  3043               	movlw	(low (_error_msg| 0))& (0+255)
  1594     0334  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  1595     0339  2C49               	goto	l1733
  1596     033A                     l1699:
  1597                           
  1598                           ;PIC16F877A_RS485_ModbusRTU_master.c: 45:                 if(! modbusReadCoils(tx_buffer
      +                          , 25, READ_DISCRETE_INPUTS, 0x05, 1001, 7))
  1599     033A  3019               	movlw	25
  1600     033B  00AD               	movwf	modbusReadCoils@len
  1601     033C  3000               	movlw	0
  1602     033D  00AE               	movwf	modbusReadCoils@len+1
  1603     033E  3002               	movlw	2
  1604     033F  00AF               	movwf	modbusReadCoils@mode
  1605     0340  3005               	movlw	5
  1606     0341  00B0               	movwf	modbusReadCoils@slave_address
  1607     0342  30E9               	movlw	233
  1608     0343  00B1               	movwf	modbusReadCoils@start_coil
  1609     0344  3003               	movlw	3
  1610     0345  00B2               	movwf	modbusReadCoils@start_coil+1
  1611     0346  3007               	movlw	7
  1612     0347  00B3               	movwf	modbusReadCoils@coil_num
  1613     0348  3000               	movlw	0
  1614     0349  00B4               	movwf	modbusReadCoils@coil_num+1
  1615     034A  30B9               	movlw	(low (_tx_buffer| 0))& (0+255)
  1616     034B  120A  118A  25C6  120A  118A  	fcall	_modbusReadCoils
  1617     0350  3A00               	xorlw	0
  1618     0351  1D03               	skipz
  1619     0352  2B54               	goto	u621
  1620     0353  2B55               	goto	u620
  1621     0354                     u621:
  1622     0354  2C49               	goto	l1733
  1623     0355                     u620:
  1624     0355                     l1701:
  1625                           
  1626                           ;PIC16F877A_RS485_ModbusRTU_master.c: 46:                     RS485sendString(error_msg)
      +                          ;
  1627     0355  3043               	movlw	(low (_error_msg| 0))& (0+255)
  1628     0356  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  1629     035B  2C49               	goto	l1733
  1630     035C                     l1703:
  1631                           
  1632                           ;PIC16F877A_RS485_ModbusRTU_master.c: 49:                 if(! modbusReadRegisters(tx_bu
      +                          ffer, 25, READ_HOLDING_REGISTERS, 0x05, 4003, 3))
  1633     035C  3019               	movlw	25
  1634     035D  00AD               	movwf	modbusReadRegisters@len
  1635     035E  3000               	movlw	0
  1636     035F  00AE               	movwf	modbusReadRegisters@len+1
  1637     0360  3003               	movlw	3
  1638     0361  00AF               	movwf	modbusReadRegisters@mode
  1639     0362  3005               	movlw	5
  1640     0363  00B0               	movwf	modbusReadRegisters@slave_address
  1641     0364  30A3               	movlw	163
  1642     0365  00B1               	movwf	modbusReadRegisters@start_register
  1643     0366  300F               	movlw	15
  1644     0367  00B2               	movwf	modbusReadRegisters@start_register+1
  1645     0368  3003               	movlw	3
  1646     0369  00B3               	movwf	modbusReadRegisters@register_num
  1647     036A  3000               	movlw	0
  1648     036B  00B4               	movwf	modbusReadRegisters@register_num+1
  1649     036C  30B9               	movlw	(low (_tx_buffer| 0))& (0+255)
  1650     036D  120A  118A  263F  120A  118A  	fcall	_modbusReadRegisters
  1651     0372  3A00               	xorlw	0
  1652     0373  1D03               	skipz
  1653     0374  2B76               	goto	u631
  1654     0375  2B77               	goto	u630
  1655     0376                     u631:
  1656     0376  2C49               	goto	l1733
  1657     0377                     u630:
  1658     0377                     l1705:
  1659                           
  1660                           ;PIC16F877A_RS485_ModbusRTU_master.c: 50:                     RS485sendString(error_msg)
      +                          ;
  1661     0377  3043               	movlw	(low (_error_msg| 0))& (0+255)
  1662     0378  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  1663     037D  2C49               	goto	l1733
  1664     037E                     l1707:
  1665                           
  1666                           ;PIC16F877A_RS485_ModbusRTU_master.c: 53:                 if(! modbusReadRegisters(tx_bu
      +                          ffer, 25, READ_INPUT_REGISTERS, 0x05, 4005, 2))
  1667     037E  3019               	movlw	25
  1668     037F  00AD               	movwf	modbusReadRegisters@len
  1669     0380  3000               	movlw	0
  1670     0381  00AE               	movwf	modbusReadRegisters@len+1
  1671     0382  3004               	movlw	4
  1672     0383  00AF               	movwf	modbusReadRegisters@mode
  1673     0384  3005               	movlw	5
  1674     0385  00B0               	movwf	modbusReadRegisters@slave_address
  1675     0386  30A5               	movlw	165
  1676     0387  00B1               	movwf	modbusReadRegisters@start_register
  1677     0388  300F               	movlw	15
  1678     0389  00B2               	movwf	modbusReadRegisters@start_register+1
  1679     038A  3002               	movlw	2
  1680     038B  00B3               	movwf	modbusReadRegisters@register_num
  1681     038C  3000               	movlw	0
  1682     038D  00B4               	movwf	modbusReadRegisters@register_num+1
  1683     038E  30B9               	movlw	(low (_tx_buffer| 0))& (0+255)
  1684     038F  120A  118A  263F  120A  118A  	fcall	_modbusReadRegisters
  1685     0394  3A00               	xorlw	0
  1686     0395  1D03               	skipz
  1687     0396  2B98               	goto	u641
  1688     0397  2B99               	goto	u640
  1689     0398                     u641:
  1690     0398  2C49               	goto	l1733
  1691     0399                     u640:
  1692     0399                     l1709:
  1693                           
  1694                           ;PIC16F877A_RS485_ModbusRTU_master.c: 54:                     RS485sendString(error_msg)
      +                          ;
  1695     0399  3043               	movlw	(low (_error_msg| 0))& (0+255)
  1696     039A  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  1697     039F  2C49               	goto	l1733
  1698     03A0                     l1711:
  1699                           
  1700                           ;PIC16F877A_RS485_ModbusRTU_master.c: 57:                 if(! modbusWriteCoil(tx_buffer
      +                          , 25, 0x05, 1003, COIL_ON))
  1701     03A0  3019               	movlw	25
  1702     03A1  00AD               	movwf	modbusWriteCoil@len
  1703     03A2  3000               	movlw	0
  1704     03A3  00AE               	movwf	modbusWriteCoil@len+1
  1705     03A4  3005               	movlw	5
  1706     03A5  00AF               	movwf	modbusWriteCoil@slave_address
  1707     03A6  30EB               	movlw	235
  1708     03A7  00B0               	movwf	modbusWriteCoil@coil
  1709     03A8  3003               	movlw	3
  1710     03A9  00B1               	movwf	modbusWriteCoil@coil+1
  1711     03AA  01B2               	clrf	modbusWriteCoil@coil_state
  1712     03AB  30B9               	movlw	(low (_tx_buffer| 0))& (0+255)
  1713     03AC  120A  118A  271C  120A  118A  	fcall	_modbusWriteCoil
  1714     03B1  3A00               	xorlw	0
  1715     03B2  1D03               	skipz
  1716     03B3  2BB5               	goto	u651
  1717     03B4  2BB6               	goto	u650
  1718     03B5                     u651:
  1719     03B5  2C49               	goto	l1733
  1720     03B6                     u650:
  1721     03B6                     l1713:
  1722                           
  1723                           ;PIC16F877A_RS485_ModbusRTU_master.c: 58:                     RS485sendString(error_msg)
      +                          ;
  1724     03B6  3043               	movlw	(low (_error_msg| 0))& (0+255)
  1725     03B7  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  1726     03BC  2C49               	goto	l1733
  1727     03BD                     l1715:
  1728                           
  1729                           ;PIC16F877A_RS485_ModbusRTU_master.c: 61:                 if(! modbusWriteRegister(tx_bu
      +                          ffer, 25, 0x05, 4001, 15))
  1730     03BD  3019               	movlw	25
  1731     03BE  00AD               	movwf	modbusWriteRegister@len
  1732     03BF  3000               	movlw	0
  1733     03C0  00AE               	movwf	modbusWriteRegister@len+1
  1734     03C1  3005               	movlw	5
  1735     03C2  00AF               	movwf	modbusWriteRegister@slave_address
  1736     03C3  30A1               	movlw	161
  1737     03C4  00B0               	movwf	modbusWriteRegister@register_
  1738     03C5  300F               	movlw	15
  1739     03C6  00B1               	movwf	modbusWriteRegister@register_+1
  1740     03C7  300F               	movlw	15
  1741     03C8  00B2               	movwf	modbusWriteRegister@register_value
  1742     03C9  3000               	movlw	0
  1743     03CA  00B3               	movwf	modbusWriteRegister@register_value+1
  1744     03CB  30B9               	movlw	(low (_tx_buffer| 0))& (0+255)
  1745     03CC  120A  118A  2782  120A  118A  	fcall	_modbusWriteRegister
  1746     03D1  3A00               	xorlw	0
  1747     03D2  1D03               	skipz
  1748     03D3  2BD5               	goto	u661
  1749     03D4  2BD6               	goto	u660
  1750     03D5                     u661:
  1751     03D5  2C49               	goto	l1733
  1752     03D6                     u660:
  1753     03D6                     l1717:
  1754                           
  1755                           ;PIC16F877A_RS485_ModbusRTU_master.c: 62:                     RS485sendString(error_msg)
      +                          ;
  1756     03D6  3043               	movlw	(low (_error_msg| 0))& (0+255)
  1757     03D7  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  1758     03DC  2C49               	goto	l1733
  1759     03DD                     l1719:
  1760                           
  1761                           ;PIC16F877A_RS485_ModbusRTU_master.c: 65:                 if(! modbusWriteCoils(tx_buffe
      +                          r, 25, 0x05, 1001, 13, coil_write_state))
  1762     03DD  3019               	movlw	25
  1763     03DE  00AD               	movwf	modbusWriteCoils@len
  1764     03DF  3000               	movlw	0
  1765     03E0  00AE               	movwf	modbusWriteCoils@len+1
  1766     03E1  3005               	movlw	5
  1767     03E2  00AF               	movwf	modbusWriteCoils@slave_address
  1768     03E3  30E9               	movlw	233
  1769     03E4  00B0               	movwf	modbusWriteCoils@start_coil
  1770     03E5  3003               	movlw	3
  1771     03E6  00B1               	movwf	modbusWriteCoils@start_coil+1
  1772     03E7  300D               	movlw	13
  1773     03E8  00B2               	movwf	modbusWriteCoils@coil_num
  1774     03E9  3000               	movlw	0
  1775     03EA  00B3               	movwf	modbusWriteCoils@coil_num+1
  1776     03EB  305A               	movlw	(low (_coil_write_state| 0))& (0+255)
  1777     03EC  00B4               	movwf	modbusWriteCoils@coil_state
  1778     03ED  30B9               	movlw	(low (_tx_buffer| 0))& (0+255)
  1779     03EE  120A  118A  252F  120A  118A  	fcall	_modbusWriteCoils
  1780     03F3  3A00               	xorlw	0
  1781     03F4  1D03               	skipz
  1782     03F5  2BF7               	goto	u671
  1783     03F6  2BF8               	goto	u670
  1784     03F7                     u671:
  1785     03F7  2C49               	goto	l1733
  1786     03F8                     u670:
  1787     03F8                     l1721:
  1788                           
  1789                           ;PIC16F877A_RS485_ModbusRTU_master.c: 66:                     RS485sendString(error_msg)
      +                          ;
  1790     03F8  3043               	movlw	(low (_error_msg| 0))& (0+255)
  1791     03F9  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  1792     03FE  2C49               	goto	l1733
  1793     03FF                     l1723:
  1794                           
  1795                           ;PIC16F877A_RS485_ModbusRTU_master.c: 69:                 state = 0;
  1796     03FF  01E6               	clrf	_state
  1797     0400                     l1725:
  1798                           
  1799                           ;PIC16F877A_RS485_ModbusRTU_master.c: 70:                 if(! modbusWriteRegisters(tx_b
      +                          uffer, 25, 0x05, 4002, 2, register_write_buffer))
  1800     0400  3019               	movlw	25
  1801     0401  00AD               	movwf	modbusWriteRegisters@len
  1802     0402  3000               	movlw	0
  1803     0403  00AE               	movwf	modbusWriteRegisters@len+1
  1804     0404  3005               	movlw	5
  1805     0405  00AF               	movwf	modbusWriteRegisters@slave_address
  1806     0406  30A2               	movlw	162
  1807     0407  00B0               	movwf	modbusWriteRegisters@start_register
  1808     0408  300F               	movlw	15
  1809     0409  00B1               	movwf	modbusWriteRegisters@start_register+1
  1810     040A  3002               	movlw	2
  1811     040B  00B2               	movwf	modbusWriteRegisters@register_num
  1812     040C  3000               	movlw	0
  1813     040D  00B3               	movwf	modbusWriteRegisters@register_num+1
  1814     040E  3056               	movlw	(low (_register_write_buffer| 0))& (0+255)
  1815     040F  00B4               	movwf	modbusWriteRegisters@register_value
  1816     0410  30B9               	movlw	(low (_tx_buffer| 0))& (0+255)
  1817     0411  120A  118A  245C  120A  118A  	fcall	_modbusWriteRegisters
  1818     0416  3A00               	xorlw	0
  1819     0417  1D03               	skipz
  1820     0418  2C1A               	goto	u681
  1821     0419  2C1B               	goto	u680
  1822     041A                     u681:
  1823     041A  2C49               	goto	l1733
  1824     041B                     u680:
  1825     041B                     l1727:
  1826                           
  1827                           ;PIC16F877A_RS485_ModbusRTU_master.c: 71:                     RS485sendString(error_msg)
      +                          ;
  1828     041B  3043               	movlw	(low (_error_msg| 0))& (0+255)
  1829     041C  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  1830     0421  2C49               	goto	l1733
  1831     0422                     l1731:
  1832     0422  3001               	movlw	1
  1833     0423  1283               	bcf	3,5	;RP0=0, select bank0
  1834     0424  1303               	bcf	3,6	;RP1=0, select bank0
  1835     0425  07E6               	addwf	_state,f
  1836     0426  30FF               	movlw	-1
  1837     0427  0766               	addwf	_state,w
  1838     0428  00C0               	movwf	??_main
  1839     0429  01C1               	clrf	??_main+1
  1840                           
  1841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1842                           ; Switch size 1, requested type "simple"
  1843                           ; Number of cases is 1, Range of values is 0 to 0
  1844                           ; switch strategies available:
  1845                           ; Name         Instructions Cycles
  1846                           ; simple_byte            4     3 (average)
  1847                           ; direct_byte           11     8 (fixed)
  1848                           ; jumptable            260     6 (fixed)
  1849                           ;	Chosen strategy is simple_byte
  1850     042A  0841               	movf	??_main+1,w
  1851     042B  3A00               	xorlw	0	; case 0
  1852     042C  1903               	skipnz
  1853     042D  2C2F               	goto	l1781
  1854     042E  2C49               	goto	l1733
  1855     042F                     l1781:
  1856                           
  1857                           ; Switch size 1, requested type "simple"
  1858                           ; Number of cases is 8, Range of values is 0 to 7
  1859                           ; switch strategies available:
  1860                           ; Name         Instructions Cycles
  1861                           ; simple_byte           25    13 (average)
  1862                           ; direct_byte           32     8 (fixed)
  1863                           ; jumptable            260     6 (fixed)
  1864                           ;	Chosen strategy is simple_byte
  1865     042F  0840               	movf	??_main,w
  1866     0430  3A00               	xorlw	0	; case 0
  1867     0431  1903               	skipnz
  1868     0432  2B18               	goto	l1695
  1869     0433  3A01               	xorlw	1	; case 1
  1870     0434  1903               	skipnz
  1871     0435  2B3A               	goto	l1699
  1872     0436  3A03               	xorlw	3	; case 2
  1873     0437  1903               	skipnz
  1874     0438  2B5C               	goto	l1703
  1875     0439  3A01               	xorlw	1	; case 3
  1876     043A  1903               	skipnz
  1877     043B  2B7E               	goto	l1707
  1878     043C  3A07               	xorlw	7	; case 4
  1879     043D  1903               	skipnz
  1880     043E  2BA0               	goto	l1711
  1881     043F  3A01               	xorlw	1	; case 5
  1882     0440  1903               	skipnz
  1883     0441  2BBD               	goto	l1715
  1884     0442  3A03               	xorlw	3	; case 6
  1885     0443  1903               	skipnz
  1886     0444  2BDD               	goto	l1719
  1887     0445  3A01               	xorlw	1	; case 7
  1888     0446  1903               	skipnz
  1889     0447  2BFF               	goto	l1723
  1890     0448  2C49               	goto	l1733
  1891     0449                     l1733:
  1892                           
  1893                           ;PIC16F877A_RS485_ModbusRTU_master.c: 74:         _delay((unsigned long)((1000)*(1600000
      +                          0/4000.0)));
  1894     0449  3015               	movlw	21
  1895     044A  1283               	bcf	3,5	;RP0=0, select bank0
  1896     044B  1303               	bcf	3,6	;RP1=0, select bank0
  1897     044C  00C2               	movwf	??_main+2
  1898     044D  304B               	movlw	75
  1899     044E  00C1               	movwf	??_main+1
  1900     044F  30BD               	movlw	189
  1901     0450  00C0               	movwf	??_main
  1902     0451                     u697:
  1903     0451  0BC0               	decfsz	??_main,f
  1904     0452  2C51               	goto	u697
  1905     0453  0BC1               	decfsz	??_main+1,f
  1906     0454  2C51               	goto	u697
  1907     0455  0BC2               	decfsz	??_main+2,f
  1908     0456  2C51               	goto	u697
  1909     0457  2C58               	nop2
  1910     0458  2C22               	goto	l1731
  1911     0459  120A  118A  2810   	ljmp	start
  1912     045C                     __end_of_main:
  1913                           
  1914                           	psect	text1
  1915     045C                     __ptext1:	
  1916 ;; *************** function _modbusWriteRegisters *****************
  1917 ;; Defined at:
  1918 ;;		line 203 in file "RS485_ModbusRTU_master.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  tx_buffer       1    wreg     PTR unsigned char 
  1921 ;;		 -> tx_buffer(25), 
  1922 ;;  len             2   13[BANK0 ] unsigned int 
  1923 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  1924 ;;  start_regist    2   16[BANK0 ] unsigned int 
  1925 ;;  register_num    2   18[BANK0 ] unsigned int 
  1926 ;;  register_val    1   20[BANK0 ] PTR unsigned int 
  1927 ;;		 -> register_write_buffer(4), 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  tx_buffer       1   31[BANK0 ] PTR unsigned char 
  1930 ;;		 -> tx_buffer(25), 
  1931 ;;  checksum        2   28[BANK0 ] unsigned int 
  1932 ;;  i               1   30[BANK0 ] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      unsigned char 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1942 ;;      Params:         0       8       0       0       0
  1943 ;;      Locals:         0       4       0       0       0
  1944 ;;      Temps:          0       7       0       0       0
  1945 ;;      Totals:         0      19       0       0       0
  1946 ;;Total ram usage:       19 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 8
  1949 ;; This function calls:
  1950 ;;		_RS485sendString
  1951 ;;		___awdiv
  1952 ;;		_clearBuffer
  1953 ;;		_crc16
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959     045C                     _modbusWriteRegisters:	
  1960                           ;psect for function _modbusWriteRegisters
  1961                           
  1962                           
  1963                           ;incstack = 0
  1964 ;; hardware stack exceeded
  1965                           ; Regs used in _modbusWriteRegisters: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1966                           ;modbusWriteRegisters@tx_buffer stored from wreg
  1967     045C  1283               	bcf	3,5	;RP0=0, select bank0
  1968     045D  1303               	bcf	3,6	;RP1=0, select bank0
  1969     045E  00BF               	movwf	modbusWriteRegisters@tx_buffer
  1970     045F                     l1633:
  1971                           
  1972                           ;RS485_ModbusRTU_master.c: 203: uint8_t modbusWriteRegisters(uint8_t *tx_buffer, uint16_
      +                          t len, uint8_t slave_address, uint16_t start_register, uint16_t register_num, uint16_t *
      +                          register_value);RS485_ModbusRTU_master.c: 204: {;RS485_ModbusRTU_master.c: 206:     clea
      +                          rBuffer(tx_buffer, len);
  1973     045F  082E               	movf	modbusWriteRegisters@len+1,w
  1974     0460  00A4               	movwf	clearBuffer@len+1
  1975     0461  082D               	movf	modbusWriteRegisters@len,w
  1976     0462  00A3               	movwf	clearBuffer@len
  1977     0463  083F               	movf	modbusWriteRegisters@tx_buffer,w
  1978     0464  120A  118A  20CC  120A  118A  	fcall	_clearBuffer
  1979     0469                     l1635:
  1980                           
  1981                           ;RS485_ModbusRTU_master.c: 209:     tx_buffer[0] = slave_address;
  1982     0469  1283               	bcf	3,5	;RP0=0, select bank0
  1983     046A  1303               	bcf	3,6	;RP1=0, select bank0
  1984     046B  083F               	movf	modbusWriteRegisters@tx_buffer,w
  1985     046C  0084               	movwf	4
  1986     046D  082F               	movf	modbusWriteRegisters@slave_address,w
  1987     046E  1383               	bcf	3,7	;select IRP bank0
  1988     046F  0080               	movwf	0
  1989     0470                     l1637:
  1990                           
  1991                           ;RS485_ModbusRTU_master.c: 212:     tx_buffer[1] = 0x10;
  1992     0470  0A3F               	incf	modbusWriteRegisters@tx_buffer,w
  1993     0471  0084               	movwf	4
  1994     0472  3010               	movlw	16
  1995     0473  0080               	movwf	0
  1996     0474                     l1639:
  1997                           
  1998                           ;RS485_ModbusRTU_master.c: 215:     tx_buffer[3] = start_register & 0xFF;
  1999     0474  083F               	movf	modbusWriteRegisters@tx_buffer,w
  2000     0475  3E03               	addlw	3
  2001     0476  0084               	movwf	4
  2002     0477  0830               	movf	modbusWriteRegisters@start_register,w
  2003     0478  0080               	movwf	0
  2004     0479                     l1641:
  2005                           
  2006                           ;RS485_ModbusRTU_master.c: 216:     tx_buffer[2] = (start_register >> 8) & 0xFF;
  2007     0479  083F               	movf	modbusWriteRegisters@tx_buffer,w
  2008     047A  3E02               	addlw	2
  2009     047B  0084               	movwf	4
  2010     047C  0831               	movf	modbusWriteRegisters@start_register+1,w
  2011     047D  0080               	movwf	0
  2012     047E                     l1643:
  2013                           
  2014                           ;RS485_ModbusRTU_master.c: 219:     tx_buffer[5] = register_num & 0xFF;
  2015     047E  083F               	movf	modbusWriteRegisters@tx_buffer,w
  2016     047F  3E05               	addlw	5
  2017     0480  0084               	movwf	4
  2018     0481  0832               	movf	modbusWriteRegisters@register_num,w
  2019     0482  0080               	movwf	0
  2020     0483                     l1645:
  2021                           
  2022                           ;RS485_ModbusRTU_master.c: 220:     tx_buffer[4] = (register_num >> 8) & 0xFF;
  2023     0483  083F               	movf	modbusWriteRegisters@tx_buffer,w
  2024     0484  3E04               	addlw	4
  2025     0485  0084               	movwf	4
  2026     0486  0833               	movf	modbusWriteRegisters@register_num+1,w
  2027     0487  0080               	movwf	0
  2028     0488                     l1647:
  2029                           
  2030                           ;RS485_ModbusRTU_master.c: 223:     tx_buffer[6] = register_num * 2;
  2031     0488  083F               	movf	modbusWriteRegisters@tx_buffer,w
  2032     0489  3E06               	addlw	6
  2033     048A  0084               	movwf	4
  2034     048B  0832               	movf	modbusWriteRegisters@register_num,w
  2035     048C  00B5               	movwf	??_modbusWriteRegisters
  2036     048D  0735               	addwf	??_modbusWriteRegisters,w
  2037     048E  0080               	movwf	0
  2038     048F                     l1649:
  2039                           
  2040                           ;RS485_ModbusRTU_master.c: 225:     uint8_t i;;RS485_ModbusRTU_master.c: 226:     for (i
      +                           = 0; i < register_num * 2; ++i)
  2041     048F  01BE               	clrf	modbusWriteRegisters@i
  2042     0490  2CE7               	goto	l1657
  2043     0491                     l233:
  2044                           
  2045                           ;RS485_ModbusRTU_master.c: 227:     {;RS485_ModbusRTU_master.c: 228:         if (i % 2 =
      +                          = 0)
  2046     0491  183E               	btfsc	modbusWriteRegisters@i,0
  2047     0492  2C94               	goto	u581
  2048     0493  2C95               	goto	u580
  2049     0494                     u581:
  2050     0494  2CBF               	goto	l1653
  2051     0495                     u580:
  2052     0495                     l1651:
  2053                           
  2054                           ;RS485_ModbusRTU_master.c: 229:             tx_buffer[3 + i] = (register_value[i / 2] >>
      +                           8) & 0xFF;
  2055     0495  3002               	movlw	2
  2056     0496  00A3               	movwf	___awdiv@divisor
  2057     0497  3000               	movlw	0
  2058     0498  00A4               	movwf	___awdiv@divisor+1
  2059     0499  083E               	movf	modbusWriteRegisters@i,w
  2060     049A  00B5               	movwf	??_modbusWriteRegisters
  2061     049B  01B6               	clrf	??_modbusWriteRegisters+1
  2062     049C  0835               	movf	??_modbusWriteRegisters,w
  2063     049D  00A5               	movwf	___awdiv@dividend
  2064     049E  0836               	movf	??_modbusWriteRegisters+1,w
  2065     049F  00A6               	movwf	___awdiv@dividend+1
  2066     04A0  120A  118A  26B3  120A  118A  	fcall	___awdiv
  2067     04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2068     04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2069     04A7  0823               	movf	?___awdiv,w
  2070     04A8  00B7               	movwf	??_modbusWriteRegisters+2
  2071     04A9  0737               	addwf	??_modbusWriteRegisters+2,w
  2072     04AA  0734               	addwf	modbusWriteRegisters@register_value,w
  2073     04AB  00B8               	movwf	??_modbusWriteRegisters+3
  2074     04AC  0838               	movf	??_modbusWriteRegisters+3,w
  2075     04AD  0084               	movwf	4
  2076     04AE  1383               	bcf	3,7	;select IRP bank0
  2077     04AF  0800               	movf	0,w
  2078     04B0  00B9               	movwf	??_modbusWriteRegisters+4
  2079     04B1  0A84               	incf	4,f
  2080     04B2  0800               	movf	0,w
  2081     04B3  00BA               	movwf	??_modbusWriteRegisters+5
  2082     04B4  083A               	movf	??_modbusWriteRegisters+5,w
  2083     04B5  00FF               	movwf	btemp+1
  2084     04B6  083E               	movf	modbusWriteRegisters@i,w
  2085     04B7  073F               	addwf	modbusWriteRegisters@tx_buffer,w
  2086     04B8  00BB               	movwf	??_modbusWriteRegisters+6
  2087     04B9  083B               	movf	??_modbusWriteRegisters+6,w
  2088     04BA  3E03               	addlw	3
  2089     04BB  0084               	movwf	4
  2090     04BC  087F               	movf	btemp+1,w
  2091     04BD  0080               	movwf	0
  2092     04BE  2CE3               	goto	l1655
  2093     04BF                     l1653:
  2094                           
  2095                           ;RS485_ModbusRTU_master.c: 231:             tx_buffer[3 + i] = register_value[i / 2] & 0
      +                          xFF;
  2096     04BF  3002               	movlw	2
  2097     04C0  00A3               	movwf	___awdiv@divisor
  2098     04C1  3000               	movlw	0
  2099     04C2  00A4               	movwf	___awdiv@divisor+1
  2100     04C3  083E               	movf	modbusWriteRegisters@i,w
  2101     04C4  00B5               	movwf	??_modbusWriteRegisters
  2102     04C5  01B6               	clrf	??_modbusWriteRegisters+1
  2103     04C6  0835               	movf	??_modbusWriteRegisters,w
  2104     04C7  00A5               	movwf	___awdiv@dividend
  2105     04C8  0836               	movf	??_modbusWriteRegisters+1,w
  2106     04C9  00A6               	movwf	___awdiv@dividend+1
  2107     04CA  120A  118A  26B3  120A  118A  	fcall	___awdiv
  2108     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2109     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2110     04D1  0823               	movf	?___awdiv,w
  2111     04D2  00B7               	movwf	??_modbusWriteRegisters+2
  2112     04D3  0737               	addwf	??_modbusWriteRegisters+2,w
  2113     04D4  0734               	addwf	modbusWriteRegisters@register_value,w
  2114     04D5  00B8               	movwf	??_modbusWriteRegisters+3
  2115     04D6  0838               	movf	??_modbusWriteRegisters+3,w
  2116     04D7  0084               	movwf	4
  2117     04D8  1383               	bcf	3,7	;select IRP bank0
  2118     04D9  0800               	movf	0,w
  2119     04DA  00FF               	movwf	btemp+1
  2120     04DB  083E               	movf	modbusWriteRegisters@i,w
  2121     04DC  073F               	addwf	modbusWriteRegisters@tx_buffer,w
  2122     04DD  00B9               	movwf	??_modbusWriteRegisters+4
  2123     04DE  0839               	movf	??_modbusWriteRegisters+4,w
  2124     04DF  3E03               	addlw	3
  2125     04E0  0084               	movwf	4
  2126     04E1  087F               	movf	btemp+1,w
  2127     04E2  0080               	movwf	0
  2128     04E3                     l1655:
  2129                           
  2130                           ;RS485_ModbusRTU_master.c: 232:     }
  2131     04E3  3001               	movlw	1
  2132     04E4  00FF               	movwf	btemp+1
  2133     04E5  087F               	movf	btemp+1,w
  2134     04E6  07BE               	addwf	modbusWriteRegisters@i,f
  2135     04E7                     l1657:
  2136     04E7  0833               	movf	modbusWriteRegisters@register_num+1,w
  2137     04E8  00B6               	movwf	??_modbusWriteRegisters+1
  2138     04E9  0832               	movf	modbusWriteRegisters@register_num,w
  2139     04EA  00B5               	movwf	??_modbusWriteRegisters
  2140     04EB  1003               	clrc
  2141     04EC  0DB5               	rlf	??_modbusWriteRegisters,f
  2142     04ED  0DB6               	rlf	??_modbusWriteRegisters+1,f
  2143     04EE  083E               	movf	modbusWriteRegisters@i,w
  2144     04EF  00B7               	movwf	??_modbusWriteRegisters+2
  2145     04F0  01B8               	clrf	??_modbusWriteRegisters+3
  2146     04F1  0836               	movf	??_modbusWriteRegisters+1,w
  2147     04F2  0238               	subwf	??_modbusWriteRegisters+3,w
  2148     04F3  1D03               	skipz
  2149     04F4  2CF7               	goto	u595
  2150     04F5  0835               	movf	??_modbusWriteRegisters,w
  2151     04F6  0237               	subwf	??_modbusWriteRegisters+2,w
  2152     04F7                     u595:
  2153     04F7  1C03               	skipc
  2154     04F8  2CFA               	goto	u591
  2155     04F9  2CFB               	goto	u590
  2156     04FA                     u591:
  2157     04FA  2C91               	goto	l233
  2158     04FB                     u590:
  2159     04FB                     l1659:
  2160                           
  2161                           ;RS485_ModbusRTU_master.c: 235:     uint16_t checksum = crc16(tx_buffer, i);
  2162     04FB  083E               	movf	modbusWriteRegisters@i,w
  2163     04FC  00B5               	movwf	??_modbusWriteRegisters
  2164     04FD  01B6               	clrf	??_modbusWriteRegisters+1
  2165     04FE  0835               	movf	??_modbusWriteRegisters,w
  2166     04FF  00A3               	movwf	crc16@length
  2167     0500  0836               	movf	??_modbusWriteRegisters+1,w
  2168     0501  00A4               	movwf	crc16@length+1
  2169     0502  083F               	movf	modbusWriteRegisters@tx_buffer,w
  2170     0503  120A  118A  2082  120A  118A  	fcall	_crc16
  2171     0508  1283               	bcf	3,5	;RP0=0, select bank0
  2172     0509  1303               	bcf	3,6	;RP1=0, select bank0
  2173     050A  0824               	movf	?_crc16+1,w
  2174     050B  00BD               	movwf	modbusWriteRegisters@checksum+1
  2175     050C  0823               	movf	?_crc16,w
  2176     050D  00BC               	movwf	modbusWriteRegisters@checksum
  2177     050E                     l1661:
  2178                           
  2179                           ;RS485_ModbusRTU_master.c: 236:     tx_buffer[i++] = checksum & 0xFF;
  2180     050E  083E               	movf	modbusWriteRegisters@i,w
  2181     050F  073F               	addwf	modbusWriteRegisters@tx_buffer,w
  2182     0510  00B5               	movwf	??_modbusWriteRegisters
  2183     0511  0835               	movf	??_modbusWriteRegisters,w
  2184     0512  0084               	movwf	4
  2185     0513  083C               	movf	modbusWriteRegisters@checksum,w
  2186     0514  1383               	bcf	3,7	;select IRP bank0
  2187     0515  0080               	movwf	0
  2188     0516                     l1663:
  2189     0516  3001               	movlw	1
  2190     0517  00FF               	movwf	btemp+1
  2191     0518  087F               	movf	btemp+1,w
  2192     0519  07BE               	addwf	modbusWriteRegisters@i,f
  2193     051A                     l1665:
  2194                           
  2195                           ;RS485_ModbusRTU_master.c: 237:     tx_buffer[i] = (checksum >> 8) & 0xFF;
  2196     051A  083E               	movf	modbusWriteRegisters@i,w
  2197     051B  073F               	addwf	modbusWriteRegisters@tx_buffer,w
  2198     051C  00B5               	movwf	??_modbusWriteRegisters
  2199     051D  0835               	movf	??_modbusWriteRegisters,w
  2200     051E  0084               	movwf	4
  2201     051F  083D               	movf	modbusWriteRegisters@checksum+1,w
  2202     0520  0080               	movwf	0
  2203     0521                     l1667:
  2204                           
  2205                           ;RS485_ModbusRTU_master.c: 240:     RS485sendString((char *)tx_buffer);
  2206     0521  083F               	movf	modbusWriteRegisters@tx_buffer,w
  2207     0522  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  2208     0527                     l1669:
  2209                           
  2210                           ;RS485_ModbusRTU_master.c: 243:     master_rcv_buffer_len = 8;
  2211     0527  3008               	movlw	8
  2212     0528  1283               	bcf	3,5	;RP0=0, select bank0
  2213     0529  1303               	bcf	3,6	;RP1=0, select bank0
  2214     052A  00DE               	movwf	_master_rcv_buffer_len
  2215     052B  3000               	movlw	0
  2216     052C  00DF               	movwf	_master_rcv_buffer_len+1
  2217     052D                     l1671:
  2218                           
  2219                           ;RS485_ModbusRTU_master.c: 244:     return 1;
  2220     052D  3001               	movlw	1
  2221     052E                     l237:
  2222     052E  0008               	return
  2223     052F                     __end_of_modbusWriteRegisters:
  2224                           
  2225                           	psect	text2
  2226     06B3                     __ptext2:	
  2227 ;; *************** function ___awdiv *****************
  2228 ;; Defined at:
  2229 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  divisor         2    3[BANK0 ] int 
  2232 ;;  dividend        2    5[BANK0 ] int 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  quotient        2    9[BANK0 ] int 
  2235 ;;  sign            1    8[BANK0 ] unsigned char 
  2236 ;;  counter         1    7[BANK0 ] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  2    3[BANK0 ] int 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0, btemp+1
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246 ;;      Params:         0       4       0       0       0
  2247 ;;      Locals:         0       4       0       0       0
  2248 ;;      Temps:          0       0       0       0       0
  2249 ;;      Totals:         0       8       0       0       0
  2250 ;;Total ram usage:        8 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; Hardware stack levels required when called: 5
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_modbusWriteRegisters
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260     06B3                     ___awdiv:	
  2261                           ;psect for function ___awdiv
  2262                           
  2263     06B3                     l1417:	
  2264                           ;incstack = 0
  2265                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2266                           
  2267     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2268     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2269     06B5  01A8               	clrf	___awdiv@sign
  2270     06B6                     l1419:
  2271     06B6  1FA4               	btfss	___awdiv@divisor+1,7
  2272     06B7  2EB9               	goto	u411
  2273     06B8  2EBA               	goto	u410
  2274     06B9                     u411:
  2275     06B9  2EC1               	goto	l1425
  2276     06BA                     u410:
  2277     06BA                     l1421:
  2278     06BA  09A3               	comf	___awdiv@divisor,f
  2279     06BB  09A4               	comf	___awdiv@divisor+1,f
  2280     06BC  0AA3               	incf	___awdiv@divisor,f
  2281     06BD  1903               	skipnz
  2282     06BE  0AA4               	incf	___awdiv@divisor+1,f
  2283     06BF                     l1423:
  2284     06BF  01A8               	clrf	___awdiv@sign
  2285     06C0  0AA8               	incf	___awdiv@sign,f
  2286     06C1                     l1425:
  2287     06C1  1FA6               	btfss	___awdiv@dividend+1,7
  2288     06C2  2EC4               	goto	u421
  2289     06C3  2EC5               	goto	u420
  2290     06C4                     u421:
  2291     06C4  2ECE               	goto	l1431
  2292     06C5                     u420:
  2293     06C5                     l1427:
  2294     06C5  09A5               	comf	___awdiv@dividend,f
  2295     06C6  09A6               	comf	___awdiv@dividend+1,f
  2296     06C7  0AA5               	incf	___awdiv@dividend,f
  2297     06C8  1903               	skipnz
  2298     06C9  0AA6               	incf	___awdiv@dividend+1,f
  2299     06CA                     l1429:
  2300     06CA  3001               	movlw	1
  2301     06CB  00FF               	movwf	btemp+1
  2302     06CC  087F               	movf	btemp+1,w
  2303     06CD  06A8               	xorwf	___awdiv@sign,f
  2304     06CE                     l1431:
  2305     06CE  01A9               	clrf	___awdiv@quotient
  2306     06CF  01AA               	clrf	___awdiv@quotient+1
  2307     06D0                     l1433:
  2308     06D0  0823               	movf	___awdiv@divisor,w
  2309     06D1  0424               	iorwf	___awdiv@divisor+1,w
  2310     06D2  1903               	btfsc	3,2
  2311     06D3  2ED5               	goto	u431
  2312     06D4  2ED6               	goto	u430
  2313     06D5                     u431:
  2314     06D5  2F0D               	goto	l1453
  2315     06D6                     u430:
  2316     06D6                     l1435:
  2317     06D6  01A7               	clrf	___awdiv@counter
  2318     06D7  0AA7               	incf	___awdiv@counter,f
  2319     06D8  2EE4               	goto	l1441
  2320     06D9                     l1437:
  2321     06D9  3001               	movlw	1
  2322     06DA                     u445:
  2323     06DA  1003               	clrc
  2324     06DB  0DA3               	rlf	___awdiv@divisor,f
  2325     06DC  0DA4               	rlf	___awdiv@divisor+1,f
  2326     06DD  3EFF               	addlw	-1
  2327     06DE  1D03               	skipz
  2328     06DF  2EDA               	goto	u445
  2329     06E0                     l1439:
  2330     06E0  3001               	movlw	1
  2331     06E1  00FF               	movwf	btemp+1
  2332     06E2  087F               	movf	btemp+1,w
  2333     06E3  07A7               	addwf	___awdiv@counter,f
  2334     06E4                     l1441:
  2335     06E4  1FA4               	btfss	___awdiv@divisor+1,7
  2336     06E5  2EE7               	goto	u451
  2337     06E6  2EE8               	goto	u450
  2338     06E7                     u451:
  2339     06E7  2ED9               	goto	l1437
  2340     06E8                     u450:
  2341     06E8                     l1443:
  2342     06E8  3001               	movlw	1
  2343     06E9                     u465:
  2344     06E9  1003               	clrc
  2345     06EA  0DA9               	rlf	___awdiv@quotient,f
  2346     06EB  0DAA               	rlf	___awdiv@quotient+1,f
  2347     06EC  3EFF               	addlw	-1
  2348     06ED  1D03               	skipz
  2349     06EE  2EE9               	goto	u465
  2350     06EF  0824               	movf	___awdiv@divisor+1,w
  2351     06F0  0226               	subwf	___awdiv@dividend+1,w
  2352     06F1  1D03               	skipz
  2353     06F2  2EF5               	goto	u475
  2354     06F3  0823               	movf	___awdiv@divisor,w
  2355     06F4  0225               	subwf	___awdiv@dividend,w
  2356     06F5                     u475:
  2357     06F5  1C03               	skipc
  2358     06F6  2EF8               	goto	u471
  2359     06F7  2EF9               	goto	u470
  2360     06F8                     u471:
  2361     06F8  2F00               	goto	l1449
  2362     06F9                     u470:
  2363     06F9                     l1445:
  2364     06F9  0823               	movf	___awdiv@divisor,w
  2365     06FA  02A5               	subwf	___awdiv@dividend,f
  2366     06FB  0824               	movf	___awdiv@divisor+1,w
  2367     06FC  1C03               	skipc
  2368     06FD  03A6               	decf	___awdiv@dividend+1,f
  2369     06FE  02A6               	subwf	___awdiv@dividend+1,f
  2370     06FF                     l1447:
  2371     06FF  1429               	bsf	___awdiv@quotient,0
  2372     0700                     l1449:
  2373     0700  3001               	movlw	1
  2374     0701                     u485:
  2375     0701  1003               	clrc
  2376     0702  0CA4               	rrf	___awdiv@divisor+1,f
  2377     0703  0CA3               	rrf	___awdiv@divisor,f
  2378     0704  3EFF               	addlw	-1
  2379     0705  1D03               	skipz
  2380     0706  2F01               	goto	u485
  2381     0707                     l1451:
  2382     0707  3001               	movlw	1
  2383     0708  02A7               	subwf	___awdiv@counter,f
  2384     0709  1D03               	btfss	3,2
  2385     070A  2F0C               	goto	u491
  2386     070B  2F0D               	goto	u490
  2387     070C                     u491:
  2388     070C  2EE8               	goto	l1443
  2389     070D                     u490:
  2390     070D                     l1453:
  2391     070D  0828               	movf	___awdiv@sign,w
  2392     070E  1903               	btfsc	3,2
  2393     070F  2F11               	goto	u501
  2394     0710  2F12               	goto	u500
  2395     0711                     u501:
  2396     0711  2F17               	goto	l1457
  2397     0712                     u500:
  2398     0712                     l1455:
  2399     0712  09A9               	comf	___awdiv@quotient,f
  2400     0713  09AA               	comf	___awdiv@quotient+1,f
  2401     0714  0AA9               	incf	___awdiv@quotient,f
  2402     0715  1903               	skipnz
  2403     0716  0AAA               	incf	___awdiv@quotient+1,f
  2404     0717                     l1457:
  2405     0717  082A               	movf	___awdiv@quotient+1,w
  2406     0718  00A4               	movwf	?___awdiv+1
  2407     0719  0829               	movf	___awdiv@quotient,w
  2408     071A  00A3               	movwf	?___awdiv
  2409     071B                     l482:
  2410     071B  0008               	return
  2411     071C                     __end_of___awdiv:
  2412                           
  2413                           	psect	text3
  2414     0782                     __ptext3:	
  2415 ;; *************** function _modbusWriteRegister *****************
  2416 ;; Defined at:
  2417 ;;		line 133 in file "RS485_ModbusRTU_master.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  tx_buffer       1    wreg     PTR unsigned char 
  2420 ;;		 -> tx_buffer(25), 
  2421 ;;  len             2   13[BANK0 ] unsigned int 
  2422 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  2423 ;;  register_       2   16[BANK0 ] unsigned int 
  2424 ;;  register_val    2   18[BANK0 ] unsigned int 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  tx_buffer       1   22[BANK0 ] PTR unsigned char 
  2427 ;;		 -> tx_buffer(25), 
  2428 ;;  checksum        2   20[BANK0 ] unsigned int 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      unsigned char 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2438 ;;      Params:         0       7       0       0       0
  2439 ;;      Locals:         0       3       0       0       0
  2440 ;;      Temps:          0       0       0       0       0
  2441 ;;      Totals:         0      10       0       0       0
  2442 ;;Total ram usage:       10 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 8
  2445 ;; This function calls:
  2446 ;;		_RS485sendString
  2447 ;;		_clearBuffer
  2448 ;;		_crc16
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454     0782                     _modbusWriteRegister:	
  2455                           ;psect for function _modbusWriteRegister
  2456                           
  2457                           
  2458                           ;incstack = 0
  2459 ;; hardware stack exceeded
  2460                           ; Regs used in _modbusWriteRegister: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2461                           ;modbusWriteRegister@tx_buffer stored from wreg
  2462     0782  1283               	bcf	3,5	;RP0=0, select bank0
  2463     0783  1303               	bcf	3,6	;RP1=0, select bank0
  2464     0784  00B6               	movwf	modbusWriteRegister@tx_buffer
  2465     0785                     l1569:
  2466                           
  2467                           ;RS485_ModbusRTU_master.c: 133: uint8_t modbusWriteRegister(uint8_t *tx_buffer, uint16_t
      +                           len, uint8_t slave_address, uint16_t register_, uint16_t register_value);RS485_ModbusRT
      +                          U_master.c: 134: {;RS485_ModbusRTU_master.c: 136:     clearBuffer(tx_buffer, len);
  2468     0785  082E               	movf	modbusWriteRegister@len+1,w
  2469     0786  00A4               	movwf	clearBuffer@len+1
  2470     0787  082D               	movf	modbusWriteRegister@len,w
  2471     0788  00A3               	movwf	clearBuffer@len
  2472     0789  0836               	movf	modbusWriteRegister@tx_buffer,w
  2473     078A  120A  118A  20CC  120A  118A  	fcall	_clearBuffer
  2474     078F                     l1571:
  2475                           
  2476                           ;RS485_ModbusRTU_master.c: 139:     tx_buffer[0] = slave_address;
  2477     078F  1283               	bcf	3,5	;RP0=0, select bank0
  2478     0790  1303               	bcf	3,6	;RP1=0, select bank0
  2479     0791  0836               	movf	modbusWriteRegister@tx_buffer,w
  2480     0792  0084               	movwf	4
  2481     0793  082F               	movf	modbusWriteRegister@slave_address,w
  2482     0794  1383               	bcf	3,7	;select IRP bank0
  2483     0795  0080               	movwf	0
  2484     0796                     l1573:
  2485                           
  2486                           ;RS485_ModbusRTU_master.c: 142:     tx_buffer[1] = 0x06;
  2487     0796  0A36               	incf	modbusWriteRegister@tx_buffer,w
  2488     0797  0084               	movwf	4
  2489     0798  3006               	movlw	6
  2490     0799  0080               	movwf	0
  2491     079A                     l1575:
  2492                           
  2493                           ;RS485_ModbusRTU_master.c: 145:     tx_buffer[3] = register_ & 0xFF;
  2494     079A  0836               	movf	modbusWriteRegister@tx_buffer,w
  2495     079B  3E03               	addlw	3
  2496     079C  0084               	movwf	4
  2497     079D  0830               	movf	modbusWriteRegister@register_,w
  2498     079E  0080               	movwf	0
  2499     079F                     l1577:
  2500                           
  2501                           ;RS485_ModbusRTU_master.c: 146:     tx_buffer[2] = (register_ >> 8) & 0xFF;
  2502     079F  0836               	movf	modbusWriteRegister@tx_buffer,w
  2503     07A0  3E02               	addlw	2
  2504     07A1  0084               	movwf	4
  2505     07A2  0831               	movf	modbusWriteRegister@register_+1,w
  2506     07A3  0080               	movwf	0
  2507     07A4                     l1579:
  2508                           
  2509                           ;RS485_ModbusRTU_master.c: 149:     tx_buffer[5] = register_value & 0xFF;
  2510     07A4  0836               	movf	modbusWriteRegister@tx_buffer,w
  2511     07A5  3E05               	addlw	5
  2512     07A6  0084               	movwf	4
  2513     07A7  0832               	movf	modbusWriteRegister@register_value,w
  2514     07A8  0080               	movwf	0
  2515     07A9                     l1581:
  2516                           
  2517                           ;RS485_ModbusRTU_master.c: 150:     tx_buffer[4] = (register_value >> 8) & 0xFF;
  2518     07A9  0836               	movf	modbusWriteRegister@tx_buffer,w
  2519     07AA  3E04               	addlw	4
  2520     07AB  0084               	movwf	4
  2521     07AC  0833               	movf	modbusWriteRegister@register_value+1,w
  2522     07AD  0080               	movwf	0
  2523                           
  2524                           ;RS485_ModbusRTU_master.c: 153:     uint16_t checksum = crc16(tx_buffer, 6);
  2525     07AE  3006               	movlw	6
  2526     07AF  00A3               	movwf	crc16@length
  2527     07B0  3000               	movlw	0
  2528     07B1  00A4               	movwf	crc16@length+1
  2529     07B2  0836               	movf	modbusWriteRegister@tx_buffer,w
  2530     07B3  120A  118A  2082  120A  118A  	fcall	_crc16
  2531     07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2532     07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2533     07BA  0824               	movf	?_crc16+1,w
  2534     07BB  00B5               	movwf	modbusWriteRegister@checksum+1
  2535     07BC  0823               	movf	?_crc16,w
  2536     07BD  00B4               	movwf	modbusWriteRegister@checksum
  2537     07BE                     l1583:
  2538                           
  2539                           ;RS485_ModbusRTU_master.c: 154:     tx_buffer[6] = checksum & 0xFF;
  2540     07BE  0836               	movf	modbusWriteRegister@tx_buffer,w
  2541     07BF  3E06               	addlw	6
  2542     07C0  0084               	movwf	4
  2543     07C1  0834               	movf	modbusWriteRegister@checksum,w
  2544     07C2  1383               	bcf	3,7	;select IRP bank0
  2545     07C3  0080               	movwf	0
  2546     07C4                     l1585:
  2547                           
  2548                           ;RS485_ModbusRTU_master.c: 155:     tx_buffer[7] = (checksum >> 8) & 0xFF;
  2549     07C4  0836               	movf	modbusWriteRegister@tx_buffer,w
  2550     07C5  3E07               	addlw	7
  2551     07C6  0084               	movwf	4
  2552     07C7  0835               	movf	modbusWriteRegister@checksum+1,w
  2553     07C8  0080               	movwf	0
  2554     07C9                     l1587:
  2555                           
  2556                           ;RS485_ModbusRTU_master.c: 158:     RS485sendString((char *)tx_buffer);
  2557     07C9  0836               	movf	modbusWriteRegister@tx_buffer,w
  2558     07CA  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  2559     07CF                     l1589:
  2560                           
  2561                           ;RS485_ModbusRTU_master.c: 161:     master_rcv_buffer_len = 8;
  2562     07CF  3008               	movlw	8
  2563     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  2564     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  2565     07D2  00DE               	movwf	_master_rcv_buffer_len
  2566     07D3  3000               	movlw	0
  2567     07D4  00DF               	movwf	_master_rcv_buffer_len+1
  2568     07D5                     l1591:
  2569                           
  2570                           ;RS485_ModbusRTU_master.c: 162:     return 1;
  2571     07D5  3001               	movlw	1
  2572     07D6                     l223:
  2573     07D6  0008               	return
  2574     07D7                     __end_of_modbusWriteRegister:
  2575                           
  2576                           	psect	text4
  2577     052F                     __ptext4:	
  2578 ;; *************** function _modbusWriteCoils *****************
  2579 ;; Defined at:
  2580 ;;		line 166 in file "RS485_ModbusRTU_master.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  tx_buffer       1    wreg     PTR unsigned char 
  2583 ;;		 -> tx_buffer(25), 
  2584 ;;  len             2   13[BANK0 ] unsigned int 
  2585 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  2586 ;;  start_coil      2   16[BANK0 ] unsigned int 
  2587 ;;  coil_num        2   18[BANK0 ] unsigned int 
  2588 ;;  coil_state      1   20[BANK0 ] PTR unsigned char 
  2589 ;;		 -> coil_write_state(2), 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  tx_buffer       1   30[BANK0 ] PTR unsigned char 
  2592 ;;		 -> tx_buffer(25), 
  2593 ;;  checksum        2   27[BANK0 ] unsigned int 
  2594 ;;  i               1   29[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      unsigned char 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         0       8       0       0       0
  2605 ;;      Locals:         0       4       0       0       0
  2606 ;;      Temps:          0       6       0       0       0
  2607 ;;      Totals:         0      18       0       0       0
  2608 ;;Total ram usage:       18 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 8
  2611 ;; This function calls:
  2612 ;;		_RS485sendString
  2613 ;;		_clearBuffer
  2614 ;;		_crc16
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620     052F                     _modbusWriteCoils:	
  2621                           ;psect for function _modbusWriteCoils
  2622                           
  2623                           
  2624                           ;incstack = 0
  2625 ;; hardware stack exceeded
  2626                           ; Regs used in _modbusWriteCoils: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2627                           ;modbusWriteCoils@tx_buffer stored from wreg
  2628     052F  1283               	bcf	3,5	;RP0=0, select bank0
  2629     0530  1303               	bcf	3,6	;RP1=0, select bank0
  2630     0531  00BE               	movwf	modbusWriteCoils@tx_buffer
  2631     0532                     l1595:
  2632                           
  2633                           ;RS485_ModbusRTU_master.c: 166: uint8_t modbusWriteCoils(uint8_t *tx_buffer, uint16_t le
      +                          n, uint8_t slave_address, uint16_t start_coil, uint16_t coil_num, uint8_t *coil_state);R
      +                          S485_ModbusRTU_master.c: 167: {;RS485_ModbusRTU_master.c: 169:     clearBuffer(tx_buffer
      +                          , len);
  2634     0532  082E               	movf	modbusWriteCoils@len+1,w
  2635     0533  00A4               	movwf	clearBuffer@len+1
  2636     0534  082D               	movf	modbusWriteCoils@len,w
  2637     0535  00A3               	movwf	clearBuffer@len
  2638     0536  083E               	movf	modbusWriteCoils@tx_buffer,w
  2639     0537  120A  118A  20CC  120A  118A  	fcall	_clearBuffer
  2640     053C                     l1597:
  2641                           
  2642                           ;RS485_ModbusRTU_master.c: 172:     tx_buffer[0] = slave_address;
  2643     053C  1283               	bcf	3,5	;RP0=0, select bank0
  2644     053D  1303               	bcf	3,6	;RP1=0, select bank0
  2645     053E  083E               	movf	modbusWriteCoils@tx_buffer,w
  2646     053F  0084               	movwf	4
  2647     0540  082F               	movf	modbusWriteCoils@slave_address,w
  2648     0541  1383               	bcf	3,7	;select IRP bank0
  2649     0542  0080               	movwf	0
  2650     0543                     l1599:
  2651                           
  2652                           ;RS485_ModbusRTU_master.c: 175:     tx_buffer[1] = 0x0F;
  2653     0543  0A3E               	incf	modbusWriteCoils@tx_buffer,w
  2654     0544  0084               	movwf	4
  2655     0545  300F               	movlw	15
  2656     0546  0080               	movwf	0
  2657     0547                     l1601:
  2658                           
  2659                           ;RS485_ModbusRTU_master.c: 178:     tx_buffer[3] = start_coil & 0xFF;
  2660     0547  083E               	movf	modbusWriteCoils@tx_buffer,w
  2661     0548  3E03               	addlw	3
  2662     0549  0084               	movwf	4
  2663     054A  0830               	movf	modbusWriteCoils@start_coil,w
  2664     054B  0080               	movwf	0
  2665     054C                     l1603:
  2666                           
  2667                           ;RS485_ModbusRTU_master.c: 179:     tx_buffer[2] = (start_coil >> 8) & 0xFF;
  2668     054C  083E               	movf	modbusWriteCoils@tx_buffer,w
  2669     054D  3E02               	addlw	2
  2670     054E  0084               	movwf	4
  2671     054F  0831               	movf	modbusWriteCoils@start_coil+1,w
  2672     0550  0080               	movwf	0
  2673     0551                     l1605:
  2674                           
  2675                           ;RS485_ModbusRTU_master.c: 182:     tx_buffer[5] = coil_num & 0xFF;
  2676     0551  083E               	movf	modbusWriteCoils@tx_buffer,w
  2677     0552  3E05               	addlw	5
  2678     0553  0084               	movwf	4
  2679     0554  0832               	movf	modbusWriteCoils@coil_num,w
  2680     0555  0080               	movwf	0
  2681     0556                     l1607:
  2682                           
  2683                           ;RS485_ModbusRTU_master.c: 183:     tx_buffer[4] = (coil_num >> 8) & 0xFF;
  2684     0556  083E               	movf	modbusWriteCoils@tx_buffer,w
  2685     0557  3E04               	addlw	4
  2686     0558  0084               	movwf	4
  2687     0559  0833               	movf	modbusWriteCoils@coil_num+1,w
  2688     055A  0080               	movwf	0
  2689     055B                     l1609:
  2690                           
  2691                           ;RS485_ModbusRTU_master.c: 185:     uint8_t i;;RS485_ModbusRTU_master.c: 186:     for (i
      +                           = 0; i < (coil_num / 8) + 1; ++i)
  2692     055B  01BD               	clrf	modbusWriteCoils@i
  2693     055C  2D70               	goto	l1615
  2694     055D                     l1611:
  2695                           
  2696                           ;RS485_ModbusRTU_master.c: 187:         tx_buffer[i + 6] = coil_state[i];
  2697     055D  083D               	movf	modbusWriteCoils@i,w
  2698     055E  0734               	addwf	modbusWriteCoils@coil_state,w
  2699     055F  00B5               	movwf	??_modbusWriteCoils
  2700     0560  0835               	movf	??_modbusWriteCoils,w
  2701     0561  0084               	movwf	4
  2702     0562  0800               	movf	0,w
  2703     0563  00FF               	movwf	btemp+1
  2704     0564  083D               	movf	modbusWriteCoils@i,w
  2705     0565  073E               	addwf	modbusWriteCoils@tx_buffer,w
  2706     0566  00B6               	movwf	??_modbusWriteCoils+1
  2707     0567  0836               	movf	??_modbusWriteCoils+1,w
  2708     0568  3E06               	addlw	6
  2709     0569  0084               	movwf	4
  2710     056A  087F               	movf	btemp+1,w
  2711     056B  0080               	movwf	0
  2712     056C                     l1613:
  2713     056C  3001               	movlw	1
  2714     056D  00FF               	movwf	btemp+1
  2715     056E  087F               	movf	btemp+1,w
  2716     056F  07BD               	addwf	modbusWriteCoils@i,f
  2717     0570                     l1615:
  2718     0570  0833               	movf	modbusWriteCoils@coil_num+1,w
  2719     0571  00B6               	movwf	??_modbusWriteCoils+1
  2720     0572  0832               	movf	modbusWriteCoils@coil_num,w
  2721     0573  00B5               	movwf	??_modbusWriteCoils
  2722     0574  1003               	clrc
  2723     0575  0CB6               	rrf	??_modbusWriteCoils+1,f
  2724     0576  0CB5               	rrf	??_modbusWriteCoils,f
  2725     0577  1003               	clrc
  2726     0578  0CB6               	rrf	??_modbusWriteCoils+1,f
  2727     0579  0CB5               	rrf	??_modbusWriteCoils,f
  2728     057A  1003               	clrc
  2729     057B  0CB6               	rrf	??_modbusWriteCoils+1,f
  2730     057C  0CB5               	rrf	??_modbusWriteCoils,f
  2731     057D  0835               	movf	??_modbusWriteCoils,w
  2732     057E  3E01               	addlw	1
  2733     057F  00B7               	movwf	??_modbusWriteCoils+2
  2734     0580  0836               	movf	??_modbusWriteCoils+1,w
  2735     0581  1803               	skipnc
  2736     0582  3E01               	addlw	1
  2737     0583  3E00               	addlw	0
  2738     0584  00B8               	movwf	??_modbusWriteCoils+3
  2739     0585  083D               	movf	modbusWriteCoils@i,w
  2740     0586  00B9               	movwf	??_modbusWriteCoils+4
  2741     0587  01BA               	clrf	??_modbusWriteCoils+5
  2742     0588  0838               	movf	??_modbusWriteCoils+3,w
  2743     0589  023A               	subwf	??_modbusWriteCoils+5,w
  2744     058A  1D03               	skipz
  2745     058B  2D8E               	goto	u575
  2746     058C  0837               	movf	??_modbusWriteCoils+2,w
  2747     058D  0239               	subwf	??_modbusWriteCoils+4,w
  2748     058E                     u575:
  2749     058E  1C03               	skipc
  2750     058F  2D91               	goto	u571
  2751     0590  2D92               	goto	u570
  2752     0591                     u571:
  2753     0591  2D5D               	goto	l1611
  2754     0592                     u570:
  2755     0592                     l1617:
  2756                           
  2757                           ;RS485_ModbusRTU_master.c: 190:     uint16_t checksum = crc16(tx_buffer, i);
  2758     0592  083D               	movf	modbusWriteCoils@i,w
  2759     0593  00B5               	movwf	??_modbusWriteCoils
  2760     0594  01B6               	clrf	??_modbusWriteCoils+1
  2761     0595  0835               	movf	??_modbusWriteCoils,w
  2762     0596  00A3               	movwf	crc16@length
  2763     0597  0836               	movf	??_modbusWriteCoils+1,w
  2764     0598  00A4               	movwf	crc16@length+1
  2765     0599  083E               	movf	modbusWriteCoils@tx_buffer,w
  2766     059A  120A  118A  2082  120A  118A  	fcall	_crc16
  2767     059F  1283               	bcf	3,5	;RP0=0, select bank0
  2768     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2769     05A1  0824               	movf	?_crc16+1,w
  2770     05A2  00BC               	movwf	modbusWriteCoils@checksum+1
  2771     05A3  0823               	movf	?_crc16,w
  2772     05A4  00BB               	movwf	modbusWriteCoils@checksum
  2773     05A5                     l1619:
  2774                           
  2775                           ;RS485_ModbusRTU_master.c: 191:     tx_buffer[i++] = checksum & 0xFF;
  2776     05A5  083D               	movf	modbusWriteCoils@i,w
  2777     05A6  073E               	addwf	modbusWriteCoils@tx_buffer,w
  2778     05A7  00B5               	movwf	??_modbusWriteCoils
  2779     05A8  0835               	movf	??_modbusWriteCoils,w
  2780     05A9  0084               	movwf	4
  2781     05AA  083B               	movf	modbusWriteCoils@checksum,w
  2782     05AB  1383               	bcf	3,7	;select IRP bank0
  2783     05AC  0080               	movwf	0
  2784     05AD                     l1621:
  2785     05AD  3001               	movlw	1
  2786     05AE  00FF               	movwf	btemp+1
  2787     05AF  087F               	movf	btemp+1,w
  2788     05B0  07BD               	addwf	modbusWriteCoils@i,f
  2789     05B1                     l1623:
  2790                           
  2791                           ;RS485_ModbusRTU_master.c: 192:     tx_buffer[i] = (checksum >> 8) & 0xFF;
  2792     05B1  083D               	movf	modbusWriteCoils@i,w
  2793     05B2  073E               	addwf	modbusWriteCoils@tx_buffer,w
  2794     05B3  00B5               	movwf	??_modbusWriteCoils
  2795     05B4  0835               	movf	??_modbusWriteCoils,w
  2796     05B5  0084               	movwf	4
  2797     05B6  083C               	movf	modbusWriteCoils@checksum+1,w
  2798     05B7  0080               	movwf	0
  2799     05B8                     l1625:
  2800                           
  2801                           ;RS485_ModbusRTU_master.c: 195:     RS485sendString((char *)tx_buffer);
  2802     05B8  083E               	movf	modbusWriteCoils@tx_buffer,w
  2803     05B9  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  2804     05BE                     l1627:
  2805                           
  2806                           ;RS485_ModbusRTU_master.c: 198:     master_rcv_buffer_len = 8;
  2807     05BE  3008               	movlw	8
  2808     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2809     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2810     05C1  00DE               	movwf	_master_rcv_buffer_len
  2811     05C2  3000               	movlw	0
  2812     05C3  00DF               	movwf	_master_rcv_buffer_len+1
  2813     05C4                     l1629:
  2814                           
  2815                           ;RS485_ModbusRTU_master.c: 199:     return 1;
  2816     05C4  3001               	movlw	1
  2817     05C5                     l229:
  2818     05C5  0008               	return
  2819     05C6                     __end_of_modbusWriteCoils:
  2820                           
  2821                           	psect	text5
  2822     071C                     __ptext5:	
  2823 ;; *************** function _modbusWriteCoil *****************
  2824 ;; Defined at:
  2825 ;;		line 95 in file "RS485_ModbusRTU_master.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  tx_buffer       1    wreg     PTR unsigned char 
  2828 ;;		 -> tx_buffer(25), 
  2829 ;;  len             2   13[BANK0 ] unsigned int 
  2830 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  2831 ;;  coil            2   16[BANK0 ] unsigned int 
  2832 ;;  coil_state      1   18[BANK0 ] unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  tx_buffer       1   21[BANK0 ] PTR unsigned char 
  2835 ;;		 -> tx_buffer(25), 
  2836 ;;  checksum        2   19[BANK0 ] unsigned int 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      unsigned char 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       6       0       0       0
  2847 ;;      Locals:         0       3       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       9       0       0       0
  2850 ;;Total ram usage:        9 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 8
  2853 ;; This function calls:
  2854 ;;		_RS485sendString
  2855 ;;		_clearBuffer
  2856 ;;		_crc16
  2857 ;; This function is called by:
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862     071C                     _modbusWriteCoil:	
  2863                           ;psect for function _modbusWriteCoil
  2864                           
  2865                           
  2866                           ;incstack = 0
  2867 ;; hardware stack exceeded
  2868                           ; Regs used in _modbusWriteCoil: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2869                           ;modbusWriteCoil@tx_buffer stored from wreg
  2870     071C  1283               	bcf	3,5	;RP0=0, select bank0
  2871     071D  1303               	bcf	3,6	;RP1=0, select bank0
  2872     071E  00B5               	movwf	modbusWriteCoil@tx_buffer
  2873     071F                     l1531:
  2874                           
  2875                           ;RS485_ModbusRTU_master.c: 95: uint8_t modbusWriteCoil(uint8_t *tx_buffer, uint16_t len,
      +                           uint8_t slave_address, uint16_t coil, uint8_t coil_state);RS485_ModbusRTU_master.c: 96:
      +                           {;RS485_ModbusRTU_master.c: 98:     clearBuffer(tx_buffer, len);
  2876     071F  082E               	movf	modbusWriteCoil@len+1,w
  2877     0720  00A4               	movwf	clearBuffer@len+1
  2878     0721  082D               	movf	modbusWriteCoil@len,w
  2879     0722  00A3               	movwf	clearBuffer@len
  2880     0723  0835               	movf	modbusWriteCoil@tx_buffer,w
  2881     0724  120A  118A  20CC  120A  118A  	fcall	_clearBuffer
  2882     0729                     l1533:
  2883                           
  2884                           ;RS485_ModbusRTU_master.c: 101:     tx_buffer[0] = slave_address;
  2885     0729  1283               	bcf	3,5	;RP0=0, select bank0
  2886     072A  1303               	bcf	3,6	;RP1=0, select bank0
  2887     072B  0835               	movf	modbusWriteCoil@tx_buffer,w
  2888     072C  0084               	movwf	4
  2889     072D  082F               	movf	modbusWriteCoil@slave_address,w
  2890     072E  1383               	bcf	3,7	;select IRP bank0
  2891     072F  0080               	movwf	0
  2892     0730                     l1535:
  2893                           
  2894                           ;RS485_ModbusRTU_master.c: 104:     tx_buffer[1] = 0x05;
  2895     0730  0A35               	incf	modbusWriteCoil@tx_buffer,w
  2896     0731  0084               	movwf	4
  2897     0732  3005               	movlw	5
  2898     0733  0080               	movwf	0
  2899     0734                     l1537:
  2900                           
  2901                           ;RS485_ModbusRTU_master.c: 107:     tx_buffer[3] = coil & 0xFF;
  2902     0734  0835               	movf	modbusWriteCoil@tx_buffer,w
  2903     0735  3E03               	addlw	3
  2904     0736  0084               	movwf	4
  2905     0737  0830               	movf	modbusWriteCoil@coil,w
  2906     0738  0080               	movwf	0
  2907     0739                     l1539:
  2908                           
  2909                           ;RS485_ModbusRTU_master.c: 108:     tx_buffer[2] = (coil >> 8) & 0xFF;
  2910     0739  0835               	movf	modbusWriteCoil@tx_buffer,w
  2911     073A  3E02               	addlw	2
  2912     073B  0084               	movwf	4
  2913     073C  0831               	movf	modbusWriteCoil@coil+1,w
  2914     073D  0080               	movwf	0
  2915     073E                     l1541:
  2916                           
  2917                           ;RS485_ModbusRTU_master.c: 111:     tx_buffer[5] = 0x00;
  2918     073E  0835               	movf	modbusWriteCoil@tx_buffer,w
  2919     073F  3E05               	addlw	5
  2920     0740  0084               	movwf	4
  2921     0741  0180               	clrf	0
  2922     0742                     l1543:
  2923                           
  2924                           ;RS485_ModbusRTU_master.c: 112:     if (coil_state == COIL_ON)
  2925     0742  0832               	movf	modbusWriteCoil@coil_state,w
  2926     0743  1D03               	btfss	3,2
  2927     0744  2F46               	goto	u551
  2928     0745  2F47               	goto	u550
  2929     0746                     u551:
  2930     0746  2F4D               	goto	l1547
  2931     0747                     u550:
  2932     0747                     l1545:
  2933                           
  2934                           ;RS485_ModbusRTU_master.c: 113:         tx_buffer[4] = 0xFF;
  2935     0747  0835               	movf	modbusWriteCoil@tx_buffer,w
  2936     0748  3E04               	addlw	4
  2937     0749  0084               	movwf	4
  2938     074A  30FF               	movlw	255
  2939     074B  0080               	movwf	0
  2940     074C  2F59               	goto	l1555
  2941     074D                     l1547:
  2942     074D  0332               	decf	modbusWriteCoil@coil_state,w
  2943     074E  1D03               	btfss	3,2
  2944     074F  2F51               	goto	u561
  2945     0750  2F52               	goto	u560
  2946     0751                     u561:
  2947     0751  2F57               	goto	l1551
  2948     0752                     u560:
  2949     0752                     l1549:
  2950                           
  2951                           ;RS485_ModbusRTU_master.c: 115:         tx_buffer[4] = 0x00;
  2952     0752  0835               	movf	modbusWriteCoil@tx_buffer,w
  2953     0753  3E04               	addlw	4
  2954     0754  0084               	movwf	4
  2955     0755  0180               	clrf	0
  2956     0756  2F59               	goto	l1555
  2957     0757                     l1551:
  2958                           
  2959                           ;RS485_ModbusRTU_master.c: 117:         return 0;
  2960     0757  3000               	movlw	0
  2961     0758  2F81               	goto	l220
  2962     0759                     l1555:
  2963                           
  2964                           ;RS485_ModbusRTU_master.c: 120:     uint16_t checksum = crc16(tx_buffer, 6);
  2965     0759  3006               	movlw	6
  2966     075A  00A3               	movwf	crc16@length
  2967     075B  3000               	movlw	0
  2968     075C  00A4               	movwf	crc16@length+1
  2969     075D  0835               	movf	modbusWriteCoil@tx_buffer,w
  2970     075E  120A  118A  2082  120A  118A  	fcall	_crc16
  2971     0763  1283               	bcf	3,5	;RP0=0, select bank0
  2972     0764  1303               	bcf	3,6	;RP1=0, select bank0
  2973     0765  0824               	movf	?_crc16+1,w
  2974     0766  00B4               	movwf	modbusWriteCoil@checksum+1
  2975     0767  0823               	movf	?_crc16,w
  2976     0768  00B3               	movwf	modbusWriteCoil@checksum
  2977     0769                     l1557:
  2978                           
  2979                           ;RS485_ModbusRTU_master.c: 121:     tx_buffer[6] = checksum & 0xFF;
  2980     0769  0835               	movf	modbusWriteCoil@tx_buffer,w
  2981     076A  3E06               	addlw	6
  2982     076B  0084               	movwf	4
  2983     076C  0833               	movf	modbusWriteCoil@checksum,w
  2984     076D  1383               	bcf	3,7	;select IRP bank0
  2985     076E  0080               	movwf	0
  2986     076F                     l1559:
  2987                           
  2988                           ;RS485_ModbusRTU_master.c: 122:     tx_buffer[7] = (checksum >> 8) & 0xFF;
  2989     076F  0835               	movf	modbusWriteCoil@tx_buffer,w
  2990     0770  3E07               	addlw	7
  2991     0771  0084               	movwf	4
  2992     0772  0834               	movf	modbusWriteCoil@checksum+1,w
  2993     0773  0080               	movwf	0
  2994     0774                     l1561:
  2995                           
  2996                           ;RS485_ModbusRTU_master.c: 125:     RS485sendString((char *)tx_buffer);
  2997     0774  0835               	movf	modbusWriteCoil@tx_buffer,w
  2998     0775  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  2999     077A                     l1563:
  3000                           
  3001                           ;RS485_ModbusRTU_master.c: 128:     master_rcv_buffer_len = 8;
  3002     077A  3008               	movlw	8
  3003     077B  1283               	bcf	3,5	;RP0=0, select bank0
  3004     077C  1303               	bcf	3,6	;RP1=0, select bank0
  3005     077D  00DE               	movwf	_master_rcv_buffer_len
  3006     077E  3000               	movlw	0
  3007     077F  00DF               	movwf	_master_rcv_buffer_len+1
  3008     0780                     l1565:
  3009                           
  3010                           ;RS485_ModbusRTU_master.c: 129:     return 1;
  3011     0780  3001               	movlw	1
  3012     0781                     l220:
  3013     0781  0008               	return
  3014     0782                     __end_of_modbusWriteCoil:
  3015                           
  3016                           	psect	text6
  3017     063F                     __ptext6:	
  3018 ;; *************** function _modbusReadRegisters *****************
  3019 ;; Defined at:
  3020 ;;		line 57 in file "RS485_ModbusRTU_master.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  tx_buffer       1    wreg     PTR unsigned char 
  3023 ;;		 -> tx_buffer(25), 
  3024 ;;  len             2   13[BANK0 ] unsigned int 
  3025 ;;  mode            1   15[BANK0 ] unsigned char 
  3026 ;;  slave_addres    1   16[BANK0 ] unsigned char 
  3027 ;;  start_regist    2   17[BANK0 ] unsigned int 
  3028 ;;  register_num    2   19[BANK0 ] unsigned int 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  tx_buffer       1   25[BANK0 ] PTR unsigned char 
  3031 ;;		 -> tx_buffer(25), 
  3032 ;;  checksum        2   23[BANK0 ] unsigned int 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      unsigned char 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3042 ;;      Params:         0       8       0       0       0
  3043 ;;      Locals:         0       3       0       0       0
  3044 ;;      Temps:          0       2       0       0       0
  3045 ;;      Totals:         0      13       0       0       0
  3046 ;;Total ram usage:       13 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 8
  3049 ;; This function calls:
  3050 ;;		_RS485sendString
  3051 ;;		_clearBuffer
  3052 ;;		_crc16
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058     063F                     _modbusReadRegisters:	
  3059                           ;psect for function _modbusReadRegisters
  3060                           
  3061                           
  3062                           ;incstack = 0
  3063 ;; hardware stack exceeded
  3064                           ; Regs used in _modbusReadRegisters: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3065                           ;modbusReadRegisters@tx_buffer stored from wreg
  3066     063F  1283               	bcf	3,5	;RP0=0, select bank0
  3067     0640  1303               	bcf	3,6	;RP1=0, select bank0
  3068     0641  00B9               	movwf	modbusReadRegisters@tx_buffer
  3069     0642                     l1499:
  3070                           
  3071                           ;RS485_ModbusRTU_master.c: 57: uint8_t modbusReadRegisters(uint8_t *tx_buffer, uint16_t 
      +                          len, uint8_t mode, uint8_t slave_address, uint16_t start_register, uint16_t register_num
      +                          );RS485_ModbusRTU_master.c: 58: {;RS485_ModbusRTU_master.c: 60:     clearBuffer(tx_buffe
      +                          r, len);
  3072     0642  082E               	movf	modbusReadRegisters@len+1,w
  3073     0643  00A4               	movwf	clearBuffer@len+1
  3074     0644  082D               	movf	modbusReadRegisters@len,w
  3075     0645  00A3               	movwf	clearBuffer@len
  3076     0646  0839               	movf	modbusReadRegisters@tx_buffer,w
  3077     0647  120A  118A  20CC  120A  118A  	fcall	_clearBuffer
  3078     064C                     l1501:
  3079                           
  3080                           ;RS485_ModbusRTU_master.c: 63:     tx_buffer[0] = slave_address;
  3081     064C  1283               	bcf	3,5	;RP0=0, select bank0
  3082     064D  1303               	bcf	3,6	;RP1=0, select bank0
  3083     064E  0839               	movf	modbusReadRegisters@tx_buffer,w
  3084     064F  0084               	movwf	4
  3085     0650  0830               	movf	modbusReadRegisters@slave_address,w
  3086     0651  1383               	bcf	3,7	;select IRP bank0
  3087     0652  0080               	movwf	0
  3088     0653                     l1503:
  3089                           
  3090                           ;RS485_ModbusRTU_master.c: 66:     if (mode == READ_HOLDING_REGISTERS)
  3091     0653  3003               	movlw	3
  3092     0654  062F               	xorwf	modbusReadRegisters@mode,w
  3093     0655  1D03               	btfss	3,2
  3094     0656  2E58               	goto	u531
  3095     0657  2E59               	goto	u530
  3096     0658                     u531:
  3097     0658  2E5E               	goto	l1507
  3098     0659                     u530:
  3099     0659                     l1505:
  3100                           
  3101                           ;RS485_ModbusRTU_master.c: 67:         tx_buffer[1] = READ_HOLDING_REGISTERS;
  3102     0659  0A39               	incf	modbusReadRegisters@tx_buffer,w
  3103     065A  0084               	movwf	4
  3104     065B  3003               	movlw	3
  3105     065C  0080               	movwf	0
  3106     065D  2E6B               	goto	l1515
  3107     065E                     l1507:
  3108     065E  3004               	movlw	4
  3109     065F  062F               	xorwf	modbusReadRegisters@mode,w
  3110     0660  1D03               	btfss	3,2
  3111     0661  2E63               	goto	u541
  3112     0662  2E64               	goto	u540
  3113     0663                     u541:
  3114     0663  2E69               	goto	l1511
  3115     0664                     u540:
  3116     0664                     l1509:
  3117                           
  3118                           ;RS485_ModbusRTU_master.c: 69:         tx_buffer[1] = READ_INPUT_REGISTERS;
  3119     0664  0A39               	incf	modbusReadRegisters@tx_buffer,w
  3120     0665  0084               	movwf	4
  3121     0666  3004               	movlw	4
  3122     0667  0080               	movwf	0
  3123     0668  2E6B               	goto	l1515
  3124     0669                     l1511:
  3125                           
  3126                           ;RS485_ModbusRTU_master.c: 71:         return 0;
  3127     0669  3000               	movlw	0
  3128     066A  2EB2               	goto	l213
  3129     066B                     l1515:
  3130                           
  3131                           ;RS485_ModbusRTU_master.c: 74:     tx_buffer[3] = start_register & 0xFF;
  3132     066B  0839               	movf	modbusReadRegisters@tx_buffer,w
  3133     066C  3E03               	addlw	3
  3134     066D  0084               	movwf	4
  3135     066E  0831               	movf	modbusReadRegisters@start_register,w
  3136     066F  0080               	movwf	0
  3137                           
  3138                           ;RS485_ModbusRTU_master.c: 75:     tx_buffer[2] = (start_register >> 8) & 0xFF;
  3139     0670  0839               	movf	modbusReadRegisters@tx_buffer,w
  3140     0671  3E02               	addlw	2
  3141     0672  0084               	movwf	4
  3142     0673  0832               	movf	modbusReadRegisters@start_register+1,w
  3143     0674  0080               	movwf	0
  3144                           
  3145                           ;RS485_ModbusRTU_master.c: 78:     tx_buffer[5] = register_num & 0xFF;
  3146     0675  0839               	movf	modbusReadRegisters@tx_buffer,w
  3147     0676  3E05               	addlw	5
  3148     0677  0084               	movwf	4
  3149     0678  0833               	movf	modbusReadRegisters@register_num,w
  3150     0679  0080               	movwf	0
  3151                           
  3152                           ;RS485_ModbusRTU_master.c: 79:     tx_buffer[4] = (register_num >> 8) & 0xFF;
  3153     067A  0839               	movf	modbusReadRegisters@tx_buffer,w
  3154     067B  3E04               	addlw	4
  3155     067C  0084               	movwf	4
  3156     067D  0834               	movf	modbusReadRegisters@register_num+1,w
  3157     067E  0080               	movwf	0
  3158     067F                     l1517:
  3159                           
  3160                           ;RS485_ModbusRTU_master.c: 82:     uint16_t checksum = crc16(tx_buffer, 6);
  3161     067F  3006               	movlw	6
  3162     0680  00A3               	movwf	crc16@length
  3163     0681  3000               	movlw	0
  3164     0682  00A4               	movwf	crc16@length+1
  3165     0683  0839               	movf	modbusReadRegisters@tx_buffer,w
  3166     0684  120A  118A  2082  120A  118A  	fcall	_crc16
  3167     0689  1283               	bcf	3,5	;RP0=0, select bank0
  3168     068A  1303               	bcf	3,6	;RP1=0, select bank0
  3169     068B  0824               	movf	?_crc16+1,w
  3170     068C  00B8               	movwf	modbusReadRegisters@checksum+1
  3171     068D  0823               	movf	?_crc16,w
  3172     068E  00B7               	movwf	modbusReadRegisters@checksum
  3173     068F                     l1519:
  3174                           
  3175                           ;RS485_ModbusRTU_master.c: 83:     tx_buffer[6] = checksum & 0xFF;
  3176     068F  0839               	movf	modbusReadRegisters@tx_buffer,w
  3177     0690  3E06               	addlw	6
  3178     0691  0084               	movwf	4
  3179     0692  0837               	movf	modbusReadRegisters@checksum,w
  3180     0693  1383               	bcf	3,7	;select IRP bank0
  3181     0694  0080               	movwf	0
  3182     0695                     l1521:
  3183                           
  3184                           ;RS485_ModbusRTU_master.c: 84:     tx_buffer[7] = (checksum >> 8) & 0xFF;
  3185     0695  0839               	movf	modbusReadRegisters@tx_buffer,w
  3186     0696  3E07               	addlw	7
  3187     0697  0084               	movwf	4
  3188     0698  0838               	movf	modbusReadRegisters@checksum+1,w
  3189     0699  0080               	movwf	0
  3190     069A                     l1523:
  3191                           
  3192                           ;RS485_ModbusRTU_master.c: 87:     RS485sendString((char *)tx_buffer);
  3193     069A  0839               	movf	modbusReadRegisters@tx_buffer,w
  3194     069B  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  3195     06A0                     l1525:
  3196                           
  3197                           ;RS485_ModbusRTU_master.c: 90:     master_rcv_buffer_len = 5 + (register_num * 2);
  3198     06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3199     06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3200     06A2  0834               	movf	modbusReadRegisters@register_num+1,w
  3201     06A3  00B6               	movwf	??_modbusReadRegisters+1
  3202     06A4  0833               	movf	modbusReadRegisters@register_num,w
  3203     06A5  00B5               	movwf	??_modbusReadRegisters
  3204     06A6  1003               	clrc
  3205     06A7  0DB5               	rlf	??_modbusReadRegisters,f
  3206     06A8  0DB6               	rlf	??_modbusReadRegisters+1,f
  3207     06A9  0835               	movf	??_modbusReadRegisters,w
  3208     06AA  3E05               	addlw	5
  3209     06AB  00DE               	movwf	_master_rcv_buffer_len
  3210     06AC  0836               	movf	??_modbusReadRegisters+1,w
  3211     06AD  1803               	skipnc
  3212     06AE  3E01               	addlw	1
  3213     06AF  3E00               	addlw	0
  3214     06B0  00DF               	movwf	_master_rcv_buffer_len+1
  3215     06B1                     l1527:
  3216                           
  3217                           ;RS485_ModbusRTU_master.c: 91:     return 1;
  3218     06B1  3001               	movlw	1
  3219     06B2                     l213:
  3220     06B2  0008               	return
  3221     06B3                     __end_of_modbusReadRegisters:
  3222                           
  3223                           	psect	text7
  3224     05C6                     __ptext7:	
  3225 ;; *************** function _modbusReadCoils *****************
  3226 ;; Defined at:
  3227 ;;		line 19 in file "RS485_ModbusRTU_master.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  tx_buffer       1    wreg     PTR unsigned char 
  3230 ;;		 -> tx_buffer(25), 
  3231 ;;  len             2   13[BANK0 ] unsigned int 
  3232 ;;  mode            1   15[BANK0 ] unsigned char 
  3233 ;;  slave_addres    1   16[BANK0 ] unsigned char 
  3234 ;;  start_coil      2   17[BANK0 ] unsigned int 
  3235 ;;  coil_num        2   19[BANK0 ] unsigned int 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  tx_buffer       1   25[BANK0 ] PTR unsigned char 
  3238 ;;		 -> tx_buffer(25), 
  3239 ;;  checksum        2   23[BANK0 ] unsigned int 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      unsigned char 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         0       8       0       0       0
  3250 ;;      Locals:         0       3       0       0       0
  3251 ;;      Temps:          0       2       0       0       0
  3252 ;;      Totals:         0      13       0       0       0
  3253 ;;Total ram usage:       13 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 8
  3256 ;; This function calls:
  3257 ;;		_RS485sendString
  3258 ;;		_clearBuffer
  3259 ;;		_crc16
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265     05C6                     _modbusReadCoils:	
  3266                           ;psect for function _modbusReadCoils
  3267                           
  3268                           
  3269                           ;incstack = 0
  3270 ;; hardware stack exceeded
  3271                           ; Regs used in _modbusReadCoils: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3272                           ;modbusReadCoils@tx_buffer stored from wreg
  3273     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3274     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  3275     05C8  00B9               	movwf	modbusReadCoils@tx_buffer
  3276     05C9                     l1467:
  3277                           
  3278                           ;RS485_ModbusRTU_master.c: 19: uint8_t modbusReadCoils(uint8_t *tx_buffer, uint16_t len,
      +                           uint8_t mode, uint8_t slave_address, uint16_t start_coil, uint16_t coil_num);RS485_Modb
      +                          usRTU_master.c: 20: {;RS485_ModbusRTU_master.c: 22:     clearBuffer(tx_buffer, len);
  3279     05C9  082E               	movf	modbusReadCoils@len+1,w
  3280     05CA  00A4               	movwf	clearBuffer@len+1
  3281     05CB  082D               	movf	modbusReadCoils@len,w
  3282     05CC  00A3               	movwf	clearBuffer@len
  3283     05CD  0839               	movf	modbusReadCoils@tx_buffer,w
  3284     05CE  120A  118A  20CC  120A  118A  	fcall	_clearBuffer
  3285     05D3                     l1469:
  3286                           
  3287                           ;RS485_ModbusRTU_master.c: 25:     tx_buffer[0] = slave_address;
  3288     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3289     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3290     05D5  0839               	movf	modbusReadCoils@tx_buffer,w
  3291     05D6  0084               	movwf	4
  3292     05D7  0830               	movf	modbusReadCoils@slave_address,w
  3293     05D8  1383               	bcf	3,7	;select IRP bank0
  3294     05D9  0080               	movwf	0
  3295     05DA                     l1471:
  3296                           
  3297                           ;RS485_ModbusRTU_master.c: 28:     if (mode == READ_COILS)
  3298     05DA  032F               	decf	modbusReadCoils@mode,w
  3299     05DB  1D03               	btfss	3,2
  3300     05DC  2DDE               	goto	u511
  3301     05DD  2DDF               	goto	u510
  3302     05DE                     u511:
  3303     05DE  2DE4               	goto	l1475
  3304     05DF                     u510:
  3305     05DF                     l1473:
  3306                           
  3307                           ;RS485_ModbusRTU_master.c: 29:         tx_buffer[1] = READ_COILS;
  3308     05DF  0A39               	incf	modbusReadCoils@tx_buffer,w
  3309     05E0  0084               	movwf	4
  3310     05E1  0180               	clrf	0
  3311     05E2  0A80               	incf	0,f
  3312     05E3  2DF1               	goto	l1483
  3313     05E4                     l1475:
  3314     05E4  3002               	movlw	2
  3315     05E5  062F               	xorwf	modbusReadCoils@mode,w
  3316     05E6  1D03               	btfss	3,2
  3317     05E7  2DE9               	goto	u521
  3318     05E8  2DEA               	goto	u520
  3319     05E9                     u521:
  3320     05E9  2DEF               	goto	l1479
  3321     05EA                     u520:
  3322     05EA                     l1477:
  3323                           
  3324                           ;RS485_ModbusRTU_master.c: 31:         tx_buffer[1] = READ_DISCRETE_INPUTS;
  3325     05EA  0A39               	incf	modbusReadCoils@tx_buffer,w
  3326     05EB  0084               	movwf	4
  3327     05EC  3002               	movlw	2
  3328     05ED  0080               	movwf	0
  3329     05EE  2DF1               	goto	l1483
  3330     05EF                     l1479:
  3331                           
  3332                           ;RS485_ModbusRTU_master.c: 33:         return 0;
  3333     05EF  3000               	movlw	0
  3334     05F0  2E3E               	goto	l206
  3335     05F1                     l1483:
  3336                           
  3337                           ;RS485_ModbusRTU_master.c: 36:     tx_buffer[3] = start_coil & 0xFF;
  3338     05F1  0839               	movf	modbusReadCoils@tx_buffer,w
  3339     05F2  3E03               	addlw	3
  3340     05F3  0084               	movwf	4
  3341     05F4  0831               	movf	modbusReadCoils@start_coil,w
  3342     05F5  0080               	movwf	0
  3343                           
  3344                           ;RS485_ModbusRTU_master.c: 37:     tx_buffer[2] = (start_coil >> 8) & 0xFF;
  3345     05F6  0839               	movf	modbusReadCoils@tx_buffer,w
  3346     05F7  3E02               	addlw	2
  3347     05F8  0084               	movwf	4
  3348     05F9  0832               	movf	modbusReadCoils@start_coil+1,w
  3349     05FA  0080               	movwf	0
  3350                           
  3351                           ;RS485_ModbusRTU_master.c: 40:     tx_buffer[5] = coil_num & 0xFF;
  3352     05FB  0839               	movf	modbusReadCoils@tx_buffer,w
  3353     05FC  3E05               	addlw	5
  3354     05FD  0084               	movwf	4
  3355     05FE  0833               	movf	modbusReadCoils@coil_num,w
  3356     05FF  0080               	movwf	0
  3357                           
  3358                           ;RS485_ModbusRTU_master.c: 41:     tx_buffer[4] = (coil_num >> 8) & 0xFF;
  3359     0600  0839               	movf	modbusReadCoils@tx_buffer,w
  3360     0601  3E04               	addlw	4
  3361     0602  0084               	movwf	4
  3362     0603  0834               	movf	modbusReadCoils@coil_num+1,w
  3363     0604  0080               	movwf	0
  3364     0605                     l1485:
  3365                           
  3366                           ;RS485_ModbusRTU_master.c: 44:     uint16_t checksum = crc16(tx_buffer, 6);
  3367     0605  3006               	movlw	6
  3368     0606  00A3               	movwf	crc16@length
  3369     0607  3000               	movlw	0
  3370     0608  00A4               	movwf	crc16@length+1
  3371     0609  0839               	movf	modbusReadCoils@tx_buffer,w
  3372     060A  120A  118A  2082  120A  118A  	fcall	_crc16
  3373     060F  1283               	bcf	3,5	;RP0=0, select bank0
  3374     0610  1303               	bcf	3,6	;RP1=0, select bank0
  3375     0611  0824               	movf	?_crc16+1,w
  3376     0612  00B8               	movwf	modbusReadCoils@checksum+1
  3377     0613  0823               	movf	?_crc16,w
  3378     0614  00B7               	movwf	modbusReadCoils@checksum
  3379     0615                     l1487:
  3380                           
  3381                           ;RS485_ModbusRTU_master.c: 45:     tx_buffer[6] = checksum & 0xFF;
  3382     0615  0839               	movf	modbusReadCoils@tx_buffer,w
  3383     0616  3E06               	addlw	6
  3384     0617  0084               	movwf	4
  3385     0618  0837               	movf	modbusReadCoils@checksum,w
  3386     0619  1383               	bcf	3,7	;select IRP bank0
  3387     061A  0080               	movwf	0
  3388     061B                     l1489:
  3389                           
  3390                           ;RS485_ModbusRTU_master.c: 46:     tx_buffer[7] = (checksum >> 8) & 0xFF;
  3391     061B  0839               	movf	modbusReadCoils@tx_buffer,w
  3392     061C  3E07               	addlw	7
  3393     061D  0084               	movwf	4
  3394     061E  0838               	movf	modbusReadCoils@checksum+1,w
  3395     061F  0080               	movwf	0
  3396     0620                     l1491:
  3397                           
  3398                           ;RS485_ModbusRTU_master.c: 49:     RS485sendString((char *)tx_buffer);
  3399     0620  0839               	movf	modbusReadCoils@tx_buffer,w
  3400     0621  120A  158A  27B2  120A  118A  	fcall	_RS485sendString
  3401     0626                     l1493:
  3402                           
  3403                           ;RS485_ModbusRTU_master.c: 52:     master_rcv_buffer_len = 6 + (coil_num / 8);
  3404     0626  1283               	bcf	3,5	;RP0=0, select bank0
  3405     0627  1303               	bcf	3,6	;RP1=0, select bank0
  3406     0628  0834               	movf	modbusReadCoils@coil_num+1,w
  3407     0629  00B6               	movwf	??_modbusReadCoils+1
  3408     062A  0833               	movf	modbusReadCoils@coil_num,w
  3409     062B  00B5               	movwf	??_modbusReadCoils
  3410     062C  1003               	clrc
  3411     062D  0CB6               	rrf	??_modbusReadCoils+1,f
  3412     062E  0CB5               	rrf	??_modbusReadCoils,f
  3413     062F  1003               	clrc
  3414     0630  0CB6               	rrf	??_modbusReadCoils+1,f
  3415     0631  0CB5               	rrf	??_modbusReadCoils,f
  3416     0632  1003               	clrc
  3417     0633  0CB6               	rrf	??_modbusReadCoils+1,f
  3418     0634  0CB5               	rrf	??_modbusReadCoils,f
  3419     0635  0835               	movf	??_modbusReadCoils,w
  3420     0636  3E06               	addlw	6
  3421     0637  00DE               	movwf	_master_rcv_buffer_len
  3422     0638  0836               	movf	??_modbusReadCoils+1,w
  3423     0639  1803               	skipnc
  3424     063A  3E01               	addlw	1
  3425     063B  3E00               	addlw	0
  3426     063C  00DF               	movwf	_master_rcv_buffer_len+1
  3427     063D                     l1495:
  3428                           
  3429                           ;RS485_ModbusRTU_master.c: 53:     return 1;
  3430     063D  3001               	movlw	1
  3431     063E                     l206:
  3432     063E  0008               	return
  3433     063F                     __end_of_modbusReadCoils:
  3434                           
  3435                           	psect	text8
  3436     0082                     __ptext8:	
  3437 ;; *************** function _crc16 *****************
  3438 ;; Defined at:
  3439 ;;		line 40 in file "CRC.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  buffer          1    wreg     PTR unsigned char 
  3442 ;;		 -> tx_buffer(25), 
  3443 ;;  length          2    3[BANK0 ] unsigned int 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  buffer          1   12[BANK0 ] PTR unsigned char 
  3446 ;;		 -> tx_buffer(25), 
  3447 ;;  crcWord         2   10[BANK0 ] unsigned int 
  3448 ;;  temp            1    9[BANK0 ] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  2    3[BANK0 ] unsigned int 
  3451 ;; Registers used:
  3452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3458 ;;      Params:         0       2       0       0       0
  3459 ;;      Locals:         0       4       0       0       0
  3460 ;;      Temps:          0       4       0       0       0
  3461 ;;      Totals:         0      10       0       0       0
  3462 ;;Total ram usage:       10 bytes
  3463 ;; Hardware stack levels used: 1
  3464 ;; Hardware stack levels required when called: 5
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_modbusReadCoils
  3469 ;;		_modbusReadRegisters
  3470 ;;		_modbusWriteCoil
  3471 ;;		_modbusWriteRegister
  3472 ;;		_modbusWriteCoils
  3473 ;;		_modbusWriteRegisters
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477     0082                     _crc16:	
  3478                           ;psect for function _crc16
  3479                           
  3480                           
  3481                           ;incstack = 0
  3482                           ; Regs used in _crc16: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3483                           ;crc16@buffer stored from wreg
  3484     0082  1283               	bcf	3,5	;RP0=0, select bank0
  3485     0083  1303               	bcf	3,6	;RP1=0, select bank0
  3486     0084  00AC               	movwf	crc16@buffer
  3487     0085                     l1393:
  3488                           
  3489                           ;CRC.c: 40: uint16_t crc16(uint8_t *buffer, uint16_t length);CRC.c: 41: {;CRC.c: 42:    
      +                           uint8_t temp;;CRC.c: 43:     uint16_t crcWord = 0xFFFF;
  3490     0085  30FF               	movlw	255
  3491     0086  00AA               	movwf	crc16@crcWord
  3492     0087  30FF               	movlw	255
  3493     0088  00AB               	movwf	crc16@crcWord+1
  3494                           
  3495                           ;CRC.c: 45:     while (length--)
  3496     0089  28B9               	goto	l1403
  3497     008A                     l1395:
  3498                           
  3499                           ;CRC.c: 46:     {;CRC.c: 47:         temp = *buffer++ ^ crcWord;
  3500     008A  082C               	movf	crc16@buffer,w
  3501     008B  0084               	movwf	4
  3502     008C  1383               	bcf	3,7	;select IRP bank0
  3503     008D  0800               	movf	0,w
  3504     008E  062A               	xorwf	crc16@crcWord,w
  3505     008F  00A9               	movwf	crc16@temp
  3506     0090                     l1397:
  3507     0090  3001               	movlw	1
  3508     0091  00FF               	movwf	btemp+1
  3509     0092  087F               	movf	btemp+1,w
  3510     0093  07AC               	addwf	crc16@buffer,f
  3511     0094                     l1399:
  3512                           
  3513                           ;CRC.c: 48:         crcWord >>= 8;
  3514     0094  3008               	movlw	8
  3515     0095                     u385:
  3516     0095  1003               	clrc
  3517     0096  0CAB               	rrf	crc16@crcWord+1,f
  3518     0097  0CAA               	rrf	crc16@crcWord,f
  3519     0098  3EFF               	addlw	-1
  3520     0099  1D03               	skipz
  3521     009A  2895               	goto	u385
  3522     009B                     l1401:
  3523                           
  3524                           ;CRC.c: 49:         crcWord ^= wCRCTable[temp];
  3525     009B  0829               	movf	crc16@temp,w
  3526     009C  00A5               	movwf	??_crc16
  3527     009D  01A6               	clrf	??_crc16+1
  3528     009E  1003               	clrc
  3529     009F  0DA5               	rlf	??_crc16,f
  3530     00A0  0DA6               	rlf	??_crc16+1,f
  3531     00A1  3081               	movlw	high (_wCRCTable| (0+32768))
  3532     00A2  0726               	addwf	??_crc16+1,w
  3533     00A3  00FF               	movwf	btemp+1
  3534     00A4  3012               	movlw	low (_wCRCTable| (0+32768))
  3535     00A5  0725               	addwf	??_crc16,w
  3536     00A6  0084               	movwf	4
  3537     00A7  1803               	skipnc
  3538     00A8  0AFF               	incf	btemp+1,f
  3539     00A9  120A  118A  2100  120A  118A  	fcall	stringtab
  3540     00AE  00A7               	movwf	??_crc16+2
  3541     00AF  120A  118A  2100  120A  118A  	fcall	stringtab
  3542     00B4  00A8               	movwf	??_crc16+3
  3543     00B5  0827               	movf	??_crc16+2,w
  3544     00B6  06AA               	xorwf	crc16@crcWord,f
  3545     00B7  0828               	movf	??_crc16+3,w
  3546     00B8  06AB               	xorwf	crc16@crcWord+1,f
  3547     00B9                     l1403:
  3548                           
  3549                           ;CRC.c: 45:     while (length--)
  3550     00B9  3001               	movlw	1
  3551     00BA  02A3               	subwf	crc16@length,f
  3552     00BB  3000               	movlw	0
  3553     00BC  1C03               	skipc
  3554     00BD  03A4               	decf	crc16@length+1,f
  3555     00BE  02A4               	subwf	crc16@length+1,f
  3556     00BF  0A23               	incf	crc16@length,w
  3557     00C0  1D03               	skipz
  3558     00C1  28C6               	goto	u391
  3559     00C2  0A24               	incf	crc16@length+1,w
  3560     00C3  1D03               	btfss	3,2
  3561     00C4  28C6               	goto	u391
  3562     00C5  28C7               	goto	u390
  3563     00C6                     u391:
  3564     00C6  288A               	goto	l1395
  3565     00C7                     u390:
  3566     00C7                     l1405:
  3567                           
  3568                           ;CRC.c: 51:     return crcWord;
  3569     00C7  082B               	movf	crc16@crcWord+1,w
  3570     00C8  00A4               	movwf	?_crc16+1
  3571     00C9  082A               	movf	crc16@crcWord,w
  3572     00CA  00A3               	movwf	?_crc16
  3573     00CB                     l178:
  3574     00CB  0008               	return
  3575     00CC                     __end_of_crc16:
  3576                           
  3577                           	psect	text9
  3578     00CC                     __ptext9:	
  3579 ;; *************** function _clearBuffer *****************
  3580 ;; Defined at:
  3581 ;;		line 4 in file "RS485_ModbusRTU_master.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  buffer          1    wreg     PTR unsigned char 
  3584 ;;		 -> tx_buffer(25), 
  3585 ;;  len             2    3[BANK0 ] unsigned int 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  buffer          1    8[BANK0 ] PTR unsigned char 
  3588 ;;		 -> tx_buffer(25), 
  3589 ;;  i               1    7[BANK0 ] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       2       0       0       0
  3600 ;;      Locals:         0       2       0       0       0
  3601 ;;      Temps:          0       2       0       0       0
  3602 ;;      Totals:         0       6       0       0       0
  3603 ;;Total ram usage:        6 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 5
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_modbusReadCoils
  3610 ;;		_modbusReadRegisters
  3611 ;;		_modbusWriteCoil
  3612 ;;		_modbusWriteRegister
  3613 ;;		_modbusWriteCoils
  3614 ;;		_modbusWriteRegisters
  3615 ;;		_modbusTest
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619     00CC                     _clearBuffer:	
  3620                           ;psect for function _clearBuffer
  3621                           
  3622                           
  3623                           ;incstack = 0
  3624                           ; Regs used in _clearBuffer: [wreg-fsr0h+status,2+status,0+btemp+1]
  3625                           ;clearBuffer@buffer stored from wreg
  3626     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  3627     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  3628     00CE  00A8               	movwf	clearBuffer@buffer
  3629     00CF                     l1409:
  3630                           
  3631                           ;RS485_ModbusRTU_master.c: 4: static void clearBuffer(uint8_t *buffer, uint16_t len);RS4
      +                          85_ModbusRTU_master.c: 5: {;RS485_ModbusRTU_master.c: 6:     for (uint8_t i = 0; i < len
      +                          ; ++i)
  3632     00CF  01A7               	clrf	clearBuffer@i
  3633     00D0  28DC               	goto	l1415
  3634     00D1                     l1411:
  3635                           
  3636                           ;RS485_ModbusRTU_master.c: 7:         buffer[i] = 0;
  3637     00D1  0827               	movf	clearBuffer@i,w
  3638     00D2  0728               	addwf	clearBuffer@buffer,w
  3639     00D3  00A5               	movwf	??_clearBuffer
  3640     00D4  0825               	movf	??_clearBuffer,w
  3641     00D5  0084               	movwf	4
  3642     00D6  1383               	bcf	3,7	;select IRP bank0
  3643     00D7  0180               	clrf	0
  3644     00D8                     l1413:
  3645     00D8  3001               	movlw	1
  3646     00D9  00FF               	movwf	btemp+1
  3647     00DA  087F               	movf	btemp+1,w
  3648     00DB  07A7               	addwf	clearBuffer@i,f
  3649     00DC                     l1415:
  3650     00DC  0827               	movf	clearBuffer@i,w
  3651     00DD  00A5               	movwf	??_clearBuffer
  3652     00DE  01A6               	clrf	??_clearBuffer+1
  3653     00DF  0824               	movf	clearBuffer@len+1,w
  3654     00E0  0226               	subwf	??_clearBuffer+1,w
  3655     00E1  1D03               	skipz
  3656     00E2  28E5               	goto	u405
  3657     00E3  0823               	movf	clearBuffer@len,w
  3658     00E4  0225               	subwf	??_clearBuffer,w
  3659     00E5                     u405:
  3660     00E5  1C03               	skipc
  3661     00E6  28E8               	goto	u401
  3662     00E7  28E9               	goto	u400
  3663     00E8                     u401:
  3664     00E8  28D1               	goto	l1411
  3665     00E9                     u400:
  3666     00E9                     l196:
  3667     00E9  0008               	return
  3668     00EA                     __end_of_clearBuffer:
  3669                           
  3670                           	psect	text10
  3671     0FB2                     __ptext10:	
  3672 ;; *************** function _RS485sendString *****************
  3673 ;; Defined at:
  3674 ;;		line 41 in file "PIC16F877A_RS485.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  str             1    wreg     PTR unsigned char 
  3677 ;;		 -> error_msg(19), tx_buffer(25), 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  str             1   10[BANK0 ] PTR unsigned char 
  3680 ;;		 -> error_msg(19), tx_buffer(25), 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3690 ;;      Params:         0       0       0       0       0
  3691 ;;      Locals:         0       1       0       0       0
  3692 ;;      Temps:          0       2       0       0       0
  3693 ;;      Totals:         0       3       0       0       0
  3694 ;;Total ram usage:        3 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 7
  3697 ;; This function calls:
  3698 ;;		_UARTsendString
  3699 ;; This function is called by:
  3700 ;;		_main
  3701 ;;		_modbusReadCoils
  3702 ;;		_modbusReadRegisters
  3703 ;;		_modbusWriteCoil
  3704 ;;		_modbusWriteRegister
  3705 ;;		_modbusWriteCoils
  3706 ;;		_modbusWriteRegisters
  3707 ;;		_modbusTest
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711     0FB2                     _RS485sendString:	
  3712                           ;psect for function _RS485sendString
  3713                           
  3714                           
  3715                           ;incstack = 0
  3716 ;; hardware stack exceeded
  3717                           ; Regs used in _RS485sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3718                           ;RS485sendString@str stored from wreg
  3719     0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  3720     0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  3721     0FB4  00AA               	movwf	RS485sendString@str
  3722     0FB5                     l1377:
  3723                           
  3724                           ;PIC16F877A_RS485.c: 41: void RS485sendString(char* str);PIC16F877A_RS485.c: 42: {;PIC16
      +                          F877A_RS485.c: 44:     RD0 = 1;
  3725     0FB5  1408               	bsf	8,0	;volatile
  3726     0FB6                     l1379:
  3727                           
  3728                           ;PIC16F877A_RS485.c: 46:     UARTsendString(str);
  3729     0FB6  082A               	movf	RS485sendString@str,w
  3730     0FB7  120A  118A  27D7  120A  158A  	fcall	_UARTsendString
  3731     0FBC                     l1381:
  3732                           
  3733                           ;PIC16F877A_RS485.c: 48:     _delay((unsigned long)((500)*(16000000/4000000.0)));
  3734     0FBC  3003               	movlw	3
  3735     0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  3736     0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  3737     0FBF  00A9               	movwf	??_RS485sendString+1
  3738     0FC0  3097               	movlw	151
  3739     0FC1  00A8               	movwf	??_RS485sendString
  3740     0FC2                     u707:
  3741     0FC2  0BA8               	decfsz	??_RS485sendString,f
  3742     0FC3  2FC2               	goto	u707
  3743     0FC4  0BA9               	decfsz	??_RS485sendString+1,f
  3744     0FC5  2FC2               	goto	u707
  3745     0FC6                     l1383:
  3746                           
  3747                           ;PIC16F877A_RS485.c: 50:     RD0 = 0;
  3748     0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3749     0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  3750     0FC8  1008               	bcf	8,0	;volatile
  3751     0FC9                     l93:
  3752     0FC9  0008               	return
  3753     0FCA                     __end_of_RS485sendString:
  3754                           
  3755                           	psect	text11
  3756     07D7                     __ptext11:	
  3757 ;; *************** function _UARTsendString *****************
  3758 ;; Defined at:
  3759 ;;		line 82 in file "PIC16F877A_UART.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  str             1    wreg     PTR unsigned char 
  3762 ;;		 -> error_msg(19), tx_buffer(25), 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  str             1    7[BANK0 ] PTR unsigned char 
  3765 ;;		 -> error_msg(19), tx_buffer(25), 
  3766 ;;  i               2    5[BANK0 ] int 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3776 ;;      Params:         0       0       0       0       0
  3777 ;;      Locals:         0       3       0       0       0
  3778 ;;      Temps:          0       1       0       0       0
  3779 ;;      Totals:         0       4       0       0       0
  3780 ;;Total ram usage:        4 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; Hardware stack levels required when called: 6
  3783 ;; This function calls:
  3784 ;;		_UARTsendChar
  3785 ;; This function is called by:
  3786 ;;		_RS485sendString
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790     07D7                     _UARTsendString:	
  3791                           ;psect for function _UARTsendString
  3792                           
  3793                           
  3794                           ;incstack = 0
  3795 ;; hardware stack exceeded
  3796                           ; Regs used in _UARTsendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3797                           ;UARTsendString@str stored from wreg
  3798     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  3799     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  3800     07D9  00A7               	movwf	UARTsendString@str
  3801     07DA                     l1339:
  3802                           
  3803                           ;PIC16F877A_UART.c: 82: void UARTsendString(char *str);PIC16F877A_UART.c: 83: {;PIC16F87
      +                          7A_UART.c: 84:     for (int i = 0; str[i] != '\0'; ++i)
  3804     07DA  01A5               	clrf	UARTsendString@i
  3805     07DB  01A6               	clrf	UARTsendString@i+1
  3806     07DC  2FF0               	goto	l1345
  3807     07DD                     l1341:
  3808                           
  3809                           ;PIC16F877A_UART.c: 85:         UARTsendChar(str[i]);
  3810     07DD  0825               	movf	UARTsendString@i,w
  3811     07DE  0727               	addwf	UARTsendString@str,w
  3812     07DF  00A4               	movwf	??_UARTsendString
  3813     07E0  0824               	movf	??_UARTsendString,w
  3814     07E1  0084               	movwf	4
  3815     07E2  0800               	movf	0,w
  3816     07E3  120A  158A  2768  120A  118A  	fcall	_UARTsendChar
  3817     07E8                     l1343:
  3818     07E8  3001               	movlw	1
  3819     07E9  1283               	bcf	3,5	;RP0=0, select bank0
  3820     07EA  1303               	bcf	3,6	;RP1=0, select bank0
  3821     07EB  07A5               	addwf	UARTsendString@i,f
  3822     07EC  1803               	skipnc
  3823     07ED  0AA6               	incf	UARTsendString@i+1,f
  3824     07EE  3000               	movlw	0
  3825     07EF  07A6               	addwf	UARTsendString@i+1,f
  3826     07F0                     l1345:
  3827     07F0  0825               	movf	UARTsendString@i,w
  3828     07F1  0727               	addwf	UARTsendString@str,w
  3829     07F2  00A4               	movwf	??_UARTsendString
  3830     07F3  0824               	movf	??_UARTsendString,w
  3831     07F4  0084               	movwf	4
  3832     07F5  1383               	bcf	3,7	;select IRP bank0
  3833     07F6  0800               	movf	0,w
  3834     07F7  1D03               	btfss	3,2
  3835     07F8  2FFA               	goto	u361
  3836     07F9  2FFB               	goto	u360
  3837     07FA                     u361:
  3838     07FA  2FDD               	goto	l1341
  3839     07FB                     u360:
  3840     07FB                     l55:
  3841     07FB  0008               	return
  3842     07FC                     __end_of_UARTsendString:
  3843                           
  3844                           	psect	text12
  3845     0F68                     __ptext12:	
  3846 ;; *************** function _UARTsendChar *****************
  3847 ;; Defined at:
  3848 ;;		line 73 in file "PIC16F877A_UART.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  c               1    wreg     unsigned char 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  c               1    3[BANK0 ] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3862 ;;      Params:         0       0       0       0       0
  3863 ;;      Locals:         0       1       0       0       0
  3864 ;;      Temps:          0       0       0       0       0
  3865 ;;      Totals:         0       1       0       0       0
  3866 ;;Total ram usage:        1 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 5
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_UARTsendString
  3873 ;;		_RS485sendChar
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877     0F68                     _UARTsendChar:	
  3878                           ;psect for function _UARTsendChar
  3879                           
  3880                           
  3881                           ;incstack = 0
  3882 ;; hardware stack exceeded
  3883                           ; Regs used in _UARTsendChar: [wreg]
  3884                           ;UARTsendChar@c stored from wreg
  3885     0F68  1283               	bcf	3,5	;RP0=0, select bank0
  3886     0F69  1303               	bcf	3,6	;RP1=0, select bank0
  3887     0F6A  00A3               	movwf	UARTsendChar@c
  3888     0F6B                     l1321:
  3889     0F6B                     l46:	
  3890                           ;PIC16F877A_UART.c: 77:         ;
  3891                           
  3892                           
  3893                           ;PIC16F877A_UART.c: 76:     while (!TRMT)
  3894     0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  3895     0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  3896     0F6D  1C98               	btfss	24,1	;volatile
  3897     0F6E  2F70               	goto	u351
  3898     0F6F  2F71               	goto	u350
  3899     0F70                     u351:
  3900     0F70  2F6B               	goto	l46
  3901     0F71                     u350:
  3902     0F71                     l1323:
  3903                           
  3904                           ;PIC16F877A_UART.c: 78:     TXREG = c;
  3905     0F71  1283               	bcf	3,5	;RP0=0, select bank0
  3906     0F72  1303               	bcf	3,6	;RP1=0, select bank0
  3907     0F73  0823               	movf	UARTsendChar@c,w
  3908     0F74  0099               	movwf	25	;volatile
  3909     0F75                     l49:
  3910     0F75  0008               	return
  3911     0F76                     __end_of_UARTsendChar:
  3912                           
  3913                           	psect	text13
  3914     0F48                     __ptext13:	
  3915 ;; *************** function _modbusRTUInit *****************
  3916 ;; Defined at:
  3917 ;;		line 13 in file "RS485_ModbusRTU_master.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; Hardware stack levels required when called: 7
  3938 ;; This function calls:
  3939 ;;		_RS485Init
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945     0F48                     _modbusRTUInit:	
  3946                           ;psect for function _modbusRTUInit
  3947                           
  3948     0F48                     l1465:	
  3949                           ;incstack = 0
  3950                           ; Regs used in _modbusRTUInit: [wreg+status,2+status,0+pclath+cstack]
  3951                           
  3952                           
  3953                           ;RS485_ModbusRTU_master.c: 15:     RS485Init();
  3954     0F48  120A  158A  275D  120A  158A  	fcall	_RS485Init
  3955     0F4D                     l199:
  3956     0F4D  0008               	return
  3957     0F4E                     __end_of_modbusRTUInit:
  3958                           
  3959                           	psect	text14
  3960     0F5D                     __ptext14:	
  3961 ;; *************** function _RS485Init *****************
  3962 ;; Defined at:
  3963 ;;		line 19 in file "PIC16F877A_RS485.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0, pclath, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3977 ;;      Params:         0       0       0       0       0
  3978 ;;      Locals:         0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0
  3980 ;;      Totals:         0       0       0       0       0
  3981 ;;Total ram usage:        0 bytes
  3982 ;; Hardware stack levels used: 1
  3983 ;; Hardware stack levels required when called: 6
  3984 ;; This function calls:
  3985 ;;		_RS485TxConfig
  3986 ;;		_UARTTransRcvInit
  3987 ;; This function is called by:
  3988 ;;		_modbusRTUInit
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992     0F5D                     _RS485Init:	
  3993                           ;psect for function _RS485Init
  3994                           
  3995     0F5D                     l1373:	
  3996                           ;incstack = 0
  3997                           ; Regs used in _RS485Init: [wreg+status,2+status,0+pclath+cstack]
  3998                           
  3999                           
  4000                           ;PIC16F877A_RS485.c: 22:     RS485TxConfig();
  4001     0F5D  120A  158A  274E  120A  158A  	fcall	_RS485TxConfig
  4002     0F62                     l1375:
  4003                           
  4004                           ;PIC16F877A_RS485.c: 24:     UARTTransRcvInit();
  4005     0F62  120A  158A  27E3  120A  158A  	fcall	_UARTTransRcvInit
  4006     0F67                     l87:
  4007     0F67  0008               	return
  4008     0F68                     __end_of_RS485Init:
  4009                           
  4010                           	psect	text15
  4011     0FE3                     __ptext15:	
  4012 ;; *************** function _UARTTransRcvInit *****************
  4013 ;; Defined at:
  4014 ;;		line 48 in file "PIC16F877A_UART.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		wreg
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0
  4031 ;;      Totals:         0       0       0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used: 1
  4034 ;; Hardware stack levels required when called: 5
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_RS485Init
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042     0FE3                     _UARTTransRcvInit:	
  4043                           ;psect for function _UARTTransRcvInit
  4044                           
  4045     0FE3                     l1329:	
  4046                           ;incstack = 0
  4047                           ; Regs used in _UARTTransRcvInit: [wreg]
  4048                           
  4049                           
  4050                           ;PIC16F877A_UART.c: 51:     TRISC6 = 1;
  4051     0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  4052     0FE4  1303               	bcf	3,6	;RP1=0, select bank1
  4053     0FE5  1707               	bsf	7,6	;volatile
  4054                           
  4055                           ;PIC16F877A_UART.c: 52:     TRISC7 = 1;
  4056     0FE6  1787               	bsf	7,7	;volatile
  4057                           
  4058                           ;PIC16F877A_UART.c: 54:     SPEN = 1;
  4059     0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  4060     0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  4061     0FE9  1798               	bsf	24,7	;volatile
  4062                           
  4063                           ;PIC16F877A_UART.c: 56:     SYNC = 0;
  4064     0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  4065     0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  4066     0FEC  1218               	bcf	24,4	;volatile
  4067                           
  4068                           ;PIC16F877A_UART.c: 58:     TX9 = 0;
  4069     0FED  1318               	bcf	24,6	;volatile
  4070                           
  4071                           ;PIC16F877A_UART.c: 59:     RX9 = 0;
  4072     0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  4073     0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  4074     0FF0  1318               	bcf	24,6	;volatile
  4075                           
  4076                           ;PIC16F877A_UART.c: 61:     TXEN = 1;
  4077     0FF1  1683               	bsf	3,5	;RP0=1, select bank1
  4078     0FF2  1303               	bcf	3,6	;RP1=0, select bank1
  4079     0FF3  1698               	bsf	24,5	;volatile
  4080                           
  4081                           ;PIC16F877A_UART.c: 62:     CREN = 1;
  4082     0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  4083     0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  4084     0FF6  1618               	bsf	24,4	;volatile
  4085                           
  4086                           ;PIC16F877A_UART.c: 64:     BRGH = 1;
  4087     0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  4088     0FF8  1303               	bcf	3,6	;RP1=0, select bank1
  4089     0FF9  1518               	bsf	24,2	;volatile
  4090     0FFA                     l1331:
  4091                           
  4092                           ;PIC16F877A_UART.c: 65:     SPBRG = ((16000000) / 57600) / 16 - 1;
  4093     0FFA  3010               	movlw	16
  4094     0FFB  0099               	movwf	25	;volatile
  4095     0FFC                     l1333:
  4096                           
  4097                           ;PIC16F877A_UART.c: 67:     RCIE = 1;
  4098     0FFC  168C               	bsf	12,5	;volatile
  4099     0FFD                     l1335:
  4100                           
  4101                           ;PIC16F877A_UART.c: 68:     PEIE = 1;
  4102     0FFD  170B               	bsf	11,6	;volatile
  4103     0FFE                     l1337:
  4104                           
  4105                           ;PIC16F877A_UART.c: 69:     GIE = 1;
  4106     0FFE  178B               	bsf	11,7	;volatile
  4107     0FFF                     l43:
  4108     0FFF  0008               	return
  4109     1000                     __end_of_UARTTransRcvInit:
  4110                           
  4111                           	psect	text16
  4112     0F4E                     __ptext16:	
  4113 ;; *************** function _RS485TxConfig *****************
  4114 ;; Defined at:
  4115 ;;		line 8 in file "PIC16F877A_RS485.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		None
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4129 ;;      Params:         0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0
  4132 ;;      Totals:         0       0       0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 5
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_RS485Init
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143     0F4E                     _RS485TxConfig:	
  4144                           ;psect for function _RS485TxConfig
  4145                           
  4146     0F4E                     l1371:	
  4147                           ;incstack = 0
  4148                           ; Regs used in _RS485TxConfig: []
  4149                           
  4150                           
  4151                           ;PIC16F877A_RS485.c: 11:     TRISD0 = 0;
  4152     0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  4153     0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  4154     0F50  1008               	bcf	8,0	;volatile
  4155                           
  4156                           ;PIC16F877A_RS485.c: 13:     RD0 = 0;
  4157     0F51  1283               	bcf	3,5	;RP0=0, select bank0
  4158     0F52  1303               	bcf	3,6	;RP1=0, select bank0
  4159     0F53  1008               	bcf	8,0	;volatile
  4160     0F54                     l84:
  4161     0F54  0008               	return
  4162     0F55                     __end_of_RS485TxConfig:
  4163                           
  4164                           	psect	text17
  4165     00EA                     __ptext17:	
  4166 ;; *************** function _ISR *****************
  4167 ;; Defined at:
  4168 ;;		line 19 in file "PIC16F877A_RS485_ModbusRTU_master.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0
  4184 ;;      Temps:          0       3       0       0       0
  4185 ;;      Totals:         0       3       0       0       0
  4186 ;;Total ram usage:        3 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 4
  4189 ;; This function calls:
  4190 ;;		_modbusRcvResponse
  4191 ;; This function is called by:
  4192 ;;		Interrupt level 1
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196     00EA                     _ISR:	
  4197                           ;psect for function _ISR
  4198                           
  4199     00EA                     i1l1689:
  4200                           
  4201                           ;PIC16F877A_RS485_ModbusRTU_master.c: 22:     if(RCIF)
  4202     00EA  1E8C               	btfss	12,5	;volatile
  4203     00EB  28ED               	goto	u60_21
  4204     00EC  28EE               	goto	u60_20
  4205     00ED                     u60_21:
  4206     00ED  28F4               	goto	i1l144
  4207     00EE                     u60_20:
  4208     00EE                     i1l1691:
  4209                           
  4210                           ;PIC16F877A_RS485_ModbusRTU_master.c: 23:     {;PIC16F877A_RS485_ModbusRTU_master.c: 24:
      +                                   if(modbusRcvResponse(rcv_buffer))
  4211     00EE  30A0               	movlw	(low (_rcv_buffer| 0))& (0+255)
  4212     00EF  120A  158A  2776  120A  118A  	fcall	_modbusRcvResponse
  4213     00F4                     i1l144:
  4214     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  4215     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  4216     00F6  0822               	movf	??_ISR+2,w
  4217     00F7  008A               	movwf	10
  4218     00F8  0821               	movf	??_ISR+1,w
  4219     00F9  0084               	movwf	4
  4220     00FA  0E20               	swapf	??_ISR,w
  4221     00FB  0083               	movwf	3
  4222     00FC  0EFE               	swapf	btemp,f
  4223     00FD  0E7E               	swapf	btemp,w
  4224     00FE  0009               	retfie
  4225     00FF                     __end_of_ISR:
  4226                           
  4227                           	psect	intentry
  4228     0004                     __pintentry:	
  4229                           ;incstack = 0
  4230 ;; hardware stack exceeded
  4231                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4232                           
  4233     0004                     interrupt_function:
  4234     007E                     saved_w	set	btemp
  4235     0004  00FE               	movwf	btemp
  4236     0005  0E03               	swapf	3,w
  4237     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4238     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4239     0008  00A0               	movwf	??_ISR
  4240     0009  0804               	movf	4,w
  4241     000A  00A1               	movwf	??_ISR+1
  4242     000B  080A               	movf	10,w
  4243     000C  00A2               	movwf	??_ISR+2
  4244     000D  120A  118A  28EA   	ljmp	_ISR
  4245                           
  4246                           	psect	text18
  4247     0F76                     __ptext18:	
  4248 ;; *************** function _modbusRcvResponse *****************
  4249 ;; Defined at:
  4250 ;;		line 248 in file "RS485_ModbusRTU_master.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  rcv_buffer      1    wreg     PTR unsigned char 
  4253 ;;		 -> rcv_buffer(25), 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  rcv_buffer      1   13[COMMON] PTR unsigned char 
  4256 ;;		 -> rcv_buffer(25), 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  2   11[COMMON] int 
  4259 ;; Registers used:
  4260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         2       0       0       0       0
  4267 ;;      Locals:         1       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0
  4269 ;;      Totals:         3       0       0       0       0
  4270 ;;Total ram usage:        3 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; Hardware stack levels required when called: 3
  4273 ;; This function calls:
  4274 ;;		_RS485rcvString
  4275 ;; This function is called by:
  4276 ;;		_ISR
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280     0F76                     _modbusRcvResponse:	
  4281                           ;psect for function _modbusRcvResponse
  4282                           
  4283                           
  4284                           ;incstack = 0
  4285 ;; hardware stack exceeded
  4286                           ; Regs used in _modbusRcvResponse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4287                           ;modbusRcvResponse@rcv_buffer stored from wreg
  4288     0F76  00FD               	movwf	modbusRcvResponse@rcv_buffer
  4289     0F77                     i1l1461:
  4290                           
  4291                           ;RS485_ModbusRTU_master.c: 248: int modbusRcvResponse(uint8_t *rcv_buffer);RS485_ModbusR
      +                          TU_master.c: 249: {;RS485_ModbusRTU_master.c: 250:     return RS485rcvString((char *)rcv
      +                          _buffer, master_rcv_buffer_len);
  4292     0F77  1283               	bcf	3,5	;RP0=0, select bank0
  4293     0F78  1303               	bcf	3,6	;RP1=0, select bank0
  4294     0F79  085F               	movf	_master_rcv_buffer_len+1,w
  4295     0F7A  00F7               	movwf	RS485rcvString@length+1
  4296     0F7B  085E               	movf	_master_rcv_buffer_len,w
  4297     0F7C  00F6               	movwf	RS485rcvString@length
  4298     0F7D  087D               	movf	modbusRcvResponse@rcv_buffer,w
  4299     0F7E  120A  158A  279B  120A  158A  	fcall	_RS485rcvString
  4300     0F83  0877               	movf	?_RS485rcvString+1,w
  4301     0F84  00FC               	movwf	?_modbusRcvResponse+1
  4302     0F85  0876               	movf	?_RS485rcvString,w
  4303     0F86  00FB               	movwf	?_modbusRcvResponse
  4304     0F87                     i1l240:
  4305     0F87  0008               	return
  4306     0F88                     __end_of_modbusRcvResponse:
  4307                           
  4308                           	psect	text19
  4309     0F9B                     __ptext19:	
  4310 ;; *************** function _RS485rcvString *****************
  4311 ;; Defined at:
  4312 ;;		line 63 in file "PIC16F877A_RS485.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  rcv_buffer      1    wreg     PTR unsigned char 
  4315 ;;		 -> rcv_buffer(25), 
  4316 ;;  length          2    6[COMMON] unsigned int 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  rcv_buffer      1   10[COMMON] PTR unsigned char 
  4319 ;;		 -> rcv_buffer(25), 
  4320 ;;  done            2    8[COMMON] int 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  2    6[COMMON] int 
  4323 ;; Registers used:
  4324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4330 ;;      Params:         2       0       0       0       0
  4331 ;;      Locals:         3       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0
  4333 ;;      Totals:         5       0       0       0       0
  4334 ;;Total ram usage:        5 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 2
  4337 ;; This function calls:
  4338 ;;		_UARTrcvString
  4339 ;; This function is called by:
  4340 ;;		_modbusRcvResponse
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344     0F9B                     _RS485rcvString:	
  4345                           ;psect for function _RS485rcvString
  4346                           
  4347                           
  4348                           ;incstack = 0
  4349 ;; hardware stack exceeded
  4350                           ; Regs used in _RS485rcvString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4351                           ;RS485rcvString@rcv_buffer stored from wreg
  4352     0F9B  00FA               	movwf	RS485rcvString@rcv_buffer
  4353     0F9C                     i1l1385:
  4354                           
  4355                           ;PIC16F877A_RS485.c: 63: int RS485rcvString(char* rcv_buffer, uint16_t length);PIC16F877
      +                          A_RS485.c: 64: {;PIC16F877A_RS485.c: 66:     RD0 = 0;
  4356     0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  4357     0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  4358     0F9E  1008               	bcf	8,0	;volatile
  4359     0F9F                     i1l1387:
  4360                           
  4361                           ;PIC16F877A_RS485.c: 68:     int done = UARTrcvString(rcv_buffer, length);
  4362     0F9F  0877               	movf	RS485rcvString@length+1,w
  4363     0FA0  00F2               	movwf	UARTrcvString@length+1
  4364     0FA1  0876               	movf	RS485rcvString@length,w
  4365     0FA2  00F1               	movwf	UARTrcvString@length
  4366     0FA3  087A               	movf	RS485rcvString@rcv_buffer,w
  4367     0FA4  120A  118A  2035  120A  158A  	fcall	_UARTrcvString
  4368     0FA9  0872               	movf	?_UARTrcvString+1,w
  4369     0FAA  00F9               	movwf	RS485rcvString@done+1
  4370     0FAB  0871               	movf	?_UARTrcvString,w
  4371     0FAC  00F8               	movwf	RS485rcvString@done
  4372     0FAD                     i1l1389:
  4373                           
  4374                           ;PIC16F877A_RS485.c: 69:     return done;
  4375     0FAD  0879               	movf	RS485rcvString@done+1,w
  4376     0FAE  00F7               	movwf	?_RS485rcvString+1
  4377     0FAF  0878               	movf	RS485rcvString@done,w
  4378     0FB0  00F6               	movwf	?_RS485rcvString
  4379     0FB1                     i1l99:
  4380     0FB1  0008               	return
  4381     0FB2                     __end_of_RS485rcvString:
  4382                           
  4383                           	psect	text20
  4384     0035                     __ptext20:	
  4385 ;; *************** function _UARTrcvString *****************
  4386 ;; Defined at:
  4387 ;;		line 97 in file "PIC16F877A_UART.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  rcv_buffer      1    wreg     PTR unsigned char 
  4390 ;;		 -> rcv_buffer(25), 
  4391 ;;  length          2    1[COMMON] unsigned int 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  rcv_buffer      1    5[COMMON] PTR unsigned char 
  4394 ;;		 -> rcv_buffer(25), 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  2    1[COMMON] int 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4404 ;;      Params:         2       0       0       0       0
  4405 ;;      Locals:         1       0       0       0       0
  4406 ;;      Temps:          2       0       0       0       0
  4407 ;;      Totals:         5       0       0       0       0
  4408 ;;Total ram usage:        5 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 1
  4411 ;; This function calls:
  4412 ;;		_UARTrcvChar
  4413 ;; This function is called by:
  4414 ;;		_RS485rcvString
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418     0035                     _UARTrcvString:	
  4419                           ;psect for function _UARTrcvString
  4420                           
  4421                           
  4422                           ;incstack = 0
  4423 ;; hardware stack exceeded
  4424                           ; Regs used in _UARTrcvString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4425                           ;UARTrcvString@rcv_buffer stored from wreg
  4426     0035  00F5               	movwf	UARTrcvString@rcv_buffer
  4427     0036                     i1l1347:
  4428                           
  4429                           ;PIC16F877A_UART.c: 97: int UARTrcvString(char *rcv_buffer, uint16_t length);PIC16F877A_
      +                          UART.c: 98: {;PIC16F877A_UART.c: 99:     if (uart_str_idx == length - 1)
  4430     0036  0871               	movf	UARTrcvString@length,w
  4431     0037  3EFF               	addlw	255
  4432     0038  00F3               	movwf	??_UARTrcvString
  4433     0039  0872               	movf	UARTrcvString@length+1,w
  4434     003A  1803               	skipnc
  4435     003B  3E01               	addlw	1
  4436     003C  3EFF               	addlw	255
  4437     003D  00F4               	movwf	??_UARTrcvString+1
  4438     003E  1283               	bcf	3,5	;RP0=0, select bank0
  4439     003F  1303               	bcf	3,6	;RP1=0, select bank0
  4440     0040  0865               	movf	_uart_str_idx+1,w
  4441     0041  0674               	xorwf	??_UARTrcvString+1,w
  4442     0042  1D03               	skipz
  4443     0043  2846               	goto	u37_25
  4444     0044  0864               	movf	_uart_str_idx,w
  4445     0045  0673               	xorwf	??_UARTrcvString,w
  4446     0046                     u37_25:
  4447     0046  1D03               	skipz
  4448     0047  2849               	goto	u37_21
  4449     0048  284A               	goto	u37_20
  4450     0049                     u37_21:
  4451     0049  286B               	goto	i1l1363
  4452     004A                     u37_20:
  4453     004A                     i1l1349:
  4454                           
  4455                           ;PIC16F877A_UART.c: 100:     {;PIC16F877A_UART.c: 101:         rcv_buffer[uart_str_idx] 
      +                          = UARTrcvChar();
  4456     004A  0864               	movf	_uart_str_idx,w
  4457     004B  0775               	addwf	UARTrcvString@rcv_buffer,w
  4458     004C  00F3               	movwf	??_UARTrcvString
  4459     004D  0873               	movf	??_UARTrcvString,w
  4460     004E  0084               	movwf	4
  4461     004F  120A  158A  2742  120A  118A  	fcall	_UARTrcvChar
  4462     0054  1383               	bcf	3,7	;select IRP bank0
  4463     0055  0080               	movwf	0
  4464     0056                     i1l1351:
  4465                           
  4466                           ;PIC16F877A_UART.c: 102:         uart_str_idx++;
  4467     0056  3001               	movlw	1
  4468     0057  1283               	bcf	3,5	;RP0=0, select bank0
  4469     0058  1303               	bcf	3,6	;RP1=0, select bank0
  4470     0059  07E4               	addwf	_uart_str_idx,f
  4471     005A  1803               	skipnc
  4472     005B  0AE5               	incf	_uart_str_idx+1,f
  4473     005C  3000               	movlw	0
  4474     005D  07E5               	addwf	_uart_str_idx+1,f
  4475     005E                     i1l1353:
  4476                           
  4477                           ;PIC16F877A_UART.c: 103:         rcv_buffer[uart_str_idx] = '\0';
  4478     005E  0864               	movf	_uart_str_idx,w
  4479     005F  0775               	addwf	UARTrcvString@rcv_buffer,w
  4480     0060  00F3               	movwf	??_UARTrcvString
  4481     0061  0873               	movf	??_UARTrcvString,w
  4482     0062  0084               	movwf	4
  4483     0063  0180               	clrf	0
  4484     0064                     i1l1355:
  4485                           
  4486                           ;PIC16F877A_UART.c: 104:         uart_str_idx = 0;
  4487     0064  01E4               	clrf	_uart_str_idx
  4488     0065  01E5               	clrf	_uart_str_idx+1
  4489     0066                     i1l1357:
  4490                           
  4491                           ;PIC16F877A_UART.c: 105:         return 1;
  4492     0066  3001               	movlw	1
  4493     0067  00F1               	movwf	?_UARTrcvString
  4494     0068  3000               	movlw	0
  4495     0069  00F2               	movwf	?_UARTrcvString+1
  4496     006A  2881               	goto	i1l62
  4497     006B                     i1l1363:
  4498                           
  4499                           ;PIC16F877A_UART.c: 108:     {;PIC16F877A_UART.c: 109:         rcv_buffer[uart_str_idx] 
      +                          = UARTrcvChar();
  4500     006B  0864               	movf	_uart_str_idx,w
  4501     006C  0775               	addwf	UARTrcvString@rcv_buffer,w
  4502     006D  00F3               	movwf	??_UARTrcvString
  4503     006E  0873               	movf	??_UARTrcvString,w
  4504     006F  0084               	movwf	4
  4505     0070  120A  158A  2742  120A  118A  	fcall	_UARTrcvChar
  4506     0075  1383               	bcf	3,7	;select IRP bank0
  4507     0076  0080               	movwf	0
  4508     0077                     i1l1365:
  4509                           
  4510                           ;PIC16F877A_UART.c: 110:         uart_str_idx++;
  4511     0077  3001               	movlw	1
  4512     0078  1283               	bcf	3,5	;RP0=0, select bank0
  4513     0079  1303               	bcf	3,6	;RP1=0, select bank0
  4514     007A  07E4               	addwf	_uart_str_idx,f
  4515     007B  1803               	skipnc
  4516     007C  0AE5               	incf	_uart_str_idx+1,f
  4517     007D  3000               	movlw	0
  4518     007E  07E5               	addwf	_uart_str_idx+1,f
  4519     007F                     i1l1367:
  4520                           
  4521                           ;PIC16F877A_UART.c: 111:         return 0;
  4522     007F  01F1               	clrf	?_UARTrcvString
  4523     0080  01F2               	clrf	?_UARTrcvString+1
  4524     0081                     i1l62:
  4525     0081  0008               	return
  4526     0082                     __end_of_UARTrcvString:
  4527                           
  4528                           	psect	text21
  4529     0F42                     __ptext21:	
  4530 ;; *************** function _UARTrcvChar *****************
  4531 ;; Defined at:
  4532 ;;		line 89 in file "PIC16F877A_UART.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  c               1    0[COMMON] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      unsigned char 
  4539 ;; Registers used:
  4540 ;;		wreg
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4546 ;;      Params:         0       0       0       0       0
  4547 ;;      Locals:         1       0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0
  4549 ;;      Totals:         1       0       0       0       0
  4550 ;;Total ram usage:        1 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_UARTrcvString
  4556 ;;		_RS485rcvChar
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560     0F42                     _UARTrcvChar:	
  4561                           ;psect for function _UARTrcvChar
  4562                           
  4563     0F42                     i1l1325:	
  4564                           ;incstack = 0
  4565 ;; hardware stack exceeded
  4566                           ; Regs used in _UARTrcvChar: [wreg]
  4567                           
  4568                           
  4569                           ;PIC16F877A_UART.c: 91:     char c;;PIC16F877A_UART.c: 92:     c = RCREG;
  4570     0F42  1283               	bcf	3,5	;RP0=0, select bank0
  4571     0F43  1303               	bcf	3,6	;RP1=0, select bank0
  4572     0F44  081A               	movf	26,w	;volatile
  4573     0F45  00F0               	movwf	UARTrcvChar@c
  4574                           
  4575                           ;PIC16F877A_UART.c: 93:     return c;
  4576     0F46  0870               	movf	UARTrcvChar@c,w
  4577     0F47                     i1l58:
  4578     0F47  0008               	return
  4579     0F48                     __end_of_UARTrcvChar:
  4580     007E                     btemp	set	126	;btemp
  4581     007E                     wtemp0	set	126
  4582                           
  4583                           	psect	idloc
  4584                           
  4585                           ;Config register IDLOC0 @ 0x2000
  4586                           ;	unspecified, using default values
  4587     2000                     	org	8192
  4588     2000  3FFF               	dw	16383
  4589                           
  4590                           ;Config register IDLOC1 @ 0x2001
  4591                           ;	unspecified, using default values
  4592     2001                     	org	8193
  4593     2001  3FFF               	dw	16383
  4594                           
  4595                           ;Config register IDLOC2 @ 0x2002
  4596                           ;	unspecified, using default values
  4597     2002                     	org	8194
  4598     2002  3FFF               	dw	16383
  4599                           
  4600                           ;Config register IDLOC3 @ 0x2003
  4601                           ;	unspecified, using default values
  4602     2003                     	org	8195
  4603     2003  3FFF               	dw	16383
  4604                           
  4605                           	psect	config
  4606                           
  4607                           ;Config register CONFIG @ 0x2007
  4608                           ;	Oscillator Selection bits
  4609                           ;	FOSC = HS, HS oscillator
  4610                           ;	Watchdog Timer Enable bit
  4611                           ;	WDTE = OFF, WDT disabled
  4612                           ;	Power-up Timer Enable bit
  4613                           ;	PWRTE = OFF, PWRT disabled
  4614                           ;	Brown-out Reset Enable bit
  4615                           ;	BOREN = ON, BOR enabled
  4616                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4617                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4618                           ;	Data EEPROM Memory Code Protection bit
  4619                           ;	CPD = OFF, Data EEPROM code protection off
  4620                           ;	Flash Program Memory Write Enable bits
  4621                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4622                           ;	In-Circuit Debugger Mode bit
  4623                           ;	DEBUG = 0x1, unprogrammed default
  4624                           ;	Flash Program Memory Code Protection bit
  4625                           ;	CP = OFF, Code protection off
  4626     2007                     	org	8199
  4627     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    512
    Data        25
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      71
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    modbusRcvResponse@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    modbusWriteRegisters@register_value	PTR unsigned int  size(1) Largest target is 4
		 -> register_write_buffer(BANK0[4]), 

    modbusWriteRegisters@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    modbusWriteCoils@coil_state	PTR unsigned char  size(1) Largest target is 2
		 -> coil_write_state(BANK0[2]), 

    modbusWriteCoils@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    modbusWriteRegister@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    modbusWriteCoil@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    modbusReadRegisters@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    modbusReadCoils@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    clearBuffer@buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    crc16@buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    RS485rcvString@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    RS485sendString@str	PTR unsigned char  size(1) Largest target is 25
		 -> error_msg(BANK0[19]), tx_buffer(BANK1[25]), 

    UARTrcvString@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    UARTsendString@str	PTR unsigned char  size(1) Largest target is 25
		 -> error_msg(BANK0[19]), tx_buffer(BANK1[25]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_modbusRcvResponse
    _modbusRcvResponse->_RS485rcvString
    _RS485rcvString->_UARTrcvString
    _UARTrcvString->_UARTrcvChar

Critical Paths under _main in BANK0

    _main->_modbusWriteRegisters
    _modbusWriteRegisters->_crc16
    _modbusWriteRegister->_crc16
    _modbusWriteCoils->_crc16
    _modbusWriteCoil->_crc16
    _modbusReadRegisters->_crc16
    _modbusReadCoils->_crc16
    _RS485sendString->_UARTsendString
    _UARTsendString->_UARTsendChar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   21390
                                             32 BANK0      3     3      0
                    _RS485sendString
                      _modbusRTUInit
                    _modbusReadCoils
                _modbusReadRegisters
                    _modbusWriteCoil
                   _modbusWriteCoils
                _modbusWriteRegister
               _modbusWriteRegisters
 ---------------------------------------------------------------------------------
 (1) _modbusWriteRegisters                                19    11      8    4075
                                             13 BANK0     19    11      8
                    _RS485sendString
                            ___awdiv
                        _clearBuffer
                              _crc16
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              3 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _modbusWriteRegister                                 10     3      7    3040
                                             13 BANK0     10     3      7
                    _RS485sendString
                        _clearBuffer
                              _crc16
 ---------------------------------------------------------------------------------
 (1) _modbusWriteCoils                                    18    10      8    3317
                                             13 BANK0     18    10      8
                    _RS485sendString
                        _clearBuffer
                              _crc16
 ---------------------------------------------------------------------------------
 (1) _modbusWriteCoil                                      9     3      6    3062
                                             13 BANK0      9     3      6
                    _RS485sendString
                        _clearBuffer
                              _crc16
 ---------------------------------------------------------------------------------
 (1) _modbusReadRegisters                                 13     5      8    3617
                                             13 BANK0     13     5      8
                    _RS485sendString
                        _clearBuffer
                              _crc16
 ---------------------------------------------------------------------------------
 (1) _modbusReadCoils                                     13     5      8    3617
                                             13 BANK0     13     5      8
                    _RS485sendString
                        _clearBuffer
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _crc16                                               10     8      2     769
                                              3 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (2) _clearBuffer                                          6     4      2     853
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _RS485sendString                                      3     3      0     662
                                              8 BANK0      3     3      0
                     _UARTsendString
 ---------------------------------------------------------------------------------
 (3) _UARTsendString                                       4     4      0     145
                                              4 BANK0      4     4      0
                       _UARTsendChar
 ---------------------------------------------------------------------------------
 (4) _UARTsendChar                                         1     1      0      22
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _modbusRTUInit                                        0     0      0       0
                          _RS485Init
 ---------------------------------------------------------------------------------
 (2) _RS485Init                                            0     0      0       0
                      _RS485TxConfig
                   _UARTTransRcvInit
 ---------------------------------------------------------------------------------
 (3) _UARTTransRcvInit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RS485TxConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0     451
                                              0 BANK0      3     3      0
                  _modbusRcvResponse
 ---------------------------------------------------------------------------------
 (6) _modbusRcvResponse                                    3     1      2     451
                                             11 COMMON     3     1      2
                     _RS485rcvString
 ---------------------------------------------------------------------------------
 (7) _RS485rcvString                                       5     3      2     396
                                              6 COMMON     5     3      2
                      _UARTrcvString
 ---------------------------------------------------------------------------------
 (8) _UARTrcvString                                        5     3      2     220
                                              1 COMMON     5     3      2
                        _UARTrcvChar
 ---------------------------------------------------------------------------------
 (9) _UARTrcvChar                                          1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RS485sendString
     _UARTsendString
       _UARTsendChar
   _modbusRTUInit
     _RS485Init
       _RS485TxConfig
       _UARTTransRcvInit
   _modbusReadCoils
     _RS485sendString
     _clearBuffer
     _crc16
   _modbusReadRegisters
     _RS485sendString
     _clearBuffer
     _crc16
   _modbusWriteCoil
     _RS485sendString
     _clearBuffer
     _crc16
   _modbusWriteCoils
     _RS485sendString
     _clearBuffer
     _crc16
   _modbusWriteRegister
     _RS485sendString
     _clearBuffer
     _crc16
   _modbusWriteRegisters
     _RS485sendString
     ___awdiv
     _clearBuffer
     _crc16

 _ISR (ROOT)
   _modbusRcvResponse
     _RS485rcvString
       _UARTrcvString
         _UARTrcvChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      87      12        0.0%
ABS                  0      0      87       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 17 08:25:46 2023

           __end_of_modbusWriteCoil 0782                                   pc 0002  
          modbusWriteCoils@coil_num 0032            __end_of_modbusWriteCoils 05C6  
                                l43 0FFF                                  l46 0F6B  
                                l55 07FB                                  l49 0F75  
                                l84 0F54                                  l93 0FC9  
                                l87 0F67                        ___awdiv@sign 0028  
                                fsr 0004           modbusReadCoils@start_coil 0031  
                               l220 0781                                 l213 06B2  
                               l206 063E                                 l223 07D6  
                               l233 0491                                 l229 05C5  
                               l237 052E                                 l178 00CB  
                               l196 00E9                                 l199 0F4D  
                               l482 071B                                 _GIE 005F  
                               _RD0 0040                                 u400 00E9  
                               u401 00E8                                 u410 06BA  
                               u411 06B9                                 u500 0712  
                               u420 06C5                                 u405 00E5  
                               u501 0711                                 u421 06C4  
                               u350 0F71                                 u510 05DF  
                               u430 06D6                                 u351 0F70  
                               u511 05DE                                 u431 06D5  
                               u360 07FB                                 u520 05EA  
                               u361 07FA                                 u521 05E9  
                               u530 0659                                 u450 06E8  
                               u610 0333                                 u531 0658  
                               u451 06E7                                 u611 0332  
                               u540 0664                                 u620 0355  
                               _ISR 00EA                                 u541 0663  
                               u445 06DA                                 u621 0354  
                               u390 00C7                                 u550 0747  
                               u470 06F9                                 u630 0377  
                               u391 00C6                                 u551 0746  
                               u471 06F8                                 u631 0376  
                               u560 0752                                 u640 0399  
                               u385 0095                                 u561 0751  
                               u465 06E9                                 u641 0398  
                               u570 0592                                 u490 070D  
                               u650 03B6                                 u707 0FC2  
                               u571 0591                                 u491 070C  
                               u475 06F5                                 u651 03B5  
                               u580 0495                                 u660 03D6  
                               u485 0701                                 u581 0494  
                               u661 03D5                                 u590 04FB  
                               u670 03F8                                 u575 058E  
                               u591 04FA                                 u671 03F7  
                               u680 041B                                 u681 041A  
                               u595 04F7                                 u697 0451  
                               _RX9 00C6                                 _TX9 04C6  
           modbusReadRegisters@mode 002F                                 fsr0 0004  
                               indf 0000                     ??_UARTrcvString 0073  
           UARTrcvString@rcv_buffer 0075  modbusWriteRegisters@start_register 0030  
                              ?_ISR 0070                                l1321 0F6B  
                              l1401 009B                                l1331 0FFA  
                              l1323 0F71                                l1411 00D1  
                              l1403 00B9                                l1333 0FFC  
                              l1341 07DD                                l1413 00D8  
                              l1405 00C7                                l1501 064C  
                              l1421 06BA                                l1335 0FFD  
                              l1343 07E8                                l1415 00DC  
                              l1511 0669                                l1503 0653  
                              l1431 06CE                                l1423 06BF  
                              l1337 0FFE                                l1329 0FE3  
                              l1345 07F0                                l1409 00CF  
                              l1521 0695                                l1505 0659  
                              l1601 0547                                l1441 06E4  
                              l1433 06D0                                l1425 06C1  
                              l1417 06B3                                l1371 0F4E  
                              l1339 07DA                                l1523 069A  
                              l1515 066B                                l1507 065E  
                              l1531 071F                                l1611 055D  
                              l1603 054C                                l1451 0707  
                              l1443 06E8                                l1435 06D6  
                              l1427 06C5                                l1419 06B6  
                              l1373 0F5D                                l1381 0FBC  
                              l1525 06A0                                l1517 067F  
                              l1509 0664                                l1541 073E  
                              l1533 0729                                l1621 05AD  
                              l1613 056C                                l1605 0551  
                              l1445 06F9                                l1437 06D9  
                              l1453 070D                                l1429 06CA  
                              l1701 0355                                l1375 0F62  
                              l1383 0FC6                                l1471 05DA  
                              l1527 06B1                                l1519 068F  
                              l1551 0757                                l1543 0742  
                              l1535 0730                                l1623 05B1  
                              l1615 0570                                l1607 0556  
                              l1455 0712                                l1447 06FF  
                              l1439 06E0                                l1711 03A0  
                              l1703 035C                                l1465 0F48  
                              l1377 0FB5                                l1393 0085  
                              l1473 05DF                                l1561 0774  
                              l1545 0747                                l1537 0734  
                              l1625 05B8                                l1617 0592  
                              l1609 055B                                l1457 0717  
                              l1449 0700                                l1641 0479  
                              l1633 045F                                l1721 03F8  
                              l1713 03B6                                l1705 0377  
                              l1379 0FB6                                l1395 008A  
                              l1491 0620                                l1483 05F1  
                              l1475 05E4                                l1467 05C9  
                              l1563 077A                                l1555 0759  
                              l1547 074D                                l1539 0739  
                              l1627 05BE                                l1619 05A5  
                              l1571 078F                                l1651 0495  
                              l1643 047E                                l1635 0469  
                              l1723 03FF                                l1715 03BD  
                              l1707 037E                                l1731 0422  
                              l1397 0090                                l1493 0626  
                              l1485 0605                                l1477 05EA  
                              l1469 05D3                                l1565 0780  
                              l1557 0769                                l1549 0752  
                              l1629 05C4                                l1581 07A9  
                              l1573 0796                                l1661 050E  
                              l1653 04BF                                l1645 0483  
                              l1637 0470                                l1725 0400  
                              l1717 03D6                                l1709 0399  
                              l1733 0449                                l1399 0094  
                              l1495 063D                                l1487 0615  
                              l1479 05EF                                l1559 076F  
                              l1591 07D5                                l1583 07BE  
                              l1575 079A                                l1671 052D  
                              l1663 0516                                l1655 04E3  
                              l1647 0488                                l1639 0474  
                              l1727 041B                                l1719 03DD  
                              l1489 061B                                l1585 07C4  
                              l1577 079F                                l1569 0785  
                              l1665 051A                                l1657 04E7  
                              l1649 048F                                l1499 0642  
                              l1595 0532                                l1587 07C9  
                              l1579 07A4                                l1667 0521  
                              l1659 04FB                                l1597 053C  
                              l1589 07CF                                l1669 0527  
                              l1781 042F                                l1693 0312  
                              l1599 0543                                l1695 0318  
                              l1697 0333                                l1699 033A  
                              _BRGH 04C2                                _CREN 00C4  
                              _PEIE 005E                                _RCIE 0465  
                              _RCIF 0065                                i1l62 0081  
                              i1l58 0F47                                i1l99 0FB1  
                              _SPEN 00C7                                _TRMT 04C1  
                              _TXEN 04C5                                _SYNC 04C4  
                              _main 0312                                btemp 007E  
                              start 0010                    ??_UARTsendString 0024  
                   _RS485sendString 0FB2                    ?_modbusReadCoils 002D  
                             ??_ISR 0020           modbusWriteCoil@coil_state 0032  
                             ?_main 0070                     __end_of___awdiv 071C  
                   ___awdiv@divisor 0023                               i1l240 0F87  
                             i1l144 00F4                     ___awdiv@counter 0027  
                             _RCREG 001A            __end_of_UARTTransRcvInit 1000  
                             _SPBRG 0099                               u60_20 00EE  
                             u60_21 00ED                               u37_20 004A  
                             u37_21 0049                               u37_25 0046  
                             _TXREG 0019        modbusWriteRegisters@checksum 003C  
                             _crc16 0082               _register_write_buffer 0056  
                             _state 0066   modbusReadRegisters@start_register 0031  
                             pclath 000A         modbusWriteRegister@checksum 0034  
                             status 0003                               wtemp0 007E  
                   __initialization 0013                        __end_of_main 045C  
                  ?_modbusWriteCoil 002D                 _modbusReadRegisters 063F  
                            ??_main 0040                              ?_crc16 0023  
                 __end_of_RS485Init 0F68                ?_modbusReadRegisters 002D  
                  ___awdiv@dividend 0025                              i1l1325 0F42  
                            i1l1351 0056                              i1l1353 005E  
                            i1l1355 0064                              i1l1363 006B  
                            i1l1347 0036                              i1l1365 0077  
                            i1l1357 0066                              i1l1349 004A  
                            i1l1461 0F77                              i1l1367 007F  
                            i1l1385 0F9C                              i1l1387 0F9F  
                            i1l1389 0FAD                              i1l1691 00EE  
                            i1l1689 00EA             __end_of_RS485sendString 0FCA  
                            _TRISD0 0440                              _TRISC6 043E  
                            _TRISC7 043F   modbusWriteRegisters@slave_address 002F  
                     _RS485TxConfig 0F4E    modbusWriteRegisters@register_num 0032  
                         ??___awdiv 0027                    ___awdiv@quotient 0029  
          modbusReadCoils@tx_buffer 0039                        ?_UARTrcvChar 0070  
   modbusReadRegisters@register_num 0033                 _modbusWriteRegister 0782  
                            saved_w 007E                        crc16@crcWord 002A  
             ??_modbusReadRegisters 0035    modbusReadRegisters@slave_address 0030  
                 UARTsendString@str 0027                    _coil_write_state 005A  
 modbusWriteRegister@register_value 0032             __end_of__initialization 0031  
              ?_modbusWriteRegister 002D                      ?_RS485TxConfig 0070  
                    __pcstackCOMMON 0070                        __pidataBANK0 0FCA  
                     __end_of_crc16 00CC        __end_of_modbusWriteRegisters 052F  
                 ?_modbusWriteCoils 002D                  ??_modbusWriteCoils 0035  
     modbusWriteRegisters@tx_buffer 003F                             ??_crc16 0025  
                        __pbssBANK0 005C                          __pbssBANK1 00A0  
                  ?_RS485sendString 0070               ??_modbusWriteRegister 0034  
                        __pmaintext 0312                   __end_of_wCRCTable 0312  
                        __pintentry 0004                   _modbusRcvResponse 0F76  
                ?_modbusRcvResponse 007B                   ?_UARTTransRcvInit 0070  
                ??_UARTTransRcvInit 0023               __end_of_UARTrcvString 0082  
               ??_modbusRcvResponse 007D                          __stringtab 0100  
                   ??_RS485TxConfig 0023                             ___awdiv 06B3  
         __end_of_modbusRcvResponse 0F88                             __ptext1 045C  
                           __ptext2 06B3                             __ptext3 0782  
                           __ptext4 052F                             __ptext5 071C  
                           __ptext6 063F                             __ptext7 05C6  
                           __ptext8 0082                             __ptext9 00CC  
                 modbusWriteCoils@i 003D                             clrloop0 0F56  
                     _modbusRTUInit 0F48                end_of_initialization 0031  
              _modbusWriteRegisters 045C                       ?_UARTsendChar 0070  
                         _RS485Init 0F5D                       ??_clearBuffer 0025  
                        _rcv_buffer 00A0        modbusWriteCoil@slave_address 002F  
               modbusReadCoils@mode 002F                        __pstringtext 0100  
  _uart_str_idx@PIC16F877A_UART$F67 0062       modbusWriteCoils@slave_address 002F  
                    ?_modbusRTUInit 0070                      ??_UARTsendChar 0023  
             ?_modbusWriteRegisters 002D              modbusReadRegisters@len 002D  
                        ?_RS485Init 0070    modbusWriteRegister@slave_address 002F  
                    _RS485rcvString 0F9B                 __end_of_clearBuffer 00EA  
       __end_of_modbusReadRegisters 06B3   _uart_str_idx@PIC16F877A_UART$F162 0060  
 _uart_str_idx@PIC16F877A_UART$F199 005C             modbusReadCoils@checksum 0037  
               start_initialization 0013                         __end_of_ISR 00FF  
           modbusReadCoils@coil_num 0033                   ??_modbusReadCoils 0035  
            __end_of_RS485rcvString 0FB2        modbusReadRegisters@tx_buffer 0039  
              RS485rcvString@length 0076               _master_rcv_buffer_len 005E  
                        init_fetch0 0F88                         __pdataBANK0 0043  
          RS485rcvString@rcv_buffer 007A                         crc16@buffer 002C  
                         _wCRCTable 0112                         crc16@length 0023  
                   ??_modbusRTUInit 0023                           ___latbits 0002  
                     __pcstackBANK0 0020         __end_of_modbusWriteRegister 07D7  
            ??_modbusWriteRegisters 0035                   ??_modbusWriteCoil 0033  
                       ??_RS485Init 0023                  RS485rcvString@done 0078  
                       _clearBuffer 00CC                           crc16@temp 0029  
                   ?_RS485rcvString 0076                            ?___awdiv 0023  
               modbusWriteCoil@coil 0030                __end_of_UARTsendChar 0F76  
                    _UARTsendString 07D7           modbusWriteCoils@tx_buffer 003E  
               modbusWriteCoils@len 002D                  RS485sendString@str 002A  
       modbusRcvResponse@rcv_buffer 007D                           _error_msg 0043  
                 interrupt_function 0004                           clear_ram0 0F55  
             __end_of_RS485TxConfig 0F55             modbusWriteRegisters@len 002D  
                modbusReadCoils@len 002D              __end_of_UARTsendString 07FC  
                      clearBuffer@i 0027                         __stringbase 0112  
                     ??_UARTrcvChar 0070                           _tx_buffer 00B9  
                  _modbusWriteCoils 052F        modbusReadCoils@slave_address 0030  
                 clearBuffer@buffer 0028          modbusWriteCoils@coil_state 0034  
                   ?_UARTsendString 0070                     UARTsendString@i 0025  
               UARTrcvString@length 0071                  __end_of__stringtab 0112  
                   _modbusReadCoils 05C6                   ??_RS485sendString 0028  
          modbusWriteCoil@tx_buffer 0035                            __ptext10 0FB2  
                          __ptext11 07D7                            __ptext20 0035  
                          __ptext12 0F68                            __ptext21 0F42  
                          __ptext13 0F48                            __ptext14 0F5D  
                          __ptext15 0FE3                            __ptext16 0F4E  
                          __ptext17 00EA                            __ptext18 0F76  
                          __ptext19 0F9B                 __end_of_UARTrcvChar 0F48  
                modbusWriteCoil@len 002D                       _UARTrcvString 0035  
                  _UARTTransRcvInit 0FE3             modbusWriteCoil@checksum 0033  
            modbusWriteRegister@len 002D        modbusWriteRegister@register_ 0030  
                   _modbusWriteCoil 071C                            init_ram0 0F8C  
                    ?_UARTrcvString 0071                    ??_RS485rcvString 0078  
                          intlevel1 0000                        _UARTsendChar 0F68  
                      ?_clearBuffer 0023        modbusWriteRegister@tx_buffer 0036  
                         stringcode 010A                        _uart_str_idx 0064  
             modbusWriteRegisters@i 003E             __end_of_modbusReadCoils 063F  
                     UARTsendChar@c 0023         modbusReadRegisters@checksum 0037  
        modbusWriteCoils@start_coil 0030                         _UARTrcvChar 0F42  
                      UARTrcvChar@c 0070                            stringtab 0100  
             __end_of_modbusRTUInit 0F4E                      clearBuffer@len 0023  
          modbusWriteCoils@checksum 003B  modbusWriteRegisters@register_value 0034  
